<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">

	<title>Planet Sage</title>
	<link rel="self" href="http://planet.sagemath.org/atom.xml"/>
	<link href="http://planet.sagemath.org"/>
	<id>http://planet.sagemath.org/atom.xml</id>
	<updated>2017-10-08T03:50:01+00:00</updated>
	<generator uri="http://www.planetplanet.org/">Planet/2.0 +http://www.planetplanet.org</generator>

	<entry>
		<title type="html">DataDog's pricing: don't make the same mistake I made</title>
		<link href="http://sagemath.blogspot.com/2016/07/datadogs-pricing-dont-make-same-mistake.html"/>
		<id>tag:blogger.com,1999:blog-6365588202025292315.post-6949985998313614355</id>
		<updated>2017-09-22T13:03:54+00:00</updated>
		<content type="html">(I wrote a 1-year &lt;a href=&quot;http://sagemath.blogspot.com/2017/09/datadog-dont-make-same-mistake-i-did.html&quot;&gt;followup post here.&lt;/a&gt;)&lt;br /&gt;&lt;br /&gt;I stupidly made a mistake recently by choosing to use &lt;a href=&quot;https://www.datadoghq.com/&quot;&gt;DataDog&lt;/a&gt; for monitoring the infrastructure for my startup (&lt;a href=&quot;https://cloud.sagemath.com/&quot;&gt;SageMathCloud&lt;/a&gt;).&lt;br /&gt;&lt;br /&gt;I got bit by their pricing UI design that looks similar to many other sites, but is different in a way that caused me to &lt;strong&gt;spend far more money than I expected.&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;I'm writing this post so that you won't make the same mistake I did. &amp;nbsp;As a product, DataDog is of course a lot of hard work to create, and they can try to charge whatever they want. However, my problem is that &lt;strong&gt;what&lt;/strong&gt; they are going to charge was confusing and misleading to me.&lt;br /&gt;&lt;br /&gt;I wanted to see some nice web-based data about my new autoscaled Kubernetes cluster, so I looked around at options. DataDog looked like a new and awesomely-priced service for seeing live logging. And when I looked (not carefully enough) at the pricing, it looked like only $15/month to monitor a bunch of machines. I'm naive about the cost of cloud monitoring -- I've been using Stackdriver on Google cloud platform for years, which is completely free (for now, though that will change), and I've also used self hosted open solutions, and some quite nice solutions I've written myself. So my expectations were way out of whack.&lt;br /&gt;&lt;br /&gt;Ever busy, I signed up for the &quot;$15/month plan&quot;:&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-NK09JkZDOD0/V5Jyf6jYy2I/AAAAAAABYNA/l_LP-NJv6hgODAvvaO868frbtJ4hP9SUQCLcB/s1600/dd-pricing.png&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;225&quot; src=&quot;https://1.bp.blogspot.com/-NK09JkZDOD0/V5Jyf6jYy2I/AAAAAAABYNA/l_LP-NJv6hgODAvvaO868frbtJ4hP9SUQCLcB/s400/dd-pricing.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;One of the people on my team spent a little time and installed datadog on all the VM's in our cluster, and also made DataDog automatically start running on any nodes in our Kubernetes cluster. That's a lot of machines.&lt;br /&gt;&lt;br /&gt;Today I got the first monthly bill, which is for the month that just happened. The cost was $639.19 USD charged to my credit card. I was really confused for a while, wondering if I had bought a year subscription.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;https://3.bp.blogspot.com/-LK7iRxeqMKI/V5JymhrBN-I/AAAAAAABYNE/lCA0YC3cfSMJ9LuTsFgsrt8vTUR4rvRIQCLcB/s1600/dd-invoice.png&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;198&quot; src=&quot;https://3.bp.blogspot.com/-LK7iRxeqMKI/V5JymhrBN-I/AAAAAAABYNE/lCA0YC3cfSMJ9LuTsFgsrt8vTUR4rvRIQCLcB/s400/dd-invoice.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;After a while I realized that the cost is per host! When I looked at the pricing page the first time, I had just saw in big letters &quot;$15&quot;, and &quot;$18 month-to-month&quot; and &quot;up to 500 hosts&quot;. I completely missed the &quot;Per Host&quot; line, because I was so naive that I didn't think the price could possibly be that high.&lt;br /&gt;&lt;br /&gt;I tried immediately to delete my credit card and cancel my plan, but the &quot;Remove Card&quot; button is greyed out, and it says you can &quot;modify your subscription by contacting us at success@datadoghq.com&quot;:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;https://3.bp.blogspot.com/-iohuYjKf3_A/V5JzPDN7qHI/AAAAAAABYNM/QBn6pqJ_OL0roteJIyxHWx5wajJRs4_EwCLcB/s1600/dd-cancel.png&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;318&quot; src=&quot;https://3.bp.blogspot.com/-iohuYjKf3_A/V5JzPDN7qHI/AAAAAAABYNM/QBn6pqJ_OL0roteJIyxHWx5wajJRs4_EwCLcB/s400/dd-cancel.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;So I wrote to success@datadoghq.com:&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Dear Datadog,&lt;br /&gt;&lt;br /&gt;Everybody on my team was completely mislead by your&lt;br /&gt;horrible pricing description.&lt;br /&gt;&lt;br /&gt;Please cancel the subscription for wstein immediately&lt;br /&gt;and remove my credit card from your system.&lt;br /&gt;&lt;br /&gt;This is the first time I've wasted this much money&lt;br /&gt;by being misled by a website in my life.&lt;br /&gt;&lt;br /&gt;I'm also very unhappy that I can't delete my credit&lt;br /&gt;card or cancel my subscription via your website.  It's&lt;br /&gt;like one more stripe API call to remove the credit card&lt;br /&gt;(I know -- I implemented this same feature for my site).&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;hr /&gt;And they responded:&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Thanks for reaching out. If you'd like to cancel your&lt;br /&gt;Datadog subscription, you're able to do so by going into&lt;br /&gt;the platform under 'Plan and Usage' and choose the option&lt;br /&gt;downgrade to 'Lite', that will insure your credit card&lt;br /&gt;will not be charged in the future. Please be sure to&lt;br /&gt;reduce your host count down to the (5) allowed under&lt;br /&gt;the 'Lite' plan - those are the maximum allowed for&lt;br /&gt;the free plan.&lt;br /&gt;&lt;br /&gt;Also, please note you'll be charged for the hosts&lt;br /&gt;monitored through this month. Please take a look at&lt;br /&gt;our billing FAQ.&lt;/code&gt;&lt;/pre&gt;&lt;hr /&gt;&lt;br /&gt;They were right -- I was able to uninstall the daemons, downgrade to Lite, remove my card, etc. all through the website without manual intervention.&lt;br /&gt;&lt;br /&gt;When people have been confused with billing for &lt;a href=&quot;https://cloud.sagemath.com/&quot;&gt;my site&lt;/a&gt;, I have apologized, immediately refunded their money, and opened a ticket to make the UI clearer. &amp;nbsp;DataDog didn't do any of that.&lt;br /&gt;&lt;br /&gt;I wish DataDog would at least clearly state that when you use their service you are potentially on the hook for an &lt;strong&gt;arbitrarily large&lt;/strong&gt; charge for any month. Yes, if they had made that clear, they wouldn't have had me as a customer, so they are not incentivized to do so.&lt;br /&gt;&lt;br /&gt;A fool and their money are soon parted. I hope this post reduces the chances you'll be a fool like me. &amp;nbsp;If you chose to use DataDog, and their monitoring tools are very impressive, I hope you'll be aware of the cost.  &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;ADDED:&lt;br /&gt;&lt;br /&gt;On &lt;a href=&quot;https://news.ycombinator.com/threads?id=williamstein&quot; target=&quot;_blank&quot;&gt;Hacker News&lt;/a&gt; somebody asked: &quot;&lt;span&gt;How could their pricing page be clearer? It says per host in fairly large letters underneath it.&amp;nbsp;&lt;/span&gt;&lt;span&gt;I'm asking because I will be designing a similar page soon (that's also billed per host) and I'd like to avoid the same mistakes.&quot; &amp;nbsp;My answer:&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;[EDIT: This pricing page by the top poster in this thread is way better than I suggest below -- https://www.serverdensity.com/pricing/]&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;1.&amp;nbsp;&lt;/span&gt;&lt;i&gt;&lt;/i&gt;&lt;span&gt;VERY clearly&lt;/span&gt;&lt;i&gt;&lt;/i&gt;&lt;span&gt;&amp;nbsp;state that when you sign up for the service, then you are on the hook for up to $18*500 = $9000 + tax in charges for any month. Even Google compute engine (and Amazon) don't create such a trap, and have a clear explicit quota increase process.&lt;/span&gt;&lt;br /&gt;&lt;div&gt;2. Instead of &quot;HUGE $15&quot; newline &quot;(small light) per host&quot;, put &quot;HUGE $18 per host&quot; all on the same line. It would easily fit. I don't even know how the $15/host datadog discount could ever really work, given that the number of hosts might constantly change and there is no prepayment.&lt;/div&gt;&lt;div&gt;3. Inform users clearly in the UI at any time how much they are going to owe for that month (so far), rather than surprising them at the end. Again, Google Cloud Platform has a very clear running total in their billing section, and any time you create a new VM it gives the exact amount that VM will cost per month.&lt;/div&gt;&lt;div&gt;4. If one works with a team, 3 is especially important. The reason that I had monitors on 50+ machines is that another person working on the project, who never looked at pricing or anything, just thought -- he I'll just set this up everywhere. He had no idea there was a per-machine fee.&lt;/div&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;div class=&quot;reply&quot;&gt;&lt;div&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;&lt;span&gt;&lt;u&gt;&lt;a href=&quot;https://news.ycombinator.com/reply?id=12146416&amp;goto=item%3Fid%3D12145879%2312146416&quot;&gt;reply&lt;/a&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;&lt;/span&gt;&lt;/span&gt;</content>
		<author>
			<name>William Stein</name>
			<email>noreply@blogger.com</email>
			<uri>http://sagemath.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Sage: Open Source Mathematics Software</title>
			<subtitle type="html">This is my blog about things related to Sage.</subtitle>
			<link rel="self" href="http://sagemath.blogspot.com/feeds/posts/default"/>
			<id>tag:blogger.com,1999:blog-6365588202025292315</id>
			<updated>2017-10-06T20:16:13+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">DataDog: Don't make the same mistake I did -- a followup and thoughts about very unhappy customers</title>
		<link href="http://sagemath.blogspot.com/2017/09/datadog-dont-make-same-mistake-i-did.html"/>
		<id>tag:blogger.com,1999:blog-6365588202025292315.post-8893535883917863217</id>
		<updated>2017-09-22T12:32:15+00:00</updated>
		<content type="html">This is a followup to &lt;a href=&quot;http://sagemath.blogspot.com/2016/07/datadogs-pricing-dont-make-same-mistake.html&quot;&gt;my previous blog post about DataDog billing&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;TL;DR:&lt;br /&gt;- I don't recommend DataDog,&lt;br /&gt;- dealing with unhappy customers is hard,&lt;br /&gt;- monitoring for data science nerds?&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=15315028&quot; target=&quot;_blank&quot;&gt;Hacker News Comments&lt;/a&gt;&lt;br /&gt;&lt;h2 id=&quot;datadog-at-google-cloud-summit&quot;&gt;DataDog at Google Cloud Summit&lt;/h2&gt;I was recently at the &lt;a href=&quot;https://cloudplatformonline.com/summit-seattle-2017.html&quot;&gt;Seattle Google Cloud Summit&lt;/a&gt; and &lt;a href=&quot;https://www.datadoghq.com/&quot;&gt;DataDog&lt;/a&gt; was well represented, with the biggest booth and top vendor billing during the keynote. Clearly they are doing something right. I had a past &lt;a href=&quot;http://sagemath.blogspot.com/2016/07/datadogs-pricing-dont-make-same-mistake.html&quot;&gt;unpleasant experience&lt;/a&gt; with them, and I had just been auditing my records and discovered that last year DataDog had actually charged me a&lt;b&gt; lot &lt;/b&gt;more than I thought, so was kind of annoyed. Nonetheless, they kept coming up and talking to me, server monitoring is life-and-death important to me, and their actual software is very impressive in some ways.&lt;br /&gt;&lt;br /&gt;Nick Parisi started talking with me about DataDog. He sincerely wanted to know about my past experience with monitoring and the DataDog product, which he was clearly very enthuisiastic about. So I told him a bit, and he encouraged me to tell him more, explaining that he did not work at DataDog last year, and that he would like to know what happened. So he gave me his email, and he was &lt;em&gt;very genuinely concerned and helpful&lt;/em&gt;, so I sent him an email with a link to my post, etc. I didn't receive a response, so a week later I asked why, and received a followup email from Jay Robichau, who is DataDog's Director of Sales.&lt;br /&gt;&lt;h2 id=&quot;conference-call-with-datadog&quot;&gt;Conference Call with DataDog&lt;/h2&gt;Jay setup a conference call with me today at 10am (September 22, 2017). Before the call, I sent him a summary of my blog post, and also requested a refund, especially for the suprise bill they sent me nearly 6 weeks after my post.&lt;br /&gt;&lt;br /&gt;During the call, Jay explained that he was &quot;protecting&quot; Nick from me, and that I would mostly talk with Michelle Danis who is in charge of customer success. My expectation for the call is that we would find some common ground, and that they would at least appreciate the chance to make things right and talk with an unhappy customer. I was also curious about how a successful startup company addresses the concerns of an unhappy customer (me).&lt;br /&gt;&lt;br /&gt;I expected the conversation to be difficult but go well, with me writing a post singing the praises of the charming DataDog sales and customer success people. A few weeks ago &lt;a href=&quot;https://cocalc.com/&quot;&gt;CoCalc.com&lt;/a&gt; (my employer) had a very unhappy customer who got (rightfully) angry over a miscommunication, told us he would no longer use our product, and would definitely not recommend it to anybody else. I wrote to him wanting to at least continue the discussion and help, but he was completely gone. &lt;em&gt;I would do absolutely anything I could to ensure he is a satisfied, if only he would give me the chance.&lt;/em&gt; Also, there was &lt;a href=&quot;https://cre8math.com/2017/08/27/to-processing-i/comment-page-1/&quot;&gt;a recent blog post&lt;/a&gt; from somebody unhappy with using CoCalc/Sage for graphics, and I reached out to them as best I could to at least clarify things...&lt;br /&gt;&lt;br /&gt;In any case, here's what DataDog charged us as a result of us running their daemon on a few dozen containers in our Kubernetes cluster (a contractor who is not a native English speaker actually setup these monitors for us):&lt;br /&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;07/22/2016  449215JWJH87S8N4  DATADOG 866-329-4466 NY  $639.19&lt;br /&gt;08/29/2016  2449215L2JH87V8WZ DATADOG 866-329-4466 NY  $927.22&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;I was shocked by the 07/22 bill which spured my post, and discovered the 8/29 one only later. We canceled our subscription on July 22 (cancelling was difficult in itself).&lt;br /&gt;&lt;br /&gt;Michelle started the conference call by explaining that the 08/29 bill was for charges incurred before 07/22, and that &lt;strong&gt;their billing system has over a month lag&lt;/strong&gt; (and it does even today, unlike Google Cloud Platform, say). Then Michelle explained at length many of the changes that DataDog has made to their software to address the issues I (and others?) have pointed out with their pricing description and billing. She was very interested in whether I would be a DataDog customer in the future, and when I said no, she explained that they would not refund my money since the bill was not a mistake.&lt;br /&gt;&lt;br /&gt;I asked if they now provide a periodic summary of the upcoming bill, as Google cloud platform (say) does. She said that today they don't, though they are working on it. They do now provide a summary of usage so far in an admin page.&lt;br /&gt;&lt;br /&gt;Finally, I explained in no uncertain terms that I felt misled by their pricing. I expected that they would understand, and pointed out that they had just described to me many ways in which they were addressing this very problem. Very surprisingly, Michelle's response was that she absolutely would not agree that there was any problem with their pricing description a year ago, and they definitely would not refund my money. She kept bringing up the terms of service. I agreed that I didn't think legally they were in the wrong, given what she had explained, just that -- as they had just pointed out -- their pricing and billing was unclear in various ways. They would not agree at all.&lt;br /&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;strong&gt;I can't recommend doing business with DataDog. I had very much hoped to write the opposite in this updated post. Unfortunately, their pricing and terms are still confusing today compared to competitors, and they are unforgiving of mistakes. This dog bites. &amp;nbsp; &amp;nbsp;&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;(&lt;strong&gt;Disclaimer:&lt;/strong&gt; I took notes during the call, but most of the above is from memory, and I probably misheard or misunderstood something. I invite comments from DataDog to set the record straight.)&lt;br /&gt;&lt;br /&gt;Also, for what it is worth, I definitely&amp;nbsp;&lt;b&gt;do&amp;nbsp;&lt;/b&gt;recommend Google Cloud Platform. &amp;nbsp;They put in the effort to do many things right regarding clear billing.&lt;br /&gt;&lt;h2 id=&quot;how-do-startups-deal-with-unhappy-customers&quot;&gt;How do Startups Deal with Unhappy Customers?&lt;/h2&gt;I am very curious about how other&lt;b&gt;&lt;i&gt; startups&lt;/i&gt;&lt;/b&gt; deal with unhappy customers. At CoCalc we have had very few &quot;major incidents&quot; yet... but I want to be as prepared as possible. At the Google Cloud Summit, I went to some amazing &quot;war storries by SRE's&quot; session in which they talked about situations they had been in years ago in which their decisions meant the difference between whether they would have a company or job tomorrow or not. These guys clearly have amazing instincts for when a problem was do-or-die serious and when it wasn't. And their deep preparation &quot;in depth&quot; was WHY they were on that stage, and a big reason why older companies like Google are still around. Having a strategy for addressing very angry customers is surely just as important.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;http://3.bp.blogspot.com/-91tgUApR4-0/WcVgtf2unPI/AAAAAAABZbA/i2UM_kTIEiQNgKw6qXepuG0c-LKA1SiUQCK4BGAYYCw/s1600/sre.jpg&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;170&quot; src=&quot;https://3.bp.blogspot.com/-91tgUApR4-0/WcVgtf2unPI/AAAAAAABZbA/i2UM_kTIEiQNgKw6qXepuG0c-LKA1SiUQCK4BGAYYCw/s400/sre.jpg&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;center&gt;&lt;/center&gt;&lt;center&gt; &lt;b&gt;Google SRE's&lt;/b&gt;: these guys are serious. &lt;br /&gt; &lt;br /&gt;&lt;/center&gt;I mentioned my DataDog story to a long-time Google employee there (16 years!) and he said he had recently been involved in a similar situation with Google's Stackdriver monitoring, where the bill to a customer was $85K in a month just for Stackdriver. I asked what Google did, and he said they refunded the money, then worked with the customer to better use their tools.&lt;br /&gt;&lt;br /&gt;There is of course no way to please all of the people all of the time. However, I genuinely feel that I was ripped off and misled by DataDog, but I have the impression that Jay and Michelle honestly view me as some jerk trying to rip them off for $1500. &amp;nbsp; And they probably hate me for telling you about my experiences.&lt;br /&gt;&lt;br /&gt;So far, with CoCalc we charge customers in advance for any service we provide, so less people are surprised by a bill. &amp;nbsp;Sometimes there are problems with recurring subscriptions when a person is charged for the upcoming month of a subscription, and don't want to continue (e.g., because their course is over), we always fully refund the charge. What does your company do? Why? I do worry that our billing model means that we miss out on potential revenue.&lt;br /&gt;&lt;br /&gt;We all know what successful huge consumer companies like Amazon and Wal-Mart do.&lt;br /&gt;&lt;h2 id=&quot;monitoring-for-data-science-nerds&quot;&gt;Monitoring for Data Science Nerds?&lt;/h2&gt;I wonder if there is interest in a service like DataDog, but targeted at Data Science Nerds, built on CoCalc, which provides hosted collaborative Jupyter notebooks with Pandas, R, etc., pre-installed. &lt;a href=&quot;https://promcon.io/2017-munich/talks/analyze-prometheus-metrics-like-a-data-scientist/&quot;&gt;This talk&lt;/a&gt; at PrometheusCon 2017 mostly discussed the friction that people face moving data from Prometheus to analyze using data science tools (e.g., R, Python, Jupyter). CoCalc provides a collaborative data science environment, so if we were to smooth over those points of friction, perhaps it could be useful to certain people. And &lt;a href=&quot;https://cocalc.com/policies/pricing.html&quot;&gt;much more efficient...&lt;/a&gt;</content>
		<author>
			<name>William Stein</name>
			<email>noreply@blogger.com</email>
			<uri>http://sagemath.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Sage: Open Source Mathematics Software</title>
			<subtitle type="html">This is my blog about things related to Sage.</subtitle>
			<link rel="self" href="http://sagemath.blogspot.com/feeds/posts/default"/>
			<id>tag:blogger.com,1999:blog-6365588202025292315</id>
			<updated>2017-10-06T20:16:13+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">RethinkDB must relicense NOW</title>
		<link href="http://sagemath.blogspot.com/2016/10/rethinkdb-must-relicense-now-what-is.html"/>
		<id>tag:blogger.com,1999:blog-6365588202025292315.post-6758158987467701094</id>
		<updated>2017-06-01T13:25:01+00:00</updated>
		<content type="html">&lt;h2&gt;What is RethinkDB?&lt;/h2&gt;&lt;div&gt;&lt;i&gt;&lt;b&gt;UPDATE:&lt;/b&gt; &amp;nbsp;Several months after I wrote this post, RethinkDB was relicensed. &amp;nbsp;For &lt;a href=&quot;https://github.com/sagemathinc/cocalc&quot; target=&quot;_blank&quot;&gt;the CoCalc project&lt;/a&gt;, it was too late, and by then we had &lt;a href=&quot;http://blog.sagemath.com/2017/02/09/rethinkdb-vs-postgres.html&quot; target=&quot;_blank&quot;&gt;already switched to PostgreSQL&lt;/a&gt;.&amp;nbsp;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;RethinkDB is a &lt;strong&gt;INCREDIBLE&lt;/strong&gt; high quality polished open source realtime database that is easy to deploy, shard, replicate, and supports a reactive client programming model, which is useful for collaborative web-based applications. Shockingly, the 7-year old company that created RethinkDB &lt;a href=&quot;https://rethinkdb.com/blog/&quot;&gt;has just shutdown&lt;/a&gt;. I am the CEO of a company, &lt;a href=&quot;https://cloud.sagemath.com/&quot;&gt;SageMath, Inc.,&lt;/a&gt; that uses RethinkDB very heavily, so I have a strong interest in RethinkDB surviving as an independent open source project.&lt;br /&gt;&lt;h2 id=&quot;three-types-of-open-source-projects&quot;&gt;Three Types of Open Source Projects&lt;/h2&gt;There are many types of open source projects. &lt;a href=&quot;https://github.com/rethinkdb/rethinkdb/graphs/contributors?from=2015-09-10&amp;to=2016-10-10&amp;type=c&quot;&gt;RethinkDB was&lt;/a&gt; the type of open source project where most work on RethinkDB has been fulltime focused work, done by employees of the RethinkDB company. RethinkDB is licensed under the AGPL, but the company &lt;a href=&quot;https://www.rethinkdb.com/faq/&quot;&gt;promised to make&lt;/a&gt; the software available to customers under other licenses.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Academia:&lt;/strong&gt; I started the &lt;a href=&quot;http://sagemath.org/&quot;&gt;SageMath&lt;/a&gt; open source math software project in 2005, which has &lt;a href=&quot;https://trac.sagemath.org/&quot;&gt;over 500 contributors&lt;/a&gt;, and a relatively healthy volunteer ecosystem, with about hundred contributors to each release, and many releases each year. These are mostly volunteer contributions by academics: usually grad students, postdocs, and math professors. They contribute because SageMath is directly relevant to their research, and they often contribute state of the art code that implements algorithms they have created or refined as part of their research. Sage is licensed under the GPL, and that license has worked extremely well for us. Academics sometimes even get significant grants from &lt;a href=&quot;https://groups.google.com/forum/#!topic/sage-edu/9FP4mR_Pjbc&quot;&gt;the NSF&lt;/a&gt; or &lt;a href=&quot;http://opendreamkit.org/&quot;&gt;the EU&lt;/a&gt; to support Sage development.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Companies:&lt;/strong&gt; I also started the &lt;a href=&quot;http://cython.org/&quot;&gt;Cython&lt;/a&gt; compiler project in 2007, which has had dozens of contributors and is now the defacto standard for writing or wrapping fast code for use by Python. The developers of Cython mostly work at companies (e.g., Google) as a side project in their spare time. (Here's a &lt;a href=&quot;https://mail.python.org/pipermail/cython-devel/2016-October/004948.html&quot;&gt;message today about a new release&lt;/a&gt; from a Cython developer, who works at Google.) Cython is licensed under the Apache License.&lt;br /&gt;&lt;h2 id=&quot;what-rethinkdb-will-become&quot;&gt;What RethinkDB Will Become&lt;/h2&gt;RethinkDB will no longer be an open source project whose development is sponsored by a single company dedicated to the project. Will it be an academic project, a company-supported project, or dead?&lt;br /&gt;&lt;br /&gt;A friend of mine at Oxford University surveyed his &lt;strong&gt;academic&lt;/strong&gt; CS colleagues about RethinkDB, and they said they had zero interest in it. Indeed, from an academic research point of view, I agree that &lt;strong&gt;there is nothing interesting about RethinkDB&lt;/strong&gt;. I myself am a college professor, and understand these people! Academic volunteer open source contributors are definitely not going to come to RethinkDB's rescue. The value in RethinkDB is not in the innovative new algorithms or ideas, but in the high quality carefully debugged implementations of standard algorithms (largely the work of bad ass German programmer Daniel Mewes). The RethinkDB devs had to carefully tune each parameter in those algorithms based on extensive automated testing, user feedback, the Jepsen tests, etc.&lt;br /&gt;&lt;br /&gt;That leaves companies. Whether or not you like or agree with this, many companies will &lt;a href=&quot;https://www.google.com/search?q=google+agpl+will+not+touch&amp;rlz=1C5CHFA_enUS691US691&amp;oq=google+agpl+will+not+touch&amp;aqs=chrome..69i57j69i64.4391j0j7&amp;sourceid=chrome&amp;ie=UTF-8&quot;&gt;not touch AGPL licensed code&lt;/a&gt;:&lt;br /&gt;&lt;blockquote&gt;&lt;em&gt;&quot;Google open source guru Chris DiBona says that the web giant continues to ban the lightning-rod AGPL open source license within the company because doing so &quot;saves engineering time&quot; and because most AGPL projects are of no use to the company.&quot;&lt;/em&gt;&lt;/blockquote&gt;This is just the way it is -- it's psychology and culture, so deal with it. In contrast, companies very frequently embrace open source code that is licensed under the Apache or BSD licenses, and they keep such projects alive. The extremely popular PostgreSQL database is &lt;a href=&quot;https://www.postgresql.org/about/licence/&quot;&gt;licensed under an almost-BSD license&lt;/a&gt;. MySQL is freely licensed under the GPL, but &lt;a href=&quot;http://www.mysql.com/about/legal/licensing/oem/&quot;&gt;there are good reasons&lt;/a&gt; why people buy a commercial MySQL license (from Oracle) for MySQL. Like RethinkDB, MongoDB is AGPL licensed, but they are &lt;a href=&quot;https://www.mongodb.com/community/licensing&quot;&gt;happy to sell&lt;/a&gt; a different license to companies.&lt;br /&gt;&lt;br /&gt;With RethinkDB today, the only option is AGPL. This very strongly discourage use by the only possible group of users and developers that have any chance to keep RethinkDB from death. If this situation is not resolved as soon as possible, I am &lt;strong&gt;extremely afraid&lt;/strong&gt; that it never will be resolved. Ever. If you care about RethinkDB, you should be afraid too. Ignoring the landscape and culture of volunteer open source projects is dangerous.&lt;br /&gt;&lt;h2 id=&quot;a-proposal&quot;&gt;A Proposal&lt;/h2&gt;I don't know who can make the decision to relicense RethinkDB. I don't kow what is going on with investors or who is in control. I am an outsider. Here is a proposal that might provide a way out &lt;strong&gt;today&lt;/strong&gt;:&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;PROPOSAL:&lt;/strong&gt; Dear RethinkDB, sell me an Apache (or BSD) license to the RethinkDB source code. Make this the last thing your company sells before it shuts down. Just do it.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=12680444&quot; target=&quot;_blank&quot;&gt;Hacker News Discussion&lt;/a&gt;</content>
		<author>
			<name>William Stein</name>
			<email>noreply@blogger.com</email>
			<uri>http://sagemath.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Sage: Open Source Mathematics Software</title>
			<subtitle type="html">This is my blog about things related to Sage.</subtitle>
			<link rel="self" href="http://sagemath.blogspot.com/feeds/posts/default"/>
			<id>tag:blogger.com,1999:blog-6365588202025292315</id>
			<updated>2017-10-06T20:16:13+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">SageMath GSoC 2017 Projects</title>
		<link href="http://blog.harald.schil.ly/2017/05/sagemath-gsoc-2017-projects.html"/>
		<id>tag:blogger.com,1999:blog-3473399517246044360.post-5304490995105111973</id>
		<updated>2017-05-05T18:03:53+00:00</updated>
		<content type="html">&lt;div dir=&quot;ltr&quot;&gt;&lt;h2&gt;&lt;span&gt;6 GSoC SageMath Projects&lt;/span&gt;&lt;/h2&gt;&lt;span&gt;During the past couple of summers, SageMath successfully managed many &lt;a href=&quot;https://summerofcode.withgoogle.com/&quot;&gt;Google Summer of Code&lt;/a&gt; projects. This year we are again &lt;a href=&quot;https://summerofcode.withgoogle.com/organizations/5790079692832768/&quot;&gt;&lt;b&gt;happy to have six projects&lt;/b&gt;&lt;/a&gt;:&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;h3&gt;&lt;span&gt;Implementing matroid classes and plotting improvements&lt;/span&gt;&lt;/h3&gt;&lt;span&gt;(Zachary Gershkoff /&amp;nbsp;Stefan van Zwam)&lt;/span&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;&lt;span&gt;This project seeks to implement several common matroid classes in SageMath, along with algorithms for their display and relevant computations. The graphic matroid class in particular will be implemented with a representative graph with methods for Whitney switching and minor operations. This will be accompanied by improvements to the graph theory library, with methods relevant to matroids enabled to support multigraphs. Other modules for this project include improved plotting of rank 3 matroids to eliminate false colinearities, computation of a matroid's automorphism group using SageMath's group theory libraries, and faster minor testing based on an existing trac ticket.&lt;/span&gt;&lt;/blockquote&gt;&lt;h3&gt;&lt;span&gt;Expanding the Functionality of Dynamical Systems&lt;/span&gt;&lt;/h3&gt;&lt;div&gt;&lt;span&gt;(&lt;/span&gt;Rebecca Lauren Miller / Paul Fili and Ben Hutz)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;As a member of the sage-dynamics community, researchers have compiled a wishlist for algorithms and functionality they would like added. I would like to shorten the wish list for us.For my project I will be completing some desired additions to SAGE from the Sage Dynamics Wiki. I will implement Well’s Algorithm, strengthen the numerical precision in cannonical_height, as well as implement reduced_form for higher dimensions.&lt;/blockquote&gt;&lt;/div&gt;&lt;div&gt;&lt;h3&gt;Improvement of Complex Dynamics in Sage&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;(Ben Barros / Adam Towsley and Ben Hutz)&lt;/div&gt;&lt;div&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;There are three major things that I would like to implement to improve the functionality of Sage in the area Complex Dynamics. The details of the project are summarized in the following list:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Complex Dynamics Graphical package: &lt;/b&gt;Integrate or implement a complex dynamics software such as Mandel into Sage. This will be done by creating an optional package for Sage. If there is enough demand, the package may become a standard package for Sage at some point.&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Spider Algorithm:&lt;/b&gt; The object of the Spider Algorithm is to construct polynomials with assigned combinatorics. For example, we may want to find a polynomial that has a periodic orbit of period 7. The Spider Algorithm provides a way for us to compute this polynomial efficiently. I plan to implement this algorithm into Sage.&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Coercion: &lt;/b&gt;If you have a map defined over Q, you should be able to take the image of a point over C (i.e. somewhere you have a well-defined embedding) without having to use the command &quot;change_ring()&quot;. Something similar works for polynomials in Sage but it does not work for morphisms/schemes.&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;div&gt;&lt;h3&gt;Linear-time Implementation of Modular Decomposition of Undirected and Directed Graphs&lt;/h3&gt;&lt;div&gt;(Lokesh Jain / Dima Pasechnik)&lt;/div&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;This project is aimed at providing linear time implementation for modular decomposition of graphs and digraphs. Modular decomposition is decomposition of graph into modules. A module is a subset of vertices and it is a generalization of connected component in graph. Let us take for example a module X. For any vertex v ∉ X it is either connected or not connected to every vertex of X. Another property of module is that a module can be subset of another module. There are various algorithms which have been published for modular decomposition of graphs. The focus in this project is on linear time complexity algorithms which can be practically implemented. The project further aims to use the modules developed for modular decomposition to implement other functionality like skew partitions. Skew partition is partition of graph into two sets of vertices such that induced graph formed by one set is disconnected and induced graph formed by other set is complement of the first. Modular decomposition is a very important concept in Graph Theory and it has a number of use cases. For instance it has been an important tool for solving optimization and combinatorics problems.&lt;/blockquote&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;Modular Decomposition of graphs and digraphs&lt;/h3&gt;&lt;div&gt;(Maria Ioanna Spyrakoy /&amp;nbsp;Dima Pasechnik)&lt;/div&gt;&lt;div&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;Modular decomposition of (di)graphs is a generalization of the concept of the decomposition of (di)graphs into connected components. Its current implementation in Sage relies on badly broken abandoned C code, and badly needs to be replaced by something that works and is not too slow. However, the only open-source implementations of some of these procedures are either in Java or in Perl, and thus aren't really useful for Sage.&lt;/blockquote&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Note:&lt;/b&gt; A attentive reader might notice the similarity between those projects. They will be split regarding the type of graph and be coordinated to not overlap but to augment each other.&lt;/div&gt;&lt;h3&gt;Visualizing constructs in cluster algebras and quiver representations&lt;/h3&gt;&lt;div&gt;(Bryan Wang / Travis Scrimshaw)&lt;/div&gt;&lt;div&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;I aim to implement visualizations of several key constructs in cluster algebras and quiver representations. The first is Auslander-Reiten quivers, for at least the A_n and D_n cases. The second is labelled endomorphism quivers and mutations within a cluster category, focusing on the A_n case. The third is posets of down-mutations for the A_n case. These features will be useful not only for research purposes, but also as nice examples to play around with and learn from. Aside from these features, I am interested in implementing features for the Quantum Cluster Algebras project.&lt;/blockquote&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;All the best for this summer, thank you to Google for making this possible, and sorry to all those candidates who didn't make it ...&lt;/div&gt;&lt;/div&gt;</content>
		<author>
			<name>Harald Schilly</name>
			<email>noreply@blogger.com</email>
			<uri>http://blog.harald.schil.ly/search/label/sage</uri>
		</author>
		<source>
			<title type="html">Harald Schilly</title>
			<link rel="self" href="http://blog.harald.schil.ly/feeds/posts/default/-/sage"/>
			<id>tag:blogger.com,1999:blog-3473399517246044360</id>
			<updated>2017-09-08T10:36:15+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Distributive Laws</title>
		<link href="http://sheaves.github.io/Distributive-Laws/"/>
		<id>http://sheaves.github.io/Distributive-Laws/</id>
		<updated>2017-02-18T00:00:00+00:00</updated>
		<content type="html">&lt;p&gt;I’ve been participating in the &lt;a href=&quot;http://www.math.jhu.edu/~eriehl/kanII/&quot;&gt;Kan Extension Seminar II&lt;/a&gt;, and this week it’s my turn to &lt;a href=&quot;https://golem.ph.utexas.edu/category/2017/02/distributive_laws.html&quot;&gt;post about Jon Beck’s “Distributive Laws”&lt;/a&gt; at the &lt;a href=&quot;https://golem.ph.utexas.edu/category/&quot;&gt;n-Category Cafe&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The post uses lots of string diagrams for monads, resulting in pictures like the following:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://sheaves.github.io/distributive/comp_assoc.png&quot; alt=&quot;&quot; title=&quot;Associativity of the composite monad&quot; /&gt;&lt;/p&gt;

&lt;p&gt;See you &lt;a href=&quot;https://golem.ph.utexas.edu/category/2017/02/distributive_laws.html&quot;&gt;there&lt;/a&gt;!&lt;/p&gt;</content>
		<author>
			<name>Liang Ze</name>
			<uri>http://sheaves.github.io/</uri>
		</author>
		<source>
			<title type="html">Sheaves</title>
			<subtitle type="html">Making math concrete with Sage</subtitle>
			<link rel="self" href="http://sheaves.github.io/feed.xml"/>
			<id>http://sheaves.github.io/feed.xml</id>
			<updated>2017-07-16T20:30:07+00:00</updated>
		</source>
	</entry>

	<entry xml:lang="en">
		<title type="html">A time evolution picture of packages built in parallel by Sage</title>
		<link href="http://www.slabbe.org/blogue/2016/12/a-time-evolution-picture-of-packages-built-in-parallel-by-sage"/>
		<id>http://www.slabbe.org/blogue/2016/12/a-time-evolution-picture-of-packages-built-in-parallel-by-sage</id>
		<updated>2016-12-16T16:13:00+00:00</updated>
		<content type="html">&lt;div class=&quot;document&quot;&gt;
&lt;p&gt;Compiling sage takes a while and does a lot of stuff. Each time I am wondering
which components takes so much time and which are fast. I wrote a module in my
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/seblabbe/slabbe&quot;&gt;slabbe&lt;/a&gt; version &lt;tt class=&quot;docutils literal&quot;&gt;0.3b2&lt;/tt&gt; package available on &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/slabbe&quot;&gt;PyPI&lt;/a&gt; to figure this out.&lt;/p&gt;
&lt;p&gt;This is after compiling 7.5.beta6 after an upgrade from 7.5.beta4:&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;slabbe.analyze_sage_build&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;draw_sage_build&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;draw_sage_build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pdf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;a class=&quot;reference external image-reference&quot; href=&quot;http://www.slabbe.org/Files/2016/sage_build.png&quot;&gt;&lt;img alt=&quot;/Files/2016/sage_build.png&quot; src=&quot;http://www.slabbe.org/Files/2016/sage_build.png&quot; /&gt;&lt;/a&gt;
&lt;p&gt;From scratch from a fresh git clone of 7.5.beta6, after running &lt;tt class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;MAKE='make&lt;/span&gt;
&lt;span class=&quot;pre&quot;&gt;-j4'&lt;/span&gt; make ptestlong&lt;/tt&gt;, I get:&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;slabbe.analyze_sage_build&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;draw_sage_build&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;draw_sage_build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pdf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;a class=&quot;reference external image-reference&quot; href=&quot;http://www.slabbe.org/Files/2016/sage_build_from_scratch.png&quot;&gt;&lt;img alt=&quot;/Files/2016/sage_build_from_scratch.png&quot; src=&quot;http://www.slabbe.org/Files/2016/sage_build_from_scratch.png&quot; /&gt;&lt;/a&gt;
&lt;p&gt;The picture does not include the start and ptestlong because there was an error
compiling the documentation.&lt;/p&gt;
&lt;p&gt;By default, &lt;tt class=&quot;docutils literal&quot;&gt;draw_sage_build&lt;/tt&gt; considers all of the logs files in
&lt;tt class=&quot;docutils literal&quot;&gt;logs/pkgs&lt;/tt&gt; but options are available to consider only log files created in a
given interval of time. See &lt;tt class=&quot;docutils literal&quot;&gt;draw_sage_build?&lt;/tt&gt; for more info.&lt;/p&gt;
&lt;/div&gt;</content>
		<author>
			<name>Sébastien Labbé</name>
			<uri>http://www.slabbe.org/blogue/</uri>
		</author>
		<source>
			<title type="html">Sébastien Labbé</title>
			<subtitle type="html">Sébastien Labbé</subtitle>
			<link rel="self" href="http://www.slabbe.org/blogue/categorie/sage/feed/atom/index.xml"/>
			<id>http://www.slabbe.org/blogue/feed/atom/</id>
			<updated>2017-09-10T17:01:20+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">RethinkDB, SageMath, Andreessen-Horowitz, Basecamp and Open Source Software</title>
		<link href="http://sagemath.blogspot.com/2016/10/rethinkdb-sagemath-andreessen-horowitz.html"/>
		<id>tag:blogger.com,1999:blog-6365588202025292315.post-2555982827403411238</id>
		<updated>2016-11-17T15:57:37+00:00</updated>
		<content type="html">&lt;h2 id=&quot;rethinkdb-and-sustainable-business-models&quot;&gt;RethinkDB and sustainable business models&lt;/h2&gt;Three weeks ago, I spent the evening of Sept 12, 2016 with Daniel Mewes, who is the lead engineer of RethinkDB (an open source database). I was also supposed to meet with the co-founders, Slava and Michael, but they were too busy fundraising and couldn't join us. I pestered Daniel the whole evening about what RethinkDB's business model actually was. Yesterday, on October 6, 2016, &lt;a href=&quot;https://rethinkdb.com/blog/rethinkdb-shutdown/&quot; target=&quot;_blank&quot;&gt;RethinkDB shut down.&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;I met with some RethinkDB devs because an investor who runs a fund at the VC firm Andreessen-Horowitz (A16Z) had kindly invited me there to explain my commercialization plans for SageMath, Inc., and RethinkDB is one of the companies that &lt;a href=&quot;https://mattermark.com/companies/rethinkdb.com&quot;&gt;A16Z has invested in&lt;/a&gt;. At first, I wasn't going to take the meeting with A16Z, since I have never met with Venture Capitalists before, and do not intend to raise VC. However, some of my advisors convinced me that VC's can be very helpful even if you never intend to take their investment, so I accepted the meeting.&lt;br /&gt;&lt;br /&gt;In the first draft of my slides for my presentation to A16Z, I had a slide with the question: &quot;Why do you fund open source companies like RethinkDB and CoreOS, which have no clear (to me) business model? Is it out of some sense of charity to support the open source software ecosystem?&quot; After talking with people at Google and the RethinkDB devs, I removed that slide, since charity is clearly not the answer (I don't know if there is a better answer than &quot;by accident&quot;).&lt;br /&gt;&lt;br /&gt;I have used RethinkDB intensely for nearly two years, and I might be their biggest user in some sense. My product &lt;a href=&quot;https://cloud.sagemath.com/&quot;&gt;SageMathCloud&lt;/a&gt;, which provides web-based course management, Python, R, Latex, etc., uses RethinkDB for everything. For example, every single time you enter some text in a realtime synchronized document, a RethinkDB table gets an entry inserted in it. I have RethinkDB tables with nearly 100 million records. I gave &lt;a href=&quot;https://www.youtube.com/watch?v=WU6eSckPR7E&quot;&gt;a talk at a RethinkDB meetup&lt;/a&gt;, filed numerous bug reports, and have been described by them as &quot;their most unlucky user&quot;. In short, in 2015 I bet big on RethinkDB, just like I bet big on Python back in 2004 when starting SageMath. And when visiting the RethinkDB devs in San Francisco (this year and also last year), I have said to them many times &quot;I have a very strong vested interest in you guys not failing.&quot; My company SageMath, Inc. also pays RethinkDB for a support contract.&lt;br /&gt;&lt;br /&gt;Sustainable business models were very much on my mind, because of my upcoming meeting at A16Z and the upcoming board meeting for my company. &amp;nbsp;SageMath, Inc.'s business model involves making money from subscriptions to SageMathCloud (which is hosted on Google Cloud Platform); of course, there are tons of details about exactly how our business works, which we've been refining based on customer feedback. Though absolutely all of our software is open source, what we sell is convenience, easy of access and use, and we provide value by hosting &lt;a href=&quot;https://github.com/sagemathinc/smc/wiki/Teaching&quot;&gt;hundreds of courses&lt;/a&gt; on shared infrastructure, so it is much cheaper and easier for universities to pay us rather than hosting our software themselves (which is also &lt;a href=&quot;https://github.com/sagemathinc/smc/blob/master/src/dev/docker/README.md&quot;&gt;fairly easy&lt;/a&gt;). So that's our business model, and I would argue that it is working; at least our MRR is steadily increasing and is more than twice our hosting costs (we are not cash flow positive yet due to developer costs).&lt;br /&gt;&lt;br /&gt;So far as I can determine, the business model of RethinkDB was to make money in the following ways: 1. Sell support contracts to companies (I bought one). 2. Sell a closed-source proprietary version of RethinkDB with extra features that were of interest to enterprise (they had a handful of such features, e.g., audit logs for queries). 3. Horizon would become a cloud-hosted competitor to Firebase, with unique advantages that users have the option to migrate from the cloud to their own private data center, and more customizability. This strategy depends on a trend for users to migrate &lt;em&gt;away&lt;/em&gt; from the cloud, rather than to it, which some people at RethinkDB thought was a real trend (I disagree).&lt;br /&gt;&lt;br /&gt;I don't know of anything else they were seriously trying right now. The closed-source proprietary version of RethinkDB also seemed like a very recent last ditch effort that had only just begun; perhaps it directly contradicted a desire to be a 100% open source company?&lt;br /&gt;&lt;br /&gt;With enough users, it's easier to make certain business models work. I suspect RethinkDB does not have a lot of &lt;strong&gt;real users&lt;/strong&gt;. Number of users tends to be roughly linearly related to mailing list traffic, and the &lt;a href=&quot;https://groups.google.com/forum/#!forum/rethinkdb&quot; target=&quot;_blank&quot;&gt;RethinkDB mailing list&lt;/a&gt; has an order of magnitude less traffic compared to the SageMath mailing lists, and SageMath has around 50,000 users. RethinkDB wasn't even advertised to be production ready until just over a year ago, so even they were telling people not to use it seriously until relatively recently. The adoption cycle for database technology is slow -- people wisely wait for &lt;a href=&quot;https://aphyr.com/posts/330-jepsen-rethinkdb-2-2-3-reconfiguration&quot; target=&quot;_blank&quot;&gt;Aphyr's tests&lt;/a&gt;, benchmarks comparing with similar technology, etc. I was unusual in that I chose RethinkDB much earlier than most people would, since I &lt;strong&gt;love the design of RethinkDB so much&lt;/strong&gt;. It's the first database I loved, having seen a lot over many decades.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Conclusion:&lt;/strong&gt; RethinkDB wasn't a real business, and wouldn't become one without year(s) more runway.&lt;br /&gt;&lt;br /&gt;I'm also very worried about the future of RethinkDB &lt;a href=&quot;https://docs.google.com/document/d/1Fy-drBGDTyibwEBBAX6G5otqtWiKOD2sBXmL2uVTFtE/edit&quot; target=&quot;_blank&quot;&gt;as an open source project&lt;/a&gt;. I don't know if the developers have experience growing an open source community of volunteers; it's incredibly hard and its unclear they are even going to be involved. At a bare minimum, I think they must switch to a very liberal license (Apache instead of AGPL), and make everything (e.g., automated testing code, documentation, etc) open source. It's insanely hard getting any support for open source infrastructure work -- support mostly comes from small government grants (for research software) or contributions from employees at companies (that use the software). Relicensing in a company friendly way is thus critical.&lt;br /&gt;&lt;h2 id=&quot;company-incentives&quot;&gt;Company Incentives&lt;/h2&gt;Companies can be incentived in various ways, including:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;to get to the next round of &lt;strong&gt;VC funding&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;to be a &lt;strong&gt;sustainable profitable business&lt;/strong&gt; by making more money from customers than they spend, or&lt;/li&gt;&lt;li&gt;to &lt;strong&gt;grow&lt;/strong&gt; to have a very large number of users and somehow pivot to making money later.&lt;/li&gt;&lt;/ul&gt;When founding a company, you have a chance to choose how your company will be incentived based on how much risk you are willing to take, the resources you have, the sort of business you are building, the current state of the market, and your model of what will happen in the future.&lt;br /&gt;&lt;br /&gt;For me, &lt;a href=&quot;http://sagemath.org/&quot;&gt;SageMath&lt;/a&gt; is an open source project I started in 2004, and I'm in it for the long haul. I will make the business I'm building around SageMathCloud succeed, or I will die trying -- therefore I have &lt;strong&gt;very, very little tolerance&lt;/strong&gt; for risk. Failure is not an option, and I am not looking for an exit. For me, the strategy that best matches my values is to incentive my company to build a profitable business, since that is most likely to survive, and also to give us the freedom to maintain our longterm support for open source and pure mathematics software.&lt;br /&gt;&lt;br /&gt;Thus for my company, neither optimizing for raising the next round of VC or growing at all costs makes sense. You would be surprised how many people think I'm completely wrong for concluding this.&lt;br /&gt;&lt;h2 id=&quot;andreessen-horowitz&quot;&gt;Andreessen-Horowitz&lt;/h2&gt;I spent the evening with RethinkDB developers, which scared the hell out of me regarding their business prospects. They are probably the most open source friendly VC-funded company I know of, and they had given me hope that it is possible to build a successful VC-funded tech startup around open source. I prepared for my meeting at A16Z, and deleted my slide about RethinkDB.&lt;br /&gt;&lt;br /&gt;I arrived at A16Z, and was greeted by incredibly friendly people. I was a little shocked when I saw their nuclear bomb art in the entry room, then went to a nice little office to wait. The meeting time arrived, and we went over my slides, and I explained my business model, goals, etc. They said there was no place for A16Z to invest directly in what I was planning to do, since I was very explicit that I'm not looking for an exit, and my plan about how big I wanted the company to grow in the next 5 years wasn't sufficiently ambitious. They were also worried about how small the total market cap of Mathematica and Matlab is (only a few hundred million?!). However, they generously and repeatedly offered to introduce me to more potential angel investors.&lt;br /&gt;&lt;br /&gt;We argued about the value of outside investment to the company I am trying to build. I had hoped to get some insight or introductions related to their portfolio companies that are of interest to my company (e.g., Udacity, GitHub), but they deflected all such questions. There was also some confusion, since I showed them slides about what I'm doing, but was quite clear that I was not asking for money, which is not what they are used to. In any case, I greatly appreciated the meeting, and it really made me think. They were crystal clear that they believed I was completely wrong to not be trying to do everything possible to raise investor money.&lt;br /&gt;&lt;h2 id=&quot;basecamp&quot;&gt;Basecamp&lt;/h2&gt;During the first year of SageMath, Inc., I was planning to raise a round of VC, and was doing everything to prepare for that. I then read some of &lt;a href=&quot;https://medium.com/@dhh&quot;&gt;DHH's books&lt;/a&gt; about Basecamp, and realized many of those arguments applied to my situation, given my values, and -- after a lot of reflection -- I changed my mind. I think Basecamp itself is mostly closed source, so they may have an advantage &amp;nbsp;in building a business. SageMathCloud (and SageMath) really are 100% open source, and building a completely open source business might be harder. Our open source IP is considered worthless by investors. Witness: RethinkDB just shut down and &lt;a href=&quot;https://stripe.com/&quot;&gt;Stripe&lt;/a&gt; hired just the engineers -- all the IP, customers, etc., of RethinkDB was evidently considered worthless by investors.&lt;br /&gt;&lt;br /&gt;The day after the A16Z meeting, I met with my board, which went well (we discussed a huge range of topics over several hours). Some of the board members also tried hard to convince me that I should raise a lot more investor money.&lt;br /&gt;&lt;h2 id=&quot;will-poole-youre-doomed&quot;&gt;Will Poole: you're doomed&lt;/h2&gt;Two weeks ago I met with Will Poole, who is a friend of a friend, and we talked about my company and plans. I described what I was doing, that everything was open source, that I was incentivizing the company around building a business rather than raising investor money. He listened and asked a lot of follow up questions, making it very clear he understands building a company very, very well.&lt;br /&gt;&lt;br /&gt;His feedback was discouraging -- I said &quot;So, you're saying that I'm basically doomed.&quot; He responded that I wasn't doomed, but might be able to run a small &quot;lifestyle business&quot; at best via my approach, but there was absolutely no way that what I was doing would have any impact or pay for my kids college tuition. If this was feedback from some random person, it might not have been so disturbing, but Will Poole joined Microsoft in 1996, where he went on to &lt;strong&gt;run Microsoft's multibillion dollar Windows business&lt;/strong&gt;. Will Poole is like a retired four-star general that executed a successful campaign to conquer the world; he been around the block a few times. He tried pretty hard to convince me to make as much of SageMathCloud closed source as possible, and to try to convince my users to make content they create in SMC something that I can reuse however I want. I felt pretty shaken and convinced that I needed to close parts of SMC, e.g., the new Kubernetes-based backend that we spent all summer implementing. (Will: if you read this, though our discussion was really disturbing to me, I really appreciate it and respect you.)&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://www.wallstreetoasis.com/forums/tomato-jos-the-extra-alternative-career-for-top-mba-grads&quot; target=&quot;_blank&quot;&gt;My friend&lt;/a&gt;, who introduced me to Will Poole, introduced me to some other people and described me as that really frustrating sort of entrepreneur who doesn't want investor money. He then remarked that one of the things he learned in business school, which really surprised him, was that it is &lt;strong&gt;good&lt;/strong&gt; for a company to have a lot of debt. I gave him a funny look, and he added &quot;of course, I've never run a company&quot;.&lt;br /&gt;&lt;br /&gt;I left that meeting with Will convinced that I would close source parts of SageMathCloud, to make things much more defensible. However, after thinking things through for several days, and talking this over with other people involved in the company, I have chosen not to close anything. This just makes our job harder. Way harder. But I'm not going to make any decisions based purely on fear. I don't care what anybody says, I do not think it is impossible to build an open source business (I think &lt;a href=&quot;https://wordpress.org/about/&quot;&gt;Wordpress&lt;/a&gt; is an example), and I do not need to raise VC.&lt;br /&gt;&lt;br /&gt;Hacker News Discussion:&amp;nbsp;&lt;a href=&quot;https://news.ycombinator.com/item?id=12663599&quot;&gt;https://news.ycombinator.com/item?id=12663599&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Chinese version:&amp;nbsp;&lt;a href=&quot;http://www.infoq.com/cn/news/2016/10/Reflection-sustainable-profit-co&quot; target=&quot;_blank&quot;&gt;http://www.infoq.com/cn/news/2016/10/Reflection-sustainable-profit-co&lt;/a&gt;</content>
		<author>
			<name>William Stein</name>
			<email>noreply@blogger.com</email>
			<uri>http://sagemath.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Sage: Open Source Mathematics Software</title>
			<subtitle type="html">This is my blog about things related to Sage.</subtitle>
			<link rel="self" href="http://sagemath.blogspot.com/feeds/posts/default"/>
			<id>tag:blogger.com,1999:blog-6365588202025292315</id>
			<updated>2017-10-06T20:16:13+00:00</updated>
		</source>
	</entry>

</feed>
