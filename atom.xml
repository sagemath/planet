<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">

	<title>Planet Sage</title>
	<link rel="self" href="http://planet.sagemath.org/atom.xml"/>
	<link href="http://planet.sagemath.org"/>
	<id>http://planet.sagemath.org/atom.xml</id>
	<updated>2016-08-12T02:30:10+00:00</updated>
	<generator uri="http://www.planetplanet.org/">Planet/2.0 +http://www.planetplanet.org</generator>

	<entry>
		<title type="html">Poetry By Number</title>
		<link href="http://lifebynumber.org/life-by-blog/poetry-by-number/"/>
		<id>http://lifebynumber.org/life-by-blog/poetry-by-number/</id>
		<updated>2016-07-27T00:00:00+00:00</updated>
		<content type="html">In the 1960’s French writer and poet Raymond Queneau became the most prolific writers of our time by writing over one hundred thousand billion poems.  If you wanted to read all of these poems it would only take you 200 million years of reading 24 hours a day at a rate of about one poem per minute.

 So how could Queneau write so many poems in far less time than it would take to read them all?

The truth is he didn’t actually write that many individual poems. What he did was write ten 14-line</content>
		<author>
			<name>Lauren Devitt</name>
			<uri>http://lifebynumber.org/life-by-blog/</uri>
		</author>
		<source>
			<title type="html">Blog RSS</title>
			<link rel="self" href="http://lifebynumber.org/rss.xml"/>
			<id>http://lifebynumber.org/rss.xml</id>
			<updated>2016-08-12T02:30:10+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Jupyter: &quot;take the domain name down immediately&quot;</title>
		<link href="http://sagemath.blogspot.com/2016/07/jupyter-take-domain-name-down.html"/>
		<id>tag:blogger.com,1999:blog-6365588202025292315.post-4592324674567336685</id>
		<updated>2016-07-26T19:30:07+00:00</updated>
		<content type="html">The &lt;a href=&quot;http://jupyter.org/&quot;&gt;Jupyter notebook&lt;/a&gt; is an open source BSD-licensed browser-based code execution environment, inspired by my early work on the Sage Notebook (which we launched in 2007), which was in turn inspired heavily by Mathematica notebooks and Google docs. Jupyter used to be called &lt;a href=&quot;https://www.google.com/trends/explore#q=jupyter%2C%20ipython&amp;cmpt=q&amp;tz=Etc%2FGMT%2B7&quot;&gt;IPython&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://cloud.sagemath.com/&quot;&gt;SageMathCloud&lt;/a&gt; is an open source web-based environment for using Sage worksheets, terminals, LaTeX documents, course management, and Jupyter notebooks. I've put much hard work into making it so that multiple people can simultaneously edit Jupyter notebooks in SageMathCloud, and the history of all changes are recorded and browsable via a slider.&lt;br /&gt;&lt;br /&gt;Many people have written to me asking for there to be a modified version of &lt;a href=&quot;https://cloud.sagemath.com/&quot;&gt;SageMathCloud&lt;/a&gt;, which is oriented around Jupyter notebooks instead of Sage worksheets. So the default file type is Jupyter notebooks, the default kernel doesn't involve the extra heft of Sage, etc., and the domain name involves Jupyter instead of &quot;sagemath&quot;. Some people are disuased from using SageMathCloud for Jupyter notebooks because of the &quot;SageMath&quot; name.&lt;br /&gt;&lt;br /&gt;Dozens of web applications (including SageMathCloud) use the word &quot;Jupyter&quot; in various places. However, I was unsure about using &quot;jupyter&quot; in a domain name. I found &lt;a href=&quot;https://github.com/jupyter/governance/issues/12&quot;&gt;this github issue&lt;/a&gt; and requested clarification 6 weeks ago. We've had some back and forth, but they recently made it clear that it would be at least a month until any decision would be considered, since they are too busy with other things. In the meantime, I rented jupytercloud.com, which has a nice ring to it, as the &lt;a href=&quot;https://www.google.com/search?q=jupiter+cloud&amp;safe=off&amp;rlz=1C5CHFA_enUS691US691&amp;tbm=isch&amp;tbo=u&amp;source=univ&amp;sa=X&amp;ved=0ahUKEwj-vJubvJLOAhVEwYMKHRLlCCgQsAQIKg&amp;biw=1147&amp;bih=643&quot;&gt;planet Jupiter has clouds.&lt;/a&gt; Yesterday, I made jupytercloud.com point to cloud.sagemath.com to see what it would &quot;feel like&quot; and Tim Clemans started experimenting with customizing the page based on the domain name that the client sees. I did not mention jupytercloud.com publicly anywhere, and there were no links to it.&lt;br /&gt;&lt;br /&gt;Today I received this message:&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;code&gt;    William,&lt;br /&gt;&lt;br /&gt;    I'm writing this representing the Jupyter project leadership&lt;br /&gt;    and steering council. It has recently come to the Jupyter&lt;br /&gt;    Steering Council's attention that the domain jupytercloud.com&lt;br /&gt;    points to SageMathCloud. Do you own that domain? If so,&lt;br /&gt;    we ask that you take the domain name down immediately, as&lt;br /&gt;    it uses the Jupyter name.&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;/pre&gt;I of course immediately complied. It is well within their rights to dictate how their name is used, and I am obsessive about scrupulously doing everything I can to respect people's intellectual property; with Sage we have put huge amounts of effort into honoring both the letter and spirit of copyright statements on open source software.&lt;br /&gt;&lt;br /&gt;I'm writing this because it's unclear to me what people really want, and I have no idea what to do here.&lt;br /&gt;&lt;br /&gt;1. Do &lt;strong&gt;you&lt;/strong&gt; want something built on the same technology as SageMathCloud, but much more focused on Jupyter notebooks?&lt;br /&gt;&lt;br /&gt;2. Does the name of the site matter to &lt;strong&gt;you&lt;/strong&gt;?&lt;br /&gt;&lt;br /&gt;3. What model should the Jupyter project use for their trademark? Something like Python? like Git?Like Linux? &amp;nbsp;Like Firefox? &amp;nbsp;Like the email program PINE? &amp;nbsp;Something else entirely?&lt;br /&gt;&lt;br /&gt;4. Should I be worried about using Jupyter at all anywhere? E.g., in this blog post? As the default notebook for the SageMath project?&lt;br /&gt;&lt;br /&gt;I appreciate any feedback.&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=12169979&quot; target=&quot;_blank&quot;&gt;Hacker News Discussion&lt;/a&gt;</content>
		<author>
			<name>William Stein</name>
			<email>noreply@blogger.com</email>
			<uri>http://sagemath.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Sage: Open Source Mathematics Software</title>
			<subtitle type="html">This is my blog about things related to Sage.</subtitle>
			<link rel="self" href="http://sagemath.blogspot.com/feeds/posts/default"/>
			<id>tag:blogger.com,1999:blog-6365588202025292315</id>
			<updated>2016-08-12T02:30:04+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">DataDog's pricing: don't make the same mistake I made</title>
		<link href="http://sagemath.blogspot.com/2016/07/datadogs-pricing-dont-make-same-mistake.html"/>
		<id>tag:blogger.com,1999:blog-6365588202025292315.post-6949985998313614355</id>
		<updated>2016-07-22T14:17:05+00:00</updated>
		<content type="html">I stupidly made a mistake recently by choosing to use &lt;a href=&quot;https://www.datadoghq.com/&quot;&gt;DataDog&lt;/a&gt; for monitoring the infrastructure for my startup (&lt;a href=&quot;https://cloud.sagemath.com/&quot;&gt;SageMathCloud&lt;/a&gt;).&lt;br /&gt;&lt;br /&gt;I got bit by their pricing UI design that looks similar to many other sites, but is different in a way that caused me to &lt;strong&gt;spend far more money than I expected.&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;I'm writing this post so that you won't make the same mistake I did. &amp;nbsp;As a product, DataDog is of course a lot of hard work to create, and they can try to charge whatever they want. However, my problem is that &lt;strong&gt;what&lt;/strong&gt; they are going to charge was confusing and misleading to me.&lt;br /&gt;&lt;br /&gt;I wanted to see some nice web-based data about my new autoscaled Kubernetes cluster, so I looked around at options. DataDog looked like a new and awesomely-priced service for seeing live logging. And when I looked (not carefully enough) at the pricing, it looked like only $15/month to monitor a bunch of machines. I'm naive about the cost of cloud monitoring -- I've been using Stackdriver on Google cloud platform for years, which is completely free (for now, though that will change), and I've also used self hosted open solutions, and some quite nice solutions I've written myself. So my expectations were way out of whack.&lt;br /&gt;&lt;br /&gt;Ever busy, I signed up for the &quot;$15/month plan&quot;:&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-NK09JkZDOD0/V5Jyf6jYy2I/AAAAAAABYNA/l_LP-NJv6hgODAvvaO868frbtJ4hP9SUQCLcB/s1600/dd-pricing.png&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;225&quot; src=&quot;https://1.bp.blogspot.com/-NK09JkZDOD0/V5Jyf6jYy2I/AAAAAAABYNA/l_LP-NJv6hgODAvvaO868frbtJ4hP9SUQCLcB/s400/dd-pricing.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;One of the people on my team spent a little time and installed datadog on all the VM's in our cluster, and also made DataDog automatically start running on any nodes in our Kubernetes cluster. That's a lot of machines.&lt;br /&gt;&lt;br /&gt;Today I got the first monthly bill, which is for the month that just happened. The cost was $639.19 USD charged to my credit card. I was really confused for a while, wondering if I had bought a year subscription.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;https://3.bp.blogspot.com/-LK7iRxeqMKI/V5JymhrBN-I/AAAAAAABYNE/lCA0YC3cfSMJ9LuTsFgsrt8vTUR4rvRIQCLcB/s1600/dd-invoice.png&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;198&quot; src=&quot;https://3.bp.blogspot.com/-LK7iRxeqMKI/V5JymhrBN-I/AAAAAAABYNE/lCA0YC3cfSMJ9LuTsFgsrt8vTUR4rvRIQCLcB/s400/dd-invoice.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;After a while I realized that the cost is per host! When I looked at the pricing page the first time, I had just saw in big letters &quot;$15&quot;, and &quot;$18 month-to-month&quot; and &quot;up to 500 hosts&quot;. I completely missed the &quot;Per Host&quot; line, because I was so naive that I didn't think the price could possibly be that high.&lt;br /&gt;&lt;br /&gt;I tried immediately to delete my credit card and cancel my plan, but the &quot;Remove Card&quot; button is greyed out, and it says you can &quot;modify your subscription by contacting us at success@datadoghq.com&quot;:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;https://3.bp.blogspot.com/-iohuYjKf3_A/V5JzPDN7qHI/AAAAAAABYNM/QBn6pqJ_OL0roteJIyxHWx5wajJRs4_EwCLcB/s1600/dd-cancel.png&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;318&quot; src=&quot;https://3.bp.blogspot.com/-iohuYjKf3_A/V5JzPDN7qHI/AAAAAAABYNM/QBn6pqJ_OL0roteJIyxHWx5wajJRs4_EwCLcB/s400/dd-cancel.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;So I wrote to success@datadoghq.com:&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Dear Datadog,&lt;br /&gt;&lt;br /&gt;Everybody on my team was completely mislead by your&lt;br /&gt;horrible pricing description.&lt;br /&gt;&lt;br /&gt;Please cancel the subscription for wstein immediately&lt;br /&gt;and remove my credit card from your system.&lt;br /&gt;&lt;br /&gt;This is the first time I've wasted this much money&lt;br /&gt;by being misled by a website in my life.&lt;br /&gt;&lt;br /&gt;I'm also very unhappy that I can't delete my credit&lt;br /&gt;card or cancel my subscription via your website.  It's&lt;br /&gt;like one more stripe API call to remove the credit card&lt;br /&gt;(I know -- I implemented this same feature for my site).&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;hr /&gt;And they responded:&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Thanks for reaching out. If you'd like to cancel your&lt;br /&gt;Datadog subscription, you're able to do so by going into&lt;br /&gt;the platform under 'Plan and Usage' and choose the option&lt;br /&gt;downgrade to 'Lite', that will insure your credit card&lt;br /&gt;will not be charged in the future. Please be sure to&lt;br /&gt;reduce your host count down to the (5) allowed under&lt;br /&gt;the 'Lite' plan - those are the maximum allowed for&lt;br /&gt;the free plan.&lt;br /&gt;&lt;br /&gt;Also, please note you'll be charged for the hosts&lt;br /&gt;monitored through this month. Please take a look at&lt;br /&gt;our billing FAQ.&lt;/code&gt;&lt;/pre&gt;&lt;hr /&gt;&lt;br /&gt;They were right -- I was able to uninstall the daemons, downgrade to Lite, remove my card, etc. all through the website without manual intervention.&lt;br /&gt;&lt;br /&gt;When people have been confused with billing for &lt;a href=&quot;https://cloud.sagemath.com/&quot;&gt;my site&lt;/a&gt;, I have apologized, immediately refunded their money, and opened a ticket to make the UI clearer. &amp;nbsp;DataDog didn't do any of that.&lt;br /&gt;&lt;br /&gt;I wish DataDog would at least clearly state that when you use their service you are potentially on the hook for an &lt;strong&gt;arbitrarily large&lt;/strong&gt; charge for any month. Yes, if they had made that clear, they wouldn't have had me as a customer, so they are not incentivized to do so.&lt;br /&gt;&lt;br /&gt;A fool and their money are soon parted. I hope this post reduces the chances you'll be a fool like me. &amp;nbsp;If you chose to use DataDog, and their monitoring tools are very impressive, I hope you'll be aware of the cost.  &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;ADDED:&lt;br /&gt;&lt;br /&gt;On &lt;a href=&quot;https://news.ycombinator.com/threads?id=williamstein&quot; target=&quot;_blank&quot;&gt;Hacker News&lt;/a&gt; somebody asked: &quot;&lt;span&gt;How could their pricing page be clearer? It says per host in fairly large letters underneath it.&amp;nbsp;&lt;/span&gt;&lt;span&gt;I'm asking because I will be designing a similar page soon (that's also billed per host) and I'd like to avoid the same mistakes.&quot; &amp;nbsp;My answer:&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;[EDIT: This pricing page by the top poster in this thread is way better than I suggest below -- https://www.serverdensity.com/pricing/]&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;1.&amp;nbsp;&lt;/span&gt;&lt;i&gt;&lt;/i&gt;&lt;span&gt;VERY clearly&lt;/span&gt;&lt;i&gt;&lt;/i&gt;&lt;span&gt;&amp;nbsp;state that when you sign up for the service, then you are on the hook for up to $18*500 = $9000 + tax in charges for any month. Even Google compute engine (and Amazon) don't create such a trap, and have a clear explicit quota increase process.&lt;/span&gt;&lt;br /&gt;&lt;div&gt;2. Instead of &quot;HUGE $15&quot; newline &quot;(small light) per host&quot;, put &quot;HUGE $18 per host&quot; all on the same line. It would easily fit. I don't even know how the $15/host datadog discount could ever really work, given that the number of hosts might constantly change and there is no prepayment.&lt;/div&gt;&lt;div&gt;3. Inform users clearly in the UI at any time how much they are going to owe for that month (so far), rather than surprising them at the end. Again, Google Cloud Platform has a very clear running total in their billing section, and any time you create a new VM it gives the exact amount that VM will cost per month.&lt;/div&gt;&lt;div&gt;4. If one works with a team, 3 is especially important. The reason that I had monitors on 50+ machines is that another person working on the project, who never looked at pricing or anything, just thought -- he I'll just set this up everywhere. He had no idea there was a per-machine fee.&lt;/div&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;div class=&quot;reply&quot;&gt;&lt;div&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;&lt;span&gt;&lt;u&gt;&lt;a href=&quot;https://news.ycombinator.com/reply?id=12146416&amp;goto=item%3Fid%3D12145879%2312146416&quot;&gt;reply&lt;/a&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;c00&quot;&gt;&lt;/span&gt;&lt;/span&gt;</content>
		<author>
			<name>William Stein</name>
			<email>noreply@blogger.com</email>
			<uri>http://sagemath.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Sage: Open Source Mathematics Software</title>
			<subtitle type="html">This is my blog about things related to Sage.</subtitle>
			<link rel="self" href="http://sagemath.blogspot.com/feeds/posts/default"/>
			<id>tag:blogger.com,1999:blog-6365588202025292315</id>
			<updated>2016-08-12T02:30:04+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Midterm ish</title>
		<link href="http://extendingmatroidfunctionality.blogspot.com/2016/06/midterm-ish.html"/>
		<id>tag:blogger.com,1999:blog-3534817490044613273.post-3828432654787984890</id>
		<updated>2016-06-27T17:41:00+00:00</updated>
		<content type="html">My summer of code is broken up into several projects. There were a lot of small ones, a couple medium ones, and one large one. Right now, I'm in the midst of working on the large project. Basically, we want to feed Sage a collection of subsets of an edge set E, and have Sage tell us if there is a graph that has cycles which correspond to the subsets of E, and if so, to give a corresponding. This boils down to asking if a matroid is &lt;a href=&quot;https://en.wikipedia.org/wiki/Graphic_matroid&quot; target=&quot;_blank&quot;&gt;graphic&lt;/a&gt;, and asking for a graph that realizes the matroid.&lt;br /&gt;&lt;br /&gt;For instance, if we give have E = {1, 2, 3, 4}, and our collection of sets is any three element subset of E, then we can't get an appropriate graph. To see this, we start constructing a graph. Our first cycle is {1, 2, 3}, There is only one graph on three elements that has this cycle, namely a triangle. To add the edge 4, we need to have a cycle {1, 2, 4}. But this means that we have to add 4 in parallel to the edge 3. This is a problem, because then {1, 3, 4}, in particular, is not a cycle of our graph.&lt;br /&gt;&lt;br /&gt;This example illustrates a key idea of the algorithm. The set {1, 2} is a maximal set that is not contained in a cylce, so we skipped over those elements, and started with 3. We then added 3 and any needed elements of {1, 2} to our partial graph. And we kept adding elements till we either had a problem, or till we added all of the elements.&lt;br /&gt;&lt;br /&gt;In our case, we didn't get so complicated of a graph that we had a choice about which graph to use for our partial graph. In general, this is not the case. It would be troublesome to check if we could add the new element to every graphs that realizes the already added elements, so we use a decomposition made possible by &lt;a href=&quot;http://onlinelibrary.wiley.com/doi/10.1002/jgt.3190040106/pdf&quot; target=&quot;_blank&quot;&gt;Whitney's 2 isomorphism theorem&lt;/a&gt; to check all of the graphs options at once. This of course makes the code more complicated. The algorithm that we are following comes from a &lt;a href=&quot;http://www.jstor.org/stable/3689867?seq=1#page_scan_tab_contents&quot; target=&quot;_blank&quot;&gt;paper&lt;/a&gt; by Ronald Bixby and Donald Wagner.&lt;br /&gt;&lt;br /&gt;The tricky part, so far, has been trying to get information in and out of graphs. graph theorists care a lot about the vertices of a graph and much less about the edges of the graph. That is, they store their edges as a list of the two vertices that they are incident with, and a possible label. matroid theorists, however, care a lot more about the edges of a graph. This is true in general, and is true in particular for this project.</content>
		<author>
			<name>Tara</name>
			<email>noreply@blogger.com</email>
			<uri>http://extendingmatroidfunctionality.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Extending Matroid Functionality Google Summer of Code 2016</title>
			<link rel="self" href="http://extendingmatroidfunctionality.blogspot.com/feeds/posts/default?alt=rss"/>
			<id>tag:blogger.com,1999:blog-3534817490044613273</id>
			<updated>2016-08-05T15:30:15+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">GSOC Midterm Update</title>
		<link href="http://lifebynumber.org/life-by-blog/gsoc-midterm-update/"/>
		<id>http://lifebynumber.org/life-by-blog/gsoc-midterm-update/</id>
		<updated>2016-06-23T00:00:00+00:00</updated>
		<content type="html">One of the great joys in life that not all will be able to experience is when your code builds. When you have fixed all the syntax errors you build it, you test it, and you see
----------------------------------------------------------------------
All tests passed!
----------------------------------------------------------------------
Having to wait for your code to build is agonizing. You pray to some God, magic force, or Steve Jobs to help you in this time of need. Then it works and you feel</content>
		<author>
			<name>Lauren Devitt</name>
			<uri>http://lifebynumber.org/life-by-blog/</uri>
		</author>
		<source>
			<title type="html">Blog RSS</title>
			<link rel="self" href="http://lifebynumber.org/rss.xml"/>
			<id>http://lifebynumber.org/rss.xml</id>
			<updated>2016-08-12T02:30:10+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">GSOC Week 2 Update</title>
		<link href="http://lifebynumber.org/life-by-blog/gsoc-week-2-update/"/>
		<id>http://lifebynumber.org/life-by-blog/gsoc-week-2-update/</id>
		<updated>2016-06-09T00:00:00+00:00</updated>
		<content type="html">Two weeks into GSOC 2016 I’m so grateful that this is how I get to spend my summer. Using my coding muscles has made me stronger and more confident with my code.
I am ready to create my first ticket in SAGE relating to GSOC. Sage uses Trac, which is an open source project managing software. It allows SAGE to track what people are currently working on for SAGE. It does this by are giving a ticket number to each piece of functionality pushed to the server. Peers, who pull them from the server,</content>
		<author>
			<name>Lauren Devitt</name>
			<uri>http://lifebynumber.org/life-by-blog/</uri>
		</author>
		<source>
			<title type="html">Blog RSS</title>
			<link rel="self" href="http://lifebynumber.org/rss.xml"/>
			<id>http://lifebynumber.org/rss.xml</id>
			<updated>2016-08-12T02:30:10+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">First Week or so</title>
		<link href="http://extendingmatroidfunctionality.blogspot.com/2016/06/first-week-or-so.html"/>
		<id>tag:blogger.com,1999:blog-3534817490044613273.post-4168277856882302649</id>
		<updated>2016-06-03T00:30:00+00:00</updated>
		<content type="html">Before coding started, I spent some time on &lt;a href=&quot;http://www.codecademy.com/&quot; target=&quot;_blank&quot;&gt;code academy&lt;/a&gt;&amp;nbsp;getting more familiar with the syntax of Python. I was impressed with the setup that they had (I would recommend it to my mom), and it helped me to learn python in a systematic way.&lt;br /&gt;&lt;br /&gt;Since the 23rd I've been working on adding certificated (proof that we gave the right answer to a yes-no question) to some of the functions in the matroid part of Sage. For the first two days, I spent a lot of time trying to get Sage to compile. For a while, the problem was an error in a new release, and then I had some type of trouble on my end. I've also spent a good amount of time figuring out the ins and outs of documentation practices.</content>
		<author>
			<name>Tara</name>
			<email>noreply@blogger.com</email>
			<uri>http://extendingmatroidfunctionality.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Extending Matroid Functionality Google Summer of Code 2016</title>
			<link rel="self" href="http://extendingmatroidfunctionality.blogspot.com/feeds/posts/default?alt=rss"/>
			<id>tag:blogger.com,1999:blog-3534817490044613273</id>
			<updated>2016-08-05T15:30:15+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">GSOC 2016</title>
		<link href="http://lifebynumber.org/life-by-blog/gsoc-2016/"/>
		<id>http://lifebynumber.org/life-by-blog/gsoc-2016/</id>
		<updated>2016-05-21T00:00:00+00:00</updated>
		<content type="html">What I love about programing is it is akin to solving a logic puzzle. You have all the pieces you need to solve it, you're allowed to search the internet for assistance, but the internet will not give you the answer, you still have to find it on you own.
If you have misread one letter or decoded one word wrong, you will not find the answer. You can spend twice as much time trying to solve the problem than actually solving the puzzle. That is why in coding, as with logic puzzles,</content>
		<author>
			<name>Lauren Devitt</name>
			<uri>http://lifebynumber.org/life-by-blog/</uri>
		</author>
		<source>
			<title type="html">Blog RSS</title>
			<link rel="self" href="http://lifebynumber.org/rss.xml"/>
			<id>http://lifebynumber.org/rss.xml</id>
			<updated>2016-08-12T02:30:10+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">For love of numbers...</title>
		<link href="http://lifebynumber.org/life-by-blog/for-love-of-numbers/"/>
		<id>http://lifebynumber.org/life-by-blog/for-love-of-numbers/</id>
		<updated>2016-05-20T00:00:00+00:00</updated>
		<content type="html">My love of mathematics started with a love of numbers. I enjoyed finding all possible ways I could add, subtract, and multiply different numbers in order to find a specific number, say twelve.  Twelve was my favorite number; I loved twelve. We become attached to numbers that have a deeper meaning to us; numbers that make us feel, make us remember. Sesame Street had the “Pinball Song”; this song consisted of counting to twelve with a catchy jingle every child could remember.</content>
		<author>
			<name>Lauren Devitt</name>
			<uri>http://lifebynumber.org/life-by-blog/</uri>
		</author>
		<source>
			<title type="html">Blog RSS</title>
			<link rel="self" href="http://lifebynumber.org/rss.xml"/>
			<id>http://lifebynumber.org/rss.xml</id>
			<updated>2016-08-12T02:30:10+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Getting Started</title>
		<link href="http://extendingmatroidfunctionality.blogspot.com/2016/05/getting-started.html"/>
		<id>tag:blogger.com,1999:blog-3534817490044613273.post-5298810881879400292</id>
		<updated>2016-05-09T17:29:00+00:00</updated>
		<content type="html">I first heard about Google Summer of Code a little over a year ago. It was something that I wanted to do for several reasons. I only had a chance to take a couple of programing classes in undergrad. (I didn't realized that I liked it till part way through my Junior year.) Since then, I've wanted to grow the length and complexity of projects that I was capable of successfully working on. Secondly, I like the idea of open source resources, because its free, and that lets poor college students use cool resources.&lt;br /&gt;&lt;br /&gt;My project is building and expanding tools in &lt;a href=&quot;http://www.sagemath.org/&quot;&gt;Sage&lt;/a&gt; to be used by people studying matroid theory. A &lt;a href=&quot;https://www.math.lsu.edu/~oxley/survey4.pdf&quot;&gt;matroid&lt;/a&gt; is a notion of independence that generalizes the independence structure that is found in vector spaces and that comes from looking at cycleless subgraphs of &lt;a href=&quot;https://en.wikipedia.org/wiki/Graph_theory&quot;&gt;graphs&lt;/a&gt;. Sage already has a lot of &lt;a href=&quot;http://doc.sagemath.org/html/en/reference/matroids/index.html&quot;&gt;tools&lt;/a&gt; that let people work with matroids, mostly created by Stefan van Zwam and Rudi Pendavingh. My &lt;a href=&quot;https://summerofcode.withgoogle.com/projects/#4830375092158464&quot;&gt;project&lt;/a&gt; focuses on a small collection of new tools.&lt;br /&gt;&lt;br /&gt;I'll be working with Stefan and Michael on this project.</content>
		<author>
			<name>Tara</name>
			<email>noreply@blogger.com</email>
			<uri>http://extendingmatroidfunctionality.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Extending Matroid Functionality Google Summer of Code 2016</title>
			<link rel="self" href="http://extendingmatroidfunctionality.blogspot.com/feeds/posts/default?alt=rss"/>
			<id>tag:blogger.com,1999:blog-3534817490044613273</id>
			<updated>2016-08-05T15:30:15+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Open source is now ready to compete with Mathematica for use in the classroom</title>
		<link href="http://sagemath.blogspot.com/2016/02/open-source-is-now-ready-to-directly.html"/>
		<id>tag:blogger.com,1999:blog-6365588202025292315.post-1537617977036691813</id>
		<updated>2016-03-10T08:02:27+00:00</updated>
		<content type="html">&lt;br /&gt;&lt;br /&gt;&lt;span&gt;&lt;span&gt;When I think about what makes SageMath different, one of the most fundamental things is that it was created by people who use it every day. &amp;nbsp;It was created by people doing research math, by people teaching math at universities, and by computer programmers and engineers using it for research. &amp;nbsp;It was created by people who really understand computational problems because we live them. &amp;nbsp;We understand the needs of math research, teaching courses, and managing an open source project that users can contribute to and customize to work for their own unique needs.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;The tools we were using, like Mathematica, are clunky, very expensive, and just don't do everything we need. &amp;nbsp;And worst of all, they are closed source software, meaning that you can't even see how they work, and can't modify them to do what you really need. &amp;nbsp;For teaching math, professors get bogged down scheduling computer labs and arranging for their students to buy and install expensive software.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;So I started SageMath as an open source project at Harvard in 2004, to solve the problem that other math software is expensive, closed source, and limited in functionality, and to create a powerful tool for the students in my classes. &amp;nbsp;It wasn't a project that was intended initially as something to be used by hundred of thousands of people. &amp;nbsp;But as I got into the project and as more professors and students started contributing to the project, I could clearly see that these weren't just problems that pissed me off, they were problems that made everyone angry.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;The scope of SageMath rapidly expanded. &amp;nbsp;Our mission evolved to create a free open source serious competitor to Mathematica and similar closed software that the mathematics community was collective spending hundreds of millions of dollars on every year. After a decade of work by over 500 contributors, we made huge progress.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;But installing SageMath was more difficult than ever. &amp;nbsp;It was at that point that I decided I needed to do something so that this groundbreaking software that people desperately needed could be shared with the world.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;So I created SageMathCloud, which is an extremely powerful web-based collaborative way for people to easily use SageMath and other open source software such as LaTeX, R, and Jupyter notebooks easily in their teaching &amp;nbsp;and research. &amp;nbsp; I created SageMathCloud based on nearly two decades of experience using math software in the classroom and online, at Harvard, UC San Diego, and University of Washington.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;SageMathCloud is commercial grade, hosted in Google's cloud, and very large classes are using it heavily right now. &amp;nbsp;It solves the installation problem by avoiding it altogether. &amp;nbsp;It is entirely open source.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Open source is now ready to directly compete with Mathematica for use&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;in the classroom. &amp;nbsp;They told us we could never make something&amp;nbsp;&lt;/span&gt;&lt;span&gt;good enough for mass adoption, but we have made something even better. &amp;nbsp;For the first time, we're making it possible for you to easily use Python and R in your teaching instead of Mathematica; these are industry standard mainstream open source programming languages with strong support from Google, Microsoft and other industry leaders. &amp;nbsp; For the first time, we're making it possible for you to collaborate in real time and manage your course online using the same cutting edge software used by elite mathematicians at the best universities in the world.&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;A huge community in academia and in industry are all working together to make open source math software better at a breathtaking pace, and the traditional closed development model just can't keep up.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=11078220&quot; target=&quot;_blank&quot;&gt;Hacker News&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/math/comments/45q7j1/sagemath_open_source_is_now_ready_to_compete_with/&quot; target=&quot;_blank&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</content>
		<author>
			<name>William Stein</name>
			<email>noreply@blogger.com</email>
			<uri>http://sagemath.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Sage: Open Source Mathematics Software</title>
			<subtitle type="html">This is my blog about things related to Sage.</subtitle>
			<link rel="self" href="http://sagemath.blogspot.com/feeds/posts/default"/>
			<id>tag:blogger.com,1999:blog-6365588202025292315</id>
			<updated>2016-08-12T02:30:04+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Noncommutative Algebras in Sage</title>
		<link href="http://sheaves.github.io/Noncommutative-Sage/"/>
		<id>http://sheaves.github.io/Noncommutative-Sage/</id>
		<updated>2016-03-03T00:00:00+00:00</updated>
		<content type="html">&lt;p&gt;In this post, I’ll demonstrate 3 ways to define non-commutative rings in Sage. They’re essentially different ways of expressing the non-commutative relations in the ring:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://doc.sagemath.org/html/en/reference/algebras/sage/algebras/free_algebra.html#sage.algebras.free_algebra.FreeAlgebra_generic.g_algebra&quot; target=&quot;_blank&quot;&gt;Via &lt;code class=&quot;highlighter-rouge&quot;&gt;g_algebra&lt;/code&gt;&lt;/a&gt;: define the relations directly&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sagemath.org/documentation/html/en/reference/polynomial_rings/sage/rings/polynomial/plural.html&quot; target=&quot;_blank&quot;&gt;Via &lt;code class=&quot;highlighter-rouge&quot;&gt;NCPolynomialRing_plural&lt;/code&gt;&lt;/a&gt;: define a pair of structural matrices&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://doc.sagemath.org/html/en/reference/rings/sage/rings/quotient_ring.html&quot; target=&quot;_blank&quot;&gt;Via a quotient of a letterplace ring&lt;/a&gt;: define the ideal generated by the relations (only works for homogeneous relations)&lt;/li&gt;
&lt;/ol&gt;

&lt;!--more--&gt;

&lt;p&gt;As far as I know, all 3 methods rely on Sage’s interface with &lt;a href=&quot;https://www.singular.uni-kl.de/index.php&quot; target=&quot;_blank&quot;&gt;Singular&lt;/a&gt; and its non-commutative extension &lt;a href=&quot;https://www.singular.uni-kl.de/Manual/4-0-2/sing_469.htm&quot; target=&quot;_blank&quot;&gt;Plural&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In addition to all the documentation linked above, I also relied heavily on  Greuel and Pfister’s &lt;a href=&quot;http://www.cimpa-icpam.org/archivesecoles/20130130100834/singularbuch1-210.pdf&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;A Singular Introduction to
Commutative Algebra&lt;/em&gt;&lt;/a&gt;. Despite the title, it does have a pretty substantial section (1.9) devoted to non-commutative $G$-algebras.&lt;/p&gt;

&lt;h2 id=&quot;umathfraksl2-and-its-homogenization&quot;&gt;$U(\mathfrak{sl}_2)$ and its homogenization&lt;/h2&gt;

&lt;p&gt;The running example throughout this post will be the universal enveloping algebra $U(\mathfrak{sl}_2)$ over $\mathbb{Q}$.&lt;/p&gt;

&lt;p&gt;We’ll define this to be the (non-commutative) $\mathbb{Q}$-algebra $U$ with generators $e,f,h$ subject to the relations&lt;/p&gt;



&lt;p&gt;If we set $e,f,h$ to have degree 1, these relations are not homogeneous. Their left-hand sides only have degree 2 terms, while their right-hand sides have degree 1 terms as well. This is fine with the first two methods, but won’t work for method 3 (which requires homogeneous relations).&lt;/p&gt;

&lt;p&gt;To demonstrate the third method, we’ll define the $\mathbb{Q}$-algebra $H$ with generators $e,f,h,t$ subject to the homogeneous relations&lt;/p&gt;





&lt;p&gt;We can obtain $U$ both as a quotient and a localization of $H$:&lt;/p&gt;



&lt;h2 id=&quot;g-algebras&quot;&gt;$G$-algebras&lt;/h2&gt;
&lt;p&gt;Using the  &lt;a href=&quot;http://doc.sagemath.org/html/en/reference/algebras/sage/algebras/free_algebra.html#sage.algebras.free_algebra.FreeAlgebra_generic.g_algebra&quot; target=&quot;_blank&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;g_algebra&lt;/code&gt;&lt;/a&gt; method of Sage’s &lt;code class=&quot;highlighter-rouge&quot;&gt;FreeAlgebra&lt;/code&gt; class, we can simply plug our noncommutative relations in, and get our non-commutative ring. This is about as easy as it gets:&lt;/p&gt;

&lt;div class=&quot;sage&quot;&gt;
  
&lt;/div&gt;

&lt;p&gt;Let’s unravel what’s going on here.&lt;/p&gt;

&lt;h3 id=&quot;monomial-orderings-and-pbw-basis&quot;&gt;Monomial orderings and PBW basis&lt;/h3&gt;
&lt;p&gt;Most algorithms for commutative and non-commutative rings require an ordering on the generators. In our case, let’s use the ordering&lt;/p&gt;



&lt;p&gt;This is implicitly stated in our code: we wrote &lt;code class=&quot;highlighter-rouge&quot;&gt;F.&amp;lt;e,f,h&amp;gt;&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;F.&amp;lt;h,e,f&amp;gt;&lt;/code&gt;, for example.&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;standard word&lt;/em&gt; is a monomial of the form&lt;/p&gt;



&lt;p&gt;In the polynomial ring $\mathbb{Q}[e,f,h]$, every monomial can be expressed in this form, so the set of standard words forms a $\mathbb{Q}$-basis for $\mathbb{Q}[e,f,h]$.&lt;/p&gt;

&lt;p&gt;In a non-commutative ring, whether or not the standard words form a basis depends on what relations we have. Such a basis, if it exists, is called a &lt;a href=&quot;https://en.wikipedia.org/wiki/Poincar%C3%A9%E2%80%93Birkhoff%E2%80%93Witt_theorem&quot; target=&quot;_blank&quot;&gt;PBW basis&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The free algebra $F = \mathbb{Q}\langle e,f,h\rangle$ has no relations, so does not have a PBW basis. Fortunately, our algebra $U$ does have a PBW basis.&lt;/p&gt;

&lt;p&gt;This means that we can always express a non-standard monomial (e.g. $fe$) as a sum of standard monomials (e.g. $ef - h$). The non-commutative relations that define $U$ can thus be thought of as an algorithm for turning non-standard words into sums of standard words.&lt;/p&gt;

&lt;p&gt;To do this in Sage, we define a &lt;a href=&quot;https://docs.python.org/2/tutorial/datastructures.html#dictionaries&quot; target=&quot;_blank&quot;&gt;dictionary&lt;/a&gt; whose keys are non-standard words and values are the standard words they become.&lt;/p&gt;

&lt;p&gt;In the above example, our dictionary was short enough to fit into one line, but we could also define a dictionary separately and pass it into &lt;code class=&quot;highlighter-rouge&quot;&gt;g_algebra&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;sage&quot;&gt;
  
&lt;/div&gt;

&lt;p&gt;It’s very important that the keys are non-standard words and the values are sums of standard words. Mathematically, the relation $fe = ef - h$ is the same as $ef = fe + h$, but if we replace &lt;code class=&quot;highlighter-rouge&quot;&gt;f*e : e*f - h&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;e*f : f*e + h&lt;/code&gt; in the code, we’ll get an error (try it!).&lt;/p&gt;

&lt;h3 id=&quot;what-are-g-algebras&quot;&gt;What are $G$-algebras?&lt;/h3&gt;
&lt;p&gt;The reason why $U$ has a PBW basis is because it is a $G$-algebra. Briefly, $G$-algebras are algebras whose relations satisfy certain non-degeneracy conditions that make the algebra nice to work with.&lt;/p&gt;

&lt;p&gt;For a full definition of $G$-algebras, refer to &lt;a href=&quot;http://www.cimpa-icpam.org/archivesecoles/20130130100834/singularbuch1-210.pdf&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;A Singular Introduction to Commutative Algebra&lt;/em&gt;&lt;/a&gt; or the &lt;a href=&quot;https://www.singular.uni-kl.de/Manual/4-0-2/sing_534.htm#SEC573&quot; target=&quot;_blank&quot;&gt;Plural manual&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If $A$ is a $G$-algebra, then it has a PBW basis, is left and right Noetherian, and is an integral domain. More importantly (for this site at least!), it means that we can define $A$ in Singular/Plural, and hence in Sage.&lt;/p&gt;

&lt;h2 id=&quot;structural-matrices-for-a-g-algebra&quot;&gt;Structural matrices for a $G$-algebra&lt;/h2&gt;
&lt;p&gt;Another way of writing our non-commutative relations is&lt;/p&gt;



&lt;p&gt;where $ * $ denotes element-wise multiplication (so there isn’t any linear algebra going on here; we’re just using matrices to organize the information). Let $N,C,S,D$ be the matrices above, in that order, so that $N = C*S + D$.&lt;/p&gt;

&lt;p&gt;If we let $x_1 = e, x_2 = f, x_3 = h$ (so that $x_i \leq x_j$ if $i \leq j$) then for $i &amp;lt; j$&lt;/p&gt;



&lt;p&gt;In other words, $N$ contains the non-standard words that we’re trying to express in terms of the standard words in $S$.&lt;/p&gt;

&lt;p&gt;The matrices $C$ and $D$ are called the &lt;em&gt;structural matrices&lt;/em&gt; of the $G$-algebra, and their entries are such that our relations may be written&lt;/p&gt;



&lt;p&gt;with zeros everywhere else ($i \geq j$). If $C = D = 0$, the resulting algebra will be commutative.&lt;/p&gt;

&lt;p&gt;We can use the structural matrices $C$ and $D$ to define our algebra via Sage’s  &lt;a href=&quot;http://www.sagemath.org/documentation/html/en/reference/polynomial_rings/sage/rings/polynomial/plural.html&quot; target=&quot;_blank&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NCPolynomialRing_plural&lt;/code&gt;&lt;/a&gt; function (note that Python uses zero-indexing for matrices):&lt;/p&gt;

&lt;div class=&quot;sage&quot;&gt;
  
&lt;/div&gt;

&lt;p&gt;Note that &lt;code class=&quot;highlighter-rouge&quot;&gt;R&lt;/code&gt; is a commutative polynomial ring. In fact, up till the point where we call &lt;code class=&quot;highlighter-rouge&quot;&gt;NCPolynomialRing_plural&lt;/code&gt;, even the variables &lt;code class=&quot;highlighter-rouge&quot;&gt;e,f,h&lt;/code&gt; are treated as commutative variables.&lt;/p&gt;

&lt;p&gt;This method of defining $U$ is considerably longer and more prone to mistakes than using &lt;code class=&quot;highlighter-rouge&quot;&gt;g_algebra&lt;/code&gt;. As stated in the &lt;a href=&quot;http://www.sagemath.org/documentation/html/en/reference/polynomial_rings/sage/rings/polynomial/plural.html&quot; target=&quot;_blank&quot;&gt;documentation&lt;/a&gt;, this is not intended for use! I’m including it here because this is essentially how one would go about defining a $G$-algebra in Singular. In fact, the Sage method &lt;code class=&quot;highlighter-rouge&quot;&gt;g_algebra&lt;/code&gt; calls &lt;code class=&quot;highlighter-rouge&quot;&gt;NCPolynomialRing_plural&lt;/code&gt;, which in turn calls Singular.&lt;/p&gt;

&lt;h2 id=&quot;quotients-of-letterplace-rings&quot;&gt;Quotients of letterplace rings&lt;/h2&gt;
&lt;p&gt;Our final method for defining non-commutative rings makes use of &lt;a href=&quot;http://doc.sagemath.org/html/en/reference/algebras/sage/algebras/letterplace/free_algebra_letterplace.html&quot; target=&quot;_blank&quot;&gt;Sage’s implementation of Singular’s letterplace rings&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As mentioned at the start of this post, this method requires the relations to be homogeneous, so we’ll work with $H$ instead of $U$.&lt;/p&gt;

&lt;p&gt;Let $\mathbb{Q}\langle e,f,h,t \rangle$ be the free algebra on 4 variables. Consider the two-sided ideal $I$ generated by the relations for $H$:&lt;/p&gt;



&lt;p&gt;Then&lt;/p&gt;



&lt;p&gt;This can be expressed Sage-ly:&lt;/p&gt;

&lt;div class=&quot;sage&quot;&gt;
  
&lt;/div&gt;

&lt;p&gt;The expression &lt;code class=&quot;highlighter-rouge&quot;&gt;F*I*F&lt;/code&gt; is the two-sided ideal generated by elements in the list &lt;code class=&quot;highlighter-rouge&quot;&gt;I&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Although $U$ cannot be defined using this method, $H$ can be defined using all three methods. As a (fun?) exercise, try defining $H$ using the other two methods.&lt;/p&gt;

&lt;h2 id=&quot;difficulties&quot;&gt;Difficulties&lt;/h2&gt;
&lt;p&gt;These methods can be used to define many non-commutative algebras such as the Weyl algebra and various enveloping algebras of Lie algebras. One can also define these algebras over fields other than $\mathbb{Q}$, such as $\mathbb{C}$ or $\mathbb{F}_p$.&lt;/p&gt;

&lt;p&gt;However, we cannot define algebras over $\mathbb{Q}(q)$, the fraction field of $\mathbb{Q}[q]$:&lt;/p&gt;

&lt;div class=&quot;sage&quot;&gt;
  
&lt;/div&gt;

&lt;p&gt;This is a problem if we want to define rings with relations such as&lt;/p&gt;



&lt;p&gt;Such relations occur frequently when studying quantum groups, for example.&lt;/p&gt;

&lt;p&gt;This is suprising, because one can easily define $\mathbb{Q}(q)$ and non-commutative $\mathbb{Q}(q)$-algebras in Singular/Plural, which is what Sage is using. It seems that the problem is in Sage’s wrapper for Singular/Plural, because Sage can’t even pass the ring $\mathbb{Q}(q)$ to Singular.&lt;/p&gt;

&lt;p&gt;There’s a &lt;a href=&quot;http://trac.sagemath.org/ticket/14886&quot; target=&quot;_blank&quot;&gt;trac ticket&lt;/a&gt; for this problem, but until it gets resolved, we’ll just have to define such rings directly in Singular/Plural. Thanks to the amazing capabilities of the &lt;a href=&quot;https://sagecell.sagemath.org/&quot; target=&quot;_blank&quot;&gt;Sage Cell Server&lt;/a&gt;, we’ll do this in the next post!&lt;/p&gt;</content>
		<author>
			<name>Liang Ze</name>
			<uri>http://sheaves.github.io/</uri>
		</author>
		<source>
			<title type="html">Sheaves</title>
			<subtitle type="html">Making math concrete with Sage</subtitle>
			<link rel="self" href="http://sheaves.github.io/feed.xml"/>
			<id>http://sheaves.github.io/feed.xml</id>
			<updated>2016-07-07T07:30:12+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">&quot;If you were new faculty, would you start something like SageMathCloud sooner?&quot;</title>
		<link href="http://sagemath.blogspot.com/2016/02/if-you-were-new-faculty-member-again.html"/>
		<id>tag:blogger.com,1999:blog-6365588202025292315.post-17375596918912545</id>
		<updated>2016-02-25T15:14:04+00:00</updated>
		<content type="html">I was recently asked by a young academic: &quot;If you were a new faculty member again, would you start something like SageMathCloud sooner or simply leave for industry?&quot;  The academic goes on to say &quot;I am increasingly frustrated by continual evidence that it is more valuable to publish a litany of computational papers with no source code than to do the thankless task of developing a niche open source library; deep mathematical software is not appreciated by either mathematicians or the public.&quot;&lt;br /&gt;&lt;br /&gt;I wanted to answer that &quot;things have gotten better&quot; since back in 2000 when I started as an academic who does computation.  Unfortunately, I think they have gotten worse.  I do not understand why.   In fact, this evening I just received the most recent in a &lt;a href=&quot;http://wstein.org/grants/&quot; target=&quot;_blank&quot;&gt;long string of rejections by the NSF&lt;/a&gt;.  &lt;br /&gt;&lt;br /&gt;Regarding a company versus taking a job in industry, for me personally there is no point in starting a company unless you have a goal that can only be accomplished via a company, since building a business from scratch is extremely hard and has little to do with math or research.  I do have such a goal: &quot;create a viable open source alternative to Mathematica, etc...&quot;.   I was very clearly told by Michael Monagan (co-founder of Maplesoft) in 2006 that this goal could not be accomplished in academia, and I spent the last 10 years trying to prove him wrong.  &lt;br /&gt;&lt;br /&gt;On the other hand, leaving for a job in industry means that your focus will switch from &quot;pure&quot; research to solving concrete problems that make products better for customers.  That said, many of the mathematicians who work on open source math software do so because they care so much about making the experience of using math software much better for the math community.  What often drives Sage developers is exactly the sort of passionate care for &quot;consumer focus&quot; and products that also makes one successful in industry.  I'm sure you know exactly what I mean, since it probably partly motivates your work.  It is sad that the math community turns its back on such people.   If the community were to systematically embrace them, instead of losing all these $300K+/year engineers to mathematics entirely -- which is exactly what we do constantly -- the experience of doing mathematics could be massively improved into the future.  But that is not what the community has chosen to do.  We are shooting ourselves in the foot.  &lt;br /&gt;&lt;br /&gt;Now that I have seen how academia works from the inside over 15 years I'm starting to understand a little why these things change very slowly, if ever.  In the mathematics department I'm at, there are a small handful of research areas in pure math, and due to how hiring works (voting system, culture, etc.) we have spent the last 10 years hiring in those areas little by little (to replace people who die/retire/leave).   I imagine most mathematics departments are very similar.   &quot;Open source software&quot; is not one of those traditional areas.   Nobody will win a Fields Medal in it.  &lt;br /&gt;&lt;br /&gt;Overall, the mathematical community does not value open source mathematical software in proportion to its value, and doesn't understand its importance to mathematical research and education.  I would like to say that things have got a lot better over the last decade, but I don't think they have. My personal experience is that much of the &quot;next generation&quot; of mathematicians who would have changed how the math community approaches open source software are now in industry, or soon will be, and hence they have no impact on academic mathematical culture.   Every one of my Ph.D. students are now at Google/Facebook/etc.  &lt;br /&gt;&lt;br /&gt;We as a community overall would be better off if, when considering how we build departments, we put &quot;mathematical software writers&quot; on an equal footing with &quot;algebraic geometers&quot;.   We should systematically consider quality open source software contributions on a potentially equal footing with publications in journals.  &lt;br /&gt;&lt;br /&gt;To answer the original question, &lt;b&gt;YES&lt;/b&gt;, knowing what I know now, I really wish I had started something like SageMathCloud sooner. In fact, here's the &lt;a href=&quot;https://groups.google.com/forum/#!forum/sage-dotcom&quot; target=&quot;_blank&quot;&gt;previously private discussion&lt;/a&gt; from eight years ago when I almost did.   &lt;br /&gt;&lt;br /&gt;--&lt;br /&gt;&lt;br /&gt;- There is a&amp;nbsp;&lt;a href=&quot;https://docs.google.com/document/d/1UxEE5GjSeA07xJy_SUDy-rDia8tzFPGS6kMIkMPHh8E/edit&quot; target=&quot;_blank&quot;&gt;community generated followup ...&lt;/a&gt;&lt;br /&gt;&lt;div&gt;- Relevant blog post:&amp;nbsp;&lt;a href=&quot;http://martin.softf1.com/g/yellow_soap_opera_blog/about-software-development-in-companies-communities-and-the-academia&quot; target=&quot;_blank&quot;&gt;About Software Development in Companies, Communities and the Academia&lt;/a&gt;&lt;/div&gt;</content>
		<author>
			<name>William Stein</name>
			<email>noreply@blogger.com</email>
			<uri>http://sagemath.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Sage: Open Source Mathematics Software</title>
			<subtitle type="html">This is my blog about things related to Sage.</subtitle>
			<link rel="self" href="http://sagemath.blogspot.com/feeds/posts/default"/>
			<id>tag:blogger.com,1999:blog-6365588202025292315</id>
			<updated>2016-08-12T02:30:04+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Elliptic curves: Magma versus Sage</title>
		<link href="http://sagemath.blogspot.com/2016/02/elliptic-curves-magma-versus-sage.html"/>
		<id>tag:blogger.com,1999:blog-6365588202025292315.post-4357444546330326452</id>
		<updated>2016-02-24T12:07:30+00:00</updated>
		<content type="html">&lt;h3&gt;Elliptic Curves&lt;/h3&gt;Elliptic curves are certain types of nonsingular plane cubic curves, e.g., y^2 = x^3&amp;nbsp;+ ax&amp;nbsp;+b, which are central to both number theory and cryptography (e.g., they are used to compute the hash in bitcoin).&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;https://4.bp.blogspot.com/-qW1pKO63Xfs/Vs4NUYQVtbI/AAAAAAABXIE/Nw6-KGy31-0/s1600/Screen%2BShot%2B2016-02-24%2Bat%2B12.06.23%2BPM.png&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;227&quot; src=&quot;https://4.bp.blogspot.com/-qW1pKO63Xfs/Vs4NUYQVtbI/AAAAAAABXIE/Nw6-KGy31-0/s400/Screen%2BShot%2B2016-02-24%2Bat%2B12.06.23%2BPM.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;h3&gt;Magma and Sage&lt;/h3&gt;If you want to do a wide range of explicit computations with elliptic curves, for research purposes, you will very likely use&amp;nbsp;&lt;a href=&quot;http://sagemath.org/&quot; target=&quot;_blank&quot;&gt;SageMath&amp;nbsp;&lt;/a&gt;or&amp;nbsp;&lt;a href=&quot;http://magma.maths.usyd.edu.au/magma/&quot; target=&quot;_blank&quot;&gt;Magma&lt;/a&gt;. If you're&amp;nbsp;&lt;strong&gt;really&lt;/strong&gt;&amp;nbsp;serious, you'll use both.&lt;br /&gt;&lt;br /&gt;Both Sage and Magma are far ahead of all other software (e.g., Mathematica, Maple and Matlab) for elliptic curves.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://magma.maths.usyd.edu.au/magma/handbook/part/16&quot;&gt;Magma reference manual about elliptic curves.&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://doc.sagemath.org/html/en/reference/plane_curves/index.html#elliptic-curves&quot;&gt;Sage reference manual about elliptic curves.&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://pari.math.u-bordeaux.fr/dochtml/html.stable/Functions_related_to_elliptic_curves.html&quot;&gt;Pari reference manual about elliptic curves.&lt;/a&gt; -- pari is part of Sage and has some unique powerful functionality, e.g., &lt;code&gt;ellheegner&lt;/code&gt;...&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;history&quot;&gt;A Little History&lt;/h3&gt;When I started contributing to Magma in 1999, I remember that Magma was way, way behind Pari. I remember having lunch with John Cannon (founder of Magma), and telling him I would no longer have to use Pari if only Magma would have dramatically faster code for computing point counts on elliptic curves.&lt;br /&gt;&lt;br /&gt;A few years later, John wisely hired Mark Watkins to work fulltime on Magma, and Mark has been working there for over a decade. Mark is definitely one of the top people in the world at implementing (and using) computational number theory algorithms, and he's ensured that Magma can do a lot. Some of that &quot;do a lot&quot; means catching up with (and surpassing!) what was in Pari and Sage for a long time (e.g., point counting, &lt;span class=&quot;math&quot;&gt;&lt;em&gt;p&lt;/em&gt;&lt;/span&gt;-adic &lt;span class=&quot;math&quot;&gt;&lt;em&gt;L&lt;/em&gt;&lt;/span&gt;-functions, etc.)&lt;br /&gt;&lt;br /&gt;However, in addition, many people have visited Sydney and added extremely deep functionality for doing higher descents to Magma, which is &lt;strong&gt;not available in any open source software&lt;/strong&gt;. Search for Magma in &lt;a href=&quot;http://arxiv.org/abs/1602.01894&quot;&gt;this paper&lt;/a&gt; to see how, even today, there seems to be no open source way to compute the rank of the curve &lt;span class=&quot;math&quot;&gt;&lt;em&gt;y&lt;/em&gt;&lt;sup&gt;2&lt;/sup&gt; = &lt;em&gt;x&lt;/em&gt;&lt;sup&gt;3&lt;/sup&gt; + 169304&lt;em&gt;x&lt;/em&gt; + 25788938&lt;/span&gt;. &amp;nbsp;(The rank is 0.)&lt;br /&gt;&lt;h3 id=&quot;situation-today&quot;&gt;Two Codebases&lt;/h3&gt;There are several elliptic curves algorithms available &lt;strong&gt;only in Magma&lt;/strong&gt; (e.g., higher descents) ... and some available &lt;strong&gt;only in Sage&lt;/strong&gt; (&lt;span class=&quot;math&quot;&gt;&lt;em&gt;L&lt;/em&gt;&lt;/span&gt;-function rank bounds, some overconvergent modular symbols, zeros of &lt;span class=&quot;math&quot;&gt;&lt;em&gt;L&lt;/em&gt;&lt;/span&gt;-functions, images of Galois representations). I could be wrong about functionality not being in Magma, since almost anything can get implemented in a year...&lt;br /&gt;&lt;br /&gt;The code bases are almost completely separate, which is a very good thing. Any time something gets implemented in one, it gets (or should get) tested via a big run on elliptic curves up to some bound in the other. This sometimes results in bugs being found. I remember &lt;a href=&quot;http://trac.sagemath.org/ticket/3674&quot; target=&quot;_blank&quot;&gt;refereeing the &quot;integral points&quot; code in Sage&lt;/a&gt; by running it against all curves up to some bound and comparing to what Magma output, and getting many discrepancies, which showed that there were bugs in both Sage and Magma.&lt;br /&gt;Thus we would be way better off if Sage could do everything Magma does (and vice versa).&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</content>
		<author>
			<name>William Stein</name>
			<email>noreply@blogger.com</email>
			<uri>http://sagemath.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Sage: Open Source Mathematics Software</title>
			<subtitle type="html">This is my blog about things related to Sage.</subtitle>
			<link rel="self" href="http://sagemath.blogspot.com/feeds/posts/default"/>
			<id>tag:blogger.com,1999:blog-6365588202025292315</id>
			<updated>2016-08-12T02:30:04+00:00</updated>
		</source>
	</entry>

	<entry xml:lang="en">
		<title type="html">unsupported operand parent for *, Matrix over number field, vector over symbolic ring</title>
		<link href="http://www.slabbe.org/blogue/2016/02/unsupported-operand-parent-for-matrix-over-number-field-vector-over-symbolic-ring"/>
		<id>http://www.slabbe.org/blogue/2016/02/unsupported-operand-parent-for-matrix-over-number-field-vector-over-symbolic-ring</id>
		<updated>2016-02-18T10:17:00+00:00</updated>
		<content type="html">&lt;div class=&quot;document&quot;&gt;
&lt;p&gt;Yesterday I received this email (in french):&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;Salut,
avec Thomas on a une question bête:

K.&amp;lt;x&amp;gt;=NumberField(x*x-x-1)

J'aimerais multiplier une matrice avec des coefficients en x par un vecteur
contenant des variables a et b.  Il dit &amp;quot;unsupported operand parent for *,
Matrix over number field, vector over symbolic ring&amp;quot;

Est ce grave ?
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;Here is my answer. Indeed, in Sage, symbolic variables can't multiply with
elements in an Number Field in x:&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NumberField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;ne&quot;&gt;TypeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unsupported&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operand&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Symbolic Ring'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'Number Field in x with defining polynomial x^2 - x - 1'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;But, we can define a polynomial ring with variables in a,b and coefficients in
the NumberField. Then, we are able to multiply &lt;tt class=&quot;docutils literal&quot;&gt;a&lt;/tt&gt; with &lt;tt class=&quot;docutils literal&quot;&gt;x&lt;/tt&gt;:&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NumberField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defining&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;polynomial&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Multivariate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Polynomial&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ring&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;over&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;defining&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;polynomial&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;With two square brackets, we obtain powers series:&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Multivariate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Power&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Series&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ring&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;over&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;defining&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;polynomial&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;It works with matrices:&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MatrixSpace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MS&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Full&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MatrixSpace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dense&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrices&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;over&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Multivariate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Power&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Series&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ring&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;over&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defining&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;polynomial&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;              &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;       &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;                &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;/div&gt;</content>
		<author>
			<name>Sébastien Labbé</name>
			<uri>http://www.slabbe.org/blogue/</uri>
		</author>
		<source>
			<title type="html">Sébastien Labbé</title>
			<subtitle type="html">Sébastien Labbé</subtitle>
			<link rel="self" href="http://www.slabbe.org/blogue/categorie/sage/feed/atom/index.xml"/>
			<id>http://www.slabbe.org/blogue/feed/atom/</id>
			<updated>2016-06-27T10:30:05+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">The Weyl Algebra and $\mathfrak{sl}_2$</title>
		<link href="http://sheaves.github.io/Weyl-Algebra/"/>
		<id>http://sheaves.github.io/Weyl-Algebra/</id>
		<updated>2016-02-17T00:00:00+00:00</updated>
		<content type="html">&lt;!--more--&gt;

&lt;p&gt;I’ve been away from this blog for quite a while - almost a year, in fact! My excuses are my wedding and the prelims (a.k.a. quals), as well as all the preparation that had to go into them (although, to be honest, those things only occupied me till September last year!).&lt;/p&gt;

&lt;p&gt;Looking back at my previous posts, I’ve realized that in attempting to teach &lt;em&gt;both&lt;/em&gt; math and code, I probably ended up doing neither. This is really not the best place to learn representation theory (for example) - there are better books and blogs out there. Also, most of the code that I wrote to illustrate those posts feels contrived, and neither highlights Sage’s strengths nor reflects how I normally use Sage for my assignments and projects.&lt;/p&gt;

&lt;p&gt;I’ve thus decided to write shorter posts with code that I actually use (on &lt;a href=&quot;https://cloud.sagemath.com/&quot; target=&quot;_blank&quot;&gt;SageMathCloud&lt;/a&gt;), along with some explanations of the code. Lately, I’ve been writing code for non-commutative algebra and combinatorics, so today I’ll start with a simple example of a non-commutative algebra.&lt;/p&gt;

&lt;h2 id=&quot;the-weyl-algebra&quot;&gt;The Weyl Algebra&lt;/h2&gt;
&lt;p&gt;The $1$-dim. Weyl algebra is the (non-commutative) algebra generated by $x, \partial_x$ subject to the relations&lt;/p&gt;



&lt;p&gt;If we treat $x$ as “multiplication by $x$” and $\partial_x$ as  “differentiation w.r.t. $x$”, this relation is really just an application of the chain rule:&lt;/p&gt;



&lt;p&gt;We can generalize to higher dimensions: the $n$-dim. Weyl algebra is the algebra generated by  $x_1,\dots,x_n,\partial_{x_1},\dots,\partial_{x_n}$ quotiented by the relations that arise from treating them as the obvious operators on $\mathbb{F}[x_1,\dots,x_n]$.&lt;/p&gt;

&lt;h3 id=&quot;weyl-algebras-in-sage&quot;&gt;Weyl algebras in Sage&lt;/h3&gt;
&lt;p&gt;It’s easy to &lt;a href=&quot;http://doc.sagemath.org/html/en/reference/algebras/sage/algebras/weyl_algebra.html&quot; target=&quot;_blank&quot;&gt;define the Weyl algebra in Sage&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;linked&quot;&gt;
  
&lt;/div&gt;

&lt;p&gt;Calling &lt;code class=&quot;highlighter-rouge&quot;&gt;inject_variables&lt;/code&gt; allows us to use the operators &lt;code class=&quot;highlighter-rouge&quot;&gt;x,y,z,dx,dy,dz&lt;/code&gt; in subsequent code (where &lt;code class=&quot;highlighter-rouge&quot;&gt;dx&lt;/code&gt; denotes $\partial_x$, etc).&lt;/p&gt;

&lt;p&gt;One can do rather complicated computations:&lt;/p&gt;

&lt;div class=&quot;linked&quot;&gt;
  
&lt;/div&gt;

&lt;p&gt;By default, Sage chooses to represent monomials with &lt;code class=&quot;highlighter-rouge&quot;&gt;x,y,z&lt;/code&gt; in front of &lt;code class=&quot;highlighter-rouge&quot;&gt;dx,dy,dz&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;linked&quot;&gt;
  
&lt;/div&gt;

&lt;p&gt;Keep in mind that &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; does not refer to the polynomial $x \in \mathbb{F}[x]$, so one should not expect &lt;code class=&quot;highlighter-rouge&quot;&gt;dx*x&lt;/code&gt; to be &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(For some reason &lt;code class=&quot;highlighter-rouge&quot;&gt;show&lt;/code&gt; does not give the right output. Try &lt;code class=&quot;highlighter-rouge&quot;&gt;show(x)&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;show(x*dx)&lt;/code&gt;, for example.)&lt;/p&gt;

&lt;h2 id=&quot;representations-of-mathfraksl2&quot;&gt;Representations of $\mathfrak{sl}_2$&lt;/h2&gt;
&lt;p&gt;It turns out that the $1$-dim. Weyl algebra gives a representation of $\mathfrak{sl}_2(\mathbb{F})$.&lt;/p&gt;

&lt;p&gt;The Lie algebra $\mathfrak{sl}_2(\mathbb{F})$ is generated by $E,F,H$ subject to the relations&lt;/p&gt;



&lt;p&gt;Define the following elements of the $1$-dim. Weyl algebra:&lt;/p&gt;



&lt;p&gt;We can use Sage to quickly verify that these elements indeed satisfy the relations for $\mathfrak{sl}_2$ (using the commutator as the Lie bracket i.e. $[A,B] = AB - BA$):&lt;/p&gt;

&lt;div class=&quot;sage&quot;&gt;
  
&lt;/div&gt;

&lt;p&gt;Working over $\mathbb{C}$, this action of $\mathfrak{sl}_2(\mathbb{C})$ makes $\mathbb{C}[x]$ a Verma module of highest weight $0$.&lt;/p&gt;

&lt;p&gt;In fact, we can make $\mathbb{C}[x]$ a Verma module of highest weight $c$ for any $c \in \mathbb{C}$ by using:&lt;/p&gt;



&lt;p&gt;We verify this again in Sage:&lt;/p&gt;

&lt;div class=&quot;sage&quot;&gt;
  
&lt;/div&gt;

&lt;p&gt;In subsequent posts, I’ll talk more about defining other non-commutative algebras in Sage and Singular.&lt;/p&gt;</content>
		<author>
			<name>Liang Ze</name>
			<uri>http://sheaves.github.io/</uri>
		</author>
		<source>
			<title type="html">Sheaves</title>
			<subtitle type="html">Making math concrete with Sage</subtitle>
			<link rel="self" href="http://sheaves.github.io/feed.xml"/>
			<id>http://sheaves.github.io/feed.xml</id>
			<updated>2016-07-07T07:30:12+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Thinking of using SageMathCloud in a college course?</title>
		<link href="http://sagemath.blogspot.com/2016/01/thinking-of-using-sagemathcloud-in.html"/>
		<id>tag:blogger.com,1999:blog-6365588202025292315.post-1296147941689942703</id>
		<updated>2016-01-15T09:14:07+00:00</updated>
		<content type="html">&lt;h2&gt;SageMathCloud course subscriptions&lt;/h2&gt;&lt;span&gt;&quot;We are &amp;nbsp;college instructors of the calculus sequence and ODE’s.&amp;nbsp; If the college were to purchase one of the upgrades for us as we use Sage with our students, who gets the benefits of the upgrade? &amp;nbsp;Is is the individual students that are in an instructor’s Sage classroom or is it the &amp;nbsp;collaborators on an instructor’s project?&quot;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;If you were to purchase just the $7/month plan and apply the upgrades&amp;nbsp;&lt;/span&gt;&lt;span&gt;to *one* single project, then all collaborators on that one project&amp;nbsp;&lt;/span&gt;&lt;span&gt;would benefit from those upgrades while using that project.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;If you were to purchase a course plan for say $399/semester, then y&lt;/span&gt;&lt;span&gt;ou could apply the upgrades (network access and members only hosting)&amp;nbsp;&lt;/span&gt;&lt;span&gt;to 70 projects that you might create for a course.&amp;nbsp; &amp;nbsp;When you create a&amp;nbsp;&lt;/span&gt;&lt;span&gt;course by clicking +New, then &quot;Manage a Course&quot;, then add students,&amp;nbsp;&lt;/span&gt;&lt;span&gt;each student has their own project created automatically.&amp;nbsp; All&amp;nbsp;&lt;/span&gt;&lt;span&gt;instructors (anybody who is a collaborator on the project where you&amp;nbsp;&lt;/span&gt;&lt;span&gt;clicked &quot;Manage a course&quot;) is also added to the student's project.&amp;nbsp;&lt;/span&gt;&lt;span&gt;In course settings you can easily apply the upgrades you purchase to&amp;nbsp;&lt;/span&gt;&lt;span&gt;all projects in the course. &amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;Also I'm currently working on a new feature where instructors may&amp;nbsp;&lt;/span&gt;&lt;span&gt;choose to require all students in their course to pay for the upgrade&amp;nbsp;&lt;/span&gt;&lt;span&gt;themselves.&amp;nbsp; There's a one time $9/course fee paid by the student and&amp;nbsp;&lt;/span&gt;&lt;span&gt;that's it.&amp;nbsp; At some colleges (in some places) this is ideal, and at&amp;nbsp;&lt;/span&gt;&lt;span&gt;other places it's not an option at all.&amp;nbsp; &amp;nbsp;I anticipate releasing this very soon.&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;http://3.bp.blogspot.com/-og6MM4q8B9M/VpkoWB952vI/AAAAAAABW1w/ObaqmjhbpGM/s1600/Screen%2BShot%2B2016-01-15%2Bat%2B9.11.15%2BAM.png&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;372&quot; src=&quot;http://3.bp.blogspot.com/-og6MM4q8B9M/VpkoWB952vI/AAAAAAABW1w/ObaqmjhbpGM/s640/Screen%2BShot%2B2016-01-15%2Bat%2B9.11.15%2BAM.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;h2&gt;Getting started with SageMathCloud courses&lt;/h2&gt;&lt;br /&gt;&lt;span&gt;You can &lt;b&gt;&lt;i&gt;fully use&lt;/i&gt;&amp;nbsp;&lt;/b&gt;the SMC course functionality without paying anything in order to get familiar with it and test it out. &amp;nbsp;The main benefit of paying is that you get network access and all projects get moved to members only servers, which are much more robust; also, we greatly prioritize support for paying customers. &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;This blog post is an overview of using SMC courses:&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.beezers.org/blog/bb/2015/09/grading-in-sagemathcloud/&quot; rel=&quot;noreferrer&quot; target=&quot;_blank&quot;&gt;http://www.beezers.org/blog/bb/2015/09/grading-in-sagemathcloud/&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;This has some screenshots and the second half is about courses:&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://blog.ouseful.info/2015/11/24/course-management-and-collaborative-jupyter-notebooks-via-sagemathcloud/&quot; rel=&quot;noreferrer&quot; target=&quot;_blank&quot;&gt;http://blog.ouseful.info/2015/11/24/course-management-and-collaborative-jupyter-notebooks-via-sagemathcloud/&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;Here are some video tutorials made by an instructor that used SMC with&amp;nbsp;&lt;/span&gt;&lt;span&gt;a large class in Iceland recently:&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=dgTi11ZS3fQ&quot; rel=&quot;noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.youtube.com/watch?v=dgTi11ZS3fQ&lt;/a&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=nkSdOVE2W0A&quot; rel=&quot;noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.youtube.com/watch?v=nkSdOVE2W0A&lt;/a&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=0qrhZQ4rjjg&quot; rel=&quot;noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.youtube.com/watch?v=0qrhZQ4rjjg&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;Note that the above videos show the basics of courses, then talk&amp;nbsp;&lt;/span&gt;&lt;span&gt;specifically about automated grading of Jupyter notebooks.&amp;nbsp; That might&amp;nbsp;&lt;/span&gt;&lt;span&gt;not be at all what you want to do -- &lt;a href=&quot;https://github.com/sagemathinc/smc/wiki/Teaching&quot; target=&quot;_blank&quot;&gt;many math courses &lt;/a&gt;use Sage&amp;nbsp;&lt;/span&gt;&lt;span&gt;worksheets, and probably don't automate the grading yet.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;Regarding using Sage itself for teaching your courses, check out the&amp;nbsp;&lt;/span&gt;&lt;span&gt;free pdf book to &quot;Sage for Undergraduates&quot; here, which the American Mathematical Society just published (there is also a very nice print version for about $23):&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.gregorybard.com/SAGE.html&quot; rel=&quot;noreferrer&quot; target=&quot;_blank&quot;&gt;http://www.gregorybard.com/SAGE.html&lt;/a&gt;</content>
		<author>
			<name>William Stein</name>
			<email>noreply@blogger.com</email>
			<uri>http://sagemath.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Sage: Open Source Mathematics Software</title>
			<subtitle type="html">This is my blog about things related to Sage.</subtitle>
			<link rel="self" href="http://sagemath.blogspot.com/feeds/posts/default"/>
			<id>tag:blogger.com,1999:blog-6365588202025292315</id>
			<updated>2016-08-12T02:30:04+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Mathematics Graduate School: preparation for non-academic employment</title>
		<link href="http://sagemath.blogspot.com/2016/01/mathematics-graduate-school-preparation.html"/>
		<id>tag:blogger.com,1999:blog-6365588202025292315.post-3741348850330137693</id>
		<updated>2016-01-08T22:25:16+00:00</updated>
		<content type="html">This is about my personal experience as a mathematics professor whose students all have non-academic jobs that they love.  This is in preparation for a panel at the Joint Mathematics Meetings in Seattle.&lt;br /&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;My students and industry&lt;/span&gt;&lt;br /&gt;&lt;div&gt;My graduated Ph.D. students:&lt;/div&gt;&lt;ul&gt;&lt;li&gt;3 at Google&lt;/li&gt;&lt;li&gt;1 at Facebook&lt;/li&gt;&lt;li&gt;1 at CCR&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;My graduating student (Hao Chen):&lt;/div&gt;&lt;ul&gt;&lt;li&gt;Applying for many postdocs&lt;/li&gt;&lt;li&gt;But just did summer internship at Microsoft Research with Kristin. (I’ve had four students do summer internships with Kristin)&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;All my students:&lt;/div&gt;&lt;ul&gt;&lt;li&gt;Have done a lot of Software development, maybe having little to do with math, e.g., “developing the Cython compiler”, “transition the entire Sage project to git”, etc.&lt;/li&gt;&lt;li&gt;Did a thesis squarely in number theory, with significant theoretical content.&lt;/li&gt;&lt;li&gt;Guilt (or guilty pleasure?) spending time on some programming tasks instead of doing what they are “supposed” to do as math grad students.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;me-academia-and-industry&quot;&gt;Me: academia and industry&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Math Ph.D. from Berkeley in 2000; many students of my advisor (Lenstra) went to work at CCR after graduating…&lt;/li&gt;&lt;li&gt;Academia: I’m a tenured math professor (since 2005) – number theory.&lt;/li&gt;&lt;li&gt;Industry: I founded a Delaware C Corp (SageMath, Inc.) one year ago to “commercialize Sage” due to VERY intense frustration trying to get grant funding for Sage development. Things have got so bad, with so many painful stupid missed opportunities over so many years, that I’ve given up on academia as a place to build Sage.&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;span&gt;Reality check:&lt;/span&gt;&amp;nbsp;Academia values basic research, not products. Industry builds concrete&amp;nbsp;&lt;em&gt;valuable&lt;/em&gt;&amp;nbsp;products. Not understanding this is a recipe for pain (at least it has been for me).&lt;/div&gt;&lt;h2 id=&quot;advice-for-students-from-students&quot;&gt;Advice for students from students&lt;/h2&gt;&lt;h3 id=&quot;robert-miller-google-&quot;&gt;Robert Miller (Google)&lt;/h3&gt;&lt;div&gt;My student Robert Miller’s post on Facebook yesterday: &lt;b&gt;“I LOVE MY JOB”&lt;/b&gt;. Why: “Today I gave the first talk in a seminar I organized to discuss this result: ‘Graph Isomorphism in Quasipolynomial Time’. Dozens of people showed up, it was awesome!”&lt;/div&gt;&lt;div&gt;Background: When he was my number theory student, working on elliptic curves, he gave a talk about graph theory in Sage at a Sage Days (at IPAM). His interest there was mainly in helping an undergrad (Emily Kirkman) with a Sage dev project I hired her to work on. David Harvey asked: “what’s so hard about implementing graph isomorphism”, and Robert wanted to find out, so he spent months doing a full implementation of Brendan McKay’s algorithm (the only other one). This had absolutely nothing to do with his Ph.D. thesis work on the Birch and Swinnerton-Dyer conjecture, but I was very supportive.&lt;/div&gt;&lt;h3 id=&quot;craig-citro-google-&quot;&gt;Craig Citro (Google)&lt;/h3&gt;&lt;div&gt;Craig Citro did a Ph.D. in number theory (with Hida), but also worked on Sage a&lt;em&gt;LOT&lt;/em&gt;&amp;nbsp;as a grad student and postdoc. He’s done a lot of hiring at Google. He says: “My main piece of advice to potential google applicants is ‘start writing as much code as you can, right now.’ Find out whether you’d actually&amp;nbsp;&lt;em&gt;enjoy&lt;/em&gt;working for a company like Google, where a large chunk of your job may be coding in front of a screen. I’ve had several friends from math discover (the hard way) that they don’t really enjoy full-time programming (any more than they enjoy full-time teaching?).”&lt;/div&gt;&lt;div&gt;“Start throwing things on github now. Potential interviewers are&amp;nbsp;&lt;em&gt;going&lt;/em&gt;&amp;nbsp;to check out your github profile; having some cool stuff at the top is great, but seeing a regular stream of commits is also a useful signal.”&lt;br /&gt;&lt;h3 id=&quot;robert-bradshaw-google-&quot;&gt;Robert Bradshaw (Google)&lt;/h3&gt;&lt;div&gt;“A lot of mathematicians are good at (and enjoy) programming. Many of them aren’t (and don’t). Find out. Being involved in Sage is significantly more than just having taken a suite of programming courses or hacking personal scripts on your own: code reviews, managing bugs, testing, large-scale design, working with others’ code, seeing projects through to completion, and collaborating with others, local and remote, on large, technical projects are all important. It demonstrates your passion.”&lt;/div&gt;&lt;/div&gt;&lt;h3 id=&quot;rado-kirov-google-&quot;&gt;Rado Kirov (Google)&lt;/h3&gt;&lt;div&gt;“&lt;span&gt;Robert Bradshaw said it before me, but I have to repeat. L&lt;/span&gt;&lt;span&gt;arge scale software development requires exposure to a lot of tooling and process beyond just writing code - version control, code reviews, bug tracking, code&amp;nbsp;&lt;/span&gt;&lt;span&gt;maintenance&lt;/span&gt;&lt;span&gt;, release process, coordinating with collaborators. Contributing to an active open-source project with a large number of&amp;nbsp;contributors like Sage, is a great way to experience all that and see if you would like to make it your profession. A lot of mathematicians write clever code for their research, but if less than 10 people see it and use it, it is not a&amp;nbsp;&lt;/span&gt;&lt;span&gt;realistic&lt;/span&gt;&lt;span&gt;&amp;nbsp;representation of what working as a software engineer feels like.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;div&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;The software industry is in large demand of developers and hiring straight from&amp;nbsp;&lt;/span&gt;&lt;span&gt;academia is very common&lt;/span&gt;&lt;span&gt;. B&lt;/span&gt;&lt;span&gt;efore I got hired by Google, the only software development experience on my resume&lt;/span&gt;&lt;span&gt;&amp;nbsp;was the&amp;nbsp;Sage graph editor. Along with solid understanding of algorithms and data structures that was enough to get in.&quot;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 id=&quot;robert-bradshaw-google-&quot;&gt;&lt;span&gt;David Moulton (Google)&lt;/span&gt;&lt;/h3&gt;&lt;div&gt;“Google hires mathematicians now as quantitative analysts = data engineers. Google is very flexible for a tech company about the backgrounds of its employees. We have a long-standing reading group on category theory, and we’re about to start one on Babai’s recent quasi- polynomial-time algorithm for graph isomorphism. And we have a math discussion group with lots of interesting math on it.”&lt;/div&gt;&lt;h2 id=&quot;advice-for-departments&quot;&gt;My advice for math professors&lt;/h2&gt;&lt;div&gt;Obviously, encourage your students to get involved in open source projects like Sage, even if it appears to be a waste of time or distraction from their thesis work (this will likely feel very counterintuitive you’ll hate it).&lt;/div&gt;&lt;div&gt;At Univ of Washington, a few years ago I taught a graduate-level course on Sage development. The department then refused to run it again as a grad course, which was frankly&amp;nbsp;&lt;span&gt;very&lt;/span&gt;&amp;nbsp;frustrating to me. This is exactly the wrong thing to do if you want to increase the options of your Ph.D. students for industry jobs. Maybe quit trying to train our students to be only math professors, and instead give them a much wider range of options.&lt;/div&gt;</content>
		<author>
			<name>William Stein</name>
			<email>noreply@blogger.com</email>
			<uri>http://sagemath.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Sage: Open Source Mathematics Software</title>
			<subtitle type="html">This is my blog about things related to Sage.</subtitle>
			<link rel="self" href="http://sagemath.blogspot.com/feeds/posts/default"/>
			<id>tag:blogger.com,1999:blog-6365588202025292315</id>
			<updated>2016-08-12T02:30:04+00:00</updated>
		</source>
	</entry>

	<entry xml:lang="en">
		<title type="html">slabbe-0.2.spkg released</title>
		<link href="http://www.slabbe.org/blogue/2015/11/slabbe-0.2.spkg-released"/>
		<id>http://www.slabbe.org/blogue/2015/11/slabbe-0.2.spkg-released</id>
		<updated>2015-11-30T11:53:00+00:00</updated>
		<content type="html">&lt;div class=&quot;document&quot;&gt;
&lt;p&gt;These is a summary of the functionalities present in &lt;a class=&quot;reference external&quot; href=&quot;http://www.slabbe.org/Sage&quot;&gt;slabbe-0.2.spkg&lt;/a&gt; optional
Sage package. It works on version 6.8 of Sage but will work best with sage-6.10
(it is using the new code for &lt;tt class=&quot;docutils literal&quot;&gt;cartesian_product&lt;/tt&gt; merged the the betas of
sage-6.10). It contains 7 new modules:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;tt class=&quot;docutils literal&quot;&gt;finite_word.py&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class=&quot;docutils literal&quot;&gt;language.py&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class=&quot;docutils literal&quot;&gt;lyapunov.py&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class=&quot;docutils literal&quot;&gt;matrix_cocycle.py&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class=&quot;docutils literal&quot;&gt;mult_cont_frac.pyx&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class=&quot;docutils literal&quot;&gt;ranking_scale.py&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class=&quot;docutils literal&quot;&gt;tikz_picture.py&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Cheat Sheets&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The best way to have a quick look at what can be computed with the optional
Sage package &lt;tt class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;slabbe-0.2.spkg&lt;/span&gt;&lt;/tt&gt; is to look at the &lt;a class=&quot;reference external&quot; href=&quot;http://arxiv.org/abs/1511.08399&quot;&gt;3-dimensional Continued
Fraction Algorithms Cheat Sheets&lt;/a&gt; available on the arXiv since today. It
gathers a handful of informations on different 3-dimensional Continued Fraction
Algorithms including well-known and old ones (Poincaré, Brun, Selmer, Fully
Subtractive) and new ones (Arnoux-Rauzy-Poincaré, Reverse, Cassaigne).&lt;/p&gt;
&lt;a class=&quot;reference external image-reference&quot; href=&quot;http://arxiv.org/abs/1511.08399&quot;&gt;&lt;img alt=&quot;/Files/2015/arp_cheat_sheet.png&quot; src=&quot;http://www.slabbe.org/Files/2015/arp_cheat_sheet.png&quot; /&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;sage -i http://www.slabbe.org/Sage/slabbe-0.2.spkg    # on sage 6.8
sage -p http://www.slabbe.org/Sage/slabbe-0.2.spkg    # on sage 6.9 or beyond
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Computing the orbit of Brun algorithm on some input in \(\mathbb{R}^3_+\)
including dual coordinates:&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;slabbe.mult_cont_frac&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Brun&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;algo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Brun&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;algo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cone_orbit_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;87&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;13.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;87.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;15.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;321&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;13.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;72.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;15.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;132&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;13.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;57.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;15.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;132&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;13.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;42.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;15.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;132&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;Computing the invariant measure:&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;algo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;invariant_measure_wireframe_plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n_iterations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ndivs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savefig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;a class=&quot;reference external image-reference&quot; href=&quot;http://www.slabbe.org/Files/2015/brun_invm_wireframe_plot.png&quot;&gt;&lt;img alt=&quot;/Files/2015/brun_invm_wireframe_plot.png&quot; src=&quot;http://www.slabbe.org/Files/2015/brun_invm_wireframe_plot.png&quot; /&gt;&lt;/a&gt;
&lt;p&gt;Drawing the cylinders:&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cocycle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;algo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matrix_cocycle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cocycle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tikz_n_cylinders&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;png&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;a class=&quot;reference external image-reference&quot; href=&quot;http://www.slabbe.org/Files/2015/brun_cylinders_3.png&quot;&gt;&lt;img alt=&quot;/Files/2015/brun_cylinders_3.png&quot; src=&quot;http://www.slabbe.org/Files/2015/brun_cylinders_3.png&quot; /&gt;&lt;/a&gt;
&lt;p&gt;Computing the Lyapunov exponents of the 3-dimensional Brun algorithm:&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;slabbe.lyapunov&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lyapunov_table&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lyapunov_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;algo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_orbits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_iterations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;succesfull&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;orbits&lt;/span&gt;    &lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;       &lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;      &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;       &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+-----------------------+---------+---------+---------+---------+&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;\&lt;span class=&quot;n&quot;&gt;theta_1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;              &lt;span class=&quot;mf&quot;&gt;0.3026&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;0.3045&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;0.3051&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;0.00046&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;\&lt;span class=&quot;n&quot;&gt;theta_2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;              &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1125&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1122&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1115&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;0.00020&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;\&lt;span class=&quot;n&quot;&gt;theta_2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;\&lt;span class=&quot;n&quot;&gt;theta_1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;1.3680&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;1.3684&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;1.3689&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;0.00024&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Dealing with tikzpictures&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since I create lots of tikzpictures in my code and also because I was unhappy
at how the &lt;tt class=&quot;docutils literal&quot;&gt;view&lt;/tt&gt; command of Sage handles them (a tikzpicture is not a math
expression to put inside dollar signs), I decided to create a class for
tikzpictures. I think this module could be usefull in Sage so I will propose
its inclusion soon.&lt;/p&gt;
&lt;p&gt;I am using the standalone document class which allows some configurations like
the border:&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;slabbe&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TikzPicture&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;graphs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PetersenGraph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;latex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TikzPicture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;standalone_configs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;border=4mm&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;packages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'tkz-graph'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;The &lt;tt class=&quot;docutils literal&quot;&gt;repr&lt;/tt&gt; method does not print all of the string since it is often very
long. Though it shows how many lines are not printed:&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;
\&lt;span class=&quot;n&quot;&gt;documentclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tikz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;standalone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
\&lt;span class=&quot;n&quot;&gt;standaloneconfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
\&lt;span class=&quot;n&quot;&gt;usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tkz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
\&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
\&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tikzpicture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
\&lt;span class=&quot;n&quot;&gt;useasboundingbox&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rectangle&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5.0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5.0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
\&lt;span class=&quot;n&quot;&gt;definecolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cv0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;68&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;printed&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3748&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characters&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
\&lt;span class=&quot;n&quot;&gt;Edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cv6v8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,},](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
\&lt;span class=&quot;n&quot;&gt;Edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cv6v9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,},](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
\&lt;span class=&quot;n&quot;&gt;Edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cv7v9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,},](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
\&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tikzpicture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
\&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;There is a method to generates a pdf and another for generating a png. Both
opens the file in a viewer by default unless &lt;tt class=&quot;docutils literal&quot;&gt;view=False&lt;/tt&gt;:&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pathtofile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;png&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;density&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pathtofile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pdf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;a class=&quot;reference external image-reference&quot; href=&quot;http://www.slabbe.org/Files/2015/petersen_graph.png&quot;&gt;&lt;img alt=&quot;/Files/2015/petersen_graph.png&quot; src=&quot;http://www.slabbe.org/Files/2015/petersen_graph.png&quot; /&gt;&lt;/a&gt;
&lt;p&gt;Compare this with the output of &lt;tt class=&quot;docutils literal&quot;&gt;view(s, tightpage=True)&lt;/tt&gt; which does not
allow to control the border and also creates a second empty page on some
operating system (osx, only one page on ubuntu):&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tightpage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;a class=&quot;reference external image-reference&quot; href=&quot;http://www.slabbe.org/Files/2015/petersen_graph_view.png&quot;&gt;&lt;img alt=&quot;/Files/2015/petersen_graph_view.png&quot; src=&quot;http://www.slabbe.org/Files/2015/petersen_graph_view.png&quot; /&gt;&lt;/a&gt;
&lt;p&gt;One can also provide the filename where to save the file in which case the file
is not open in a viewer:&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pdf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'petersen_graph.pdf'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;Another example with polyhedron code taken from this Sage thematic tutorial
&lt;a class=&quot;reference external&quot; href=&quot;http://doc.sagemath.org/html/en/thematic_tutorials/polytope_tikz.html&quot;&gt;Draw polytopes in LateX using TikZ&lt;/a&gt;:&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;V&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;P&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Polyhedron&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vertices&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;polar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;projection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tikz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;674&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;108&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;731&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;112&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TikzPicture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;
\&lt;span class=&quot;n&quot;&gt;documentclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tikz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;standalone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
\&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
\&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tikzpicture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.249656&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.577639&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)},&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.777700&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.358578&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)},&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.576936&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.733318&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)},&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;printed&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4889&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characters&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
\&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vertex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.00000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.00000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.00000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
\&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vertex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.00000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.00000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.00000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%%&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%%&lt;/span&gt;
\&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tikzpicture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
\&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pdf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;a class=&quot;reference external image-reference&quot; href=&quot;http://www.slabbe.org/Files/2015/polyhedron.png&quot;&gt;&lt;img alt=&quot;/Files/2015/polyhedron.png&quot; src=&quot;http://www.slabbe.org/Files/2015/polyhedron.png&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;</content>
		<author>
			<name>Sébastien Labbé</name>
			<uri>http://www.slabbe.org/blogue/</uri>
		</author>
		<source>
			<title type="html">Sébastien Labbé</title>
			<subtitle type="html">Sébastien Labbé</subtitle>
			<link rel="self" href="http://www.slabbe.org/blogue/categorie/sage/feed/atom/index.xml"/>
			<id>http://www.slabbe.org/blogue/feed/atom/</id>
			<updated>2016-06-27T10:30:05+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">&quot;Prime Numbers and the Riemann Hypothesis&quot;, Cambridge University Press, and SageMathCloud</title>
		<link href="http://sagemath.blogspot.com/2015/11/writing-prime-numbers-and-riemann.html"/>
		<id>tag:blogger.com,1999:blog-6365588202025292315.post-1666978360775459499</id>
		<updated>2015-11-19T11:34:46+00:00</updated>
		<content type="html">&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;Barry Mazur and I spent over a decade writing a popular math book &quot;Prime Numbers and the Riemann Hypothesis&quot;, which will be published by Cambridge Univeristy Press in 2016. &amp;nbsp;The book involves a large number of illustrations created using &lt;a href=&quot;http://sagemath.org/&quot;&gt;SageMath&lt;/a&gt;, and was mostly written using the LaTeX editor in &lt;a href=&quot;https://cloud.sagemath.com/&quot;&gt;SageMathCloud&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;This post is meant to provide a glimpse into the writing process and also content of the book.&lt;br /&gt;&lt;br /&gt;This is about making research math a little more accessible, about math education, and about technology.&lt;br /&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;strong&gt;Intended Audience:&lt;/strong&gt; Research mathematicians! Though there is no mathematics at all in this post.&lt;br /&gt;&lt;br /&gt;The book is here: &lt;a href=&quot;http://wstein.org/rh/&quot;&gt;http://wstein.org/rh/&lt;/a&gt;&lt;br /&gt;Download a copy before we have to remove it from the web!&lt;br /&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;strong&gt;Goal:&lt;/strong&gt; The goal of our book is simply to explain what the Riemann Hypothesis is really about. It is a book about mathematics by two mathematicians. The mathematics is front and center; we barely touch on people, history, or culture, since there are already numerous books that address the non-mathematical aspects of RH. &amp;nbsp;Our target audience is math-loving high school students, retired electrical engineers, and you.&lt;br /&gt;&lt;h2 id=&quot;clay-mathematics-institute-lectures-2005&quot;&gt;Clay Mathematics Institute Lectures: 2005&lt;/h2&gt;The book started in May 2005 when the Clay Math Institute asked Barry Mazur to give a large lecture to a popular audience at MIT and he chose to talk about RH, with me helping with preparations. His talk was entitled &quot;Are there still unsolved problems about the numbers 1, 2, 3, 4, ... ?&quot;&lt;br /&gt;&lt;br /&gt;See &lt;a href=&quot;http://www.claymath.org/library/public_lectures/mazur_riemann_hypothesis.pdf&quot;&gt;http://www.claymath.org/library/public_lectures/mazur_riemann_hypothesis.pdf&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Barry Mazur receiving a prize:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;figure&quot;&gt;&lt;img src=&quot;http://www1.pictures.zimbio.com/gi/Barry+C+Mazur+Obama+Honors+Winners+Nat+l+Medal+1QnaS-NICosl.jpg&quot; height=&quot;213&quot; width=&quot;320&quot; /&gt;&lt;/div&gt;&lt;br /&gt;Barry's talk went well, and we decided to try to expand on it in the form of a book. We had a long summer working session in a vacation house near an Atlantic beach, in which we greatly refined our presentation. (I remember that I also finally switched from Linux to OS X on my laptop when Ubuntu made a huge mistake pushing out a standard update that hosed X11 for everybody in the world.)&lt;br /&gt;&lt;h2 id=&quot;classical-fourier-transform&quot;&gt;Classical Fourier Transform&lt;/h2&gt;Going beyond the original Clay Lecture, I kept pushing Barry to see if he could describe RH as much as possible in terms of the classical Fourier transform applied to a function that could be derived via a very simple process from the prime counting function pi(x). Of course, he could. This led to more questions than it answered, and interesting numerical observations that are more precise than analytic number theorists typically consider.&lt;br /&gt;&lt;br /&gt;Our approach to writing the book was to try to reverse engineer how Riemann might have been inspired to come up with RH in the first place, given how Fourier analysis of periodic functions was in the air. This led us to some surprisingly subtle mathematical questions, some of which we plan to investigate in research papers. They also indirectly play a role in Simon Spicer's recent UW Ph.D. thesis. (The expert analytic number theorist Andrew Granville helped us out of many confusing thickets.)&lt;br /&gt;&lt;br /&gt;In order to use Fourier series we naturally have to rely heavily on Dirac/Schwartz distributions.&lt;br /&gt;&lt;h2 id=&quot;simuw&quot;&gt;SIMUW&lt;/h2&gt;University of Washington has a great program called &lt;a href=&quot;http://www.math.washington.edu/~simuw/&quot;&gt;SIMUW: &quot;Summer Institute for Mathematics at Univ of Washington.''&lt;/a&gt; It's for high school; admission is free and based on student merit, not rich parents, thanks to an anonymous wealthy donor! &amp;nbsp;I taught a SIMUW course one summer from the RH book. &amp;nbsp;I spent one very intense week on the RH book, and another on the Birch and Swinnerton-Dyer conjecture.&lt;br /&gt;&lt;br /&gt;The first part of our book worked well for high school students. For example, we interactively worked with prime races, multiplicative parity, prime counting, etc., using Sage interacts. The students could also prove facts in number theory. They also looked at misleading data and tried to come up with conjectures. &lt;em&gt;In algebraic number theory, usually the first few examples are a pretty good indication of what is true. In analytic number theory, in contrast, looking at the first few million examples is usually deeply misleading.&lt;/em&gt;&lt;br /&gt;&lt;h2 id=&quot;reader-feedback-i-dare-you-to-find-a-typo&quot;&gt;Reader feedback: &quot;I dare you to find a typo!&quot;&lt;/h2&gt;In early 2015, we posted drafts on Google+ daring anybody to find typos. We got massive feedback. I couldn't believe the typos people found. One person would find a subtle issue with half of a bibliography reference in German, and somebody else would find a different subtle mistake in the same reference. Best of all, highly critical and careful non-mathematicians read straight through the book and found a large number of typos and minor issues that were just plain confusing to them, but could be easily clarified.&lt;br /&gt;&lt;br /&gt;Now the book is hopefully not riddled with errors. Thanks entirely to the amazingly generous feedback of these readers, when you flip to a random page of our book (go ahead and try), you are now unlikely to see a typo or, what's worse, some corrupted mathematics, e.g., a formula with an undefined symbol.&lt;br /&gt;&lt;h2 id=&quot;designing-the-cover&quot;&gt;Designing the cover&lt;/h2&gt;Barry and Gretchen Mazur, Will Hearst, and I designed a cover that combined the main elements of the book: title, Riemann, zeta:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;http://3.bp.blogspot.com/-BlG3G0uRyME/Vk4iY4C_-hI/AAAAAAABWe4/9aWAhvetQcs/s1600/our-cover%2B%25281%2529.png&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;320&quot; src=&quot;http://3.bp.blogspot.com/-BlG3G0uRyME/Vk4iY4C_-hI/AAAAAAABWe4/9aWAhvetQcs/s320/our-cover%2B%25281%2529.png&quot; width=&quot;318&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Then designers at CUP made our rough design more attractive according their tastes. As non-mathematician designers, they made it look prettier by messing with the Riemann Zeta function...&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-mpMWjFosfFE/Vk4icxOXdAI/AAAAAAABWfA/tKubeiVWZp8/s1600/bad-cover%2B%25281%2529.png&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;224&quot; src=&quot;http://1.bp.blogspot.com/-mpMWjFosfFE/Vk4icxOXdAI/AAAAAAABWfA/tKubeiVWZp8/s320/bad-cover%2B%25281%2529.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;h2 id=&quot;publishing-with-cambridge-university-press&quot;&gt;Publishing with Cambridge University Press&lt;/h2&gt;Over years, we talked with people from AMS, Springer-Verlag and Princeton Univ Press about publishing our book. I met CUP editor Kaitlin Leach at the Joint Mathematics Meetings in Baltimore, since the Cambridge University Press (CUP) booth was directly opposite the SageMath booth, which I was running. We decided, due to their enthusiasm, which lasted more than for the few minutes while talking to them (!), past good experience, and general frustration with other publishers, to publish with CUP.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;http://2.bp.blogspot.com/-noEWAhfd_UA/Vk4ih_6bFJI/AAAAAAABWfI/TFqJyyy_stU/s1600/cup.png&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;67&quot; src=&quot;http://2.bp.blogspot.com/-noEWAhfd_UA/Vk4ih_6bFJI/AAAAAAABWfI/TFqJyyy_stU/s320/cup.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;h3 id=&quot;what-is-was-like-for-us-working-with-cup&quot;&gt;What is was like for us working with CUP&lt;/h3&gt;The actual process with CUP has had its ups and downs, and the production process has been frustrating at times, being in some ways not quite professional enough and in other ways extremely professional. Traditional book publication is currently in a state of rapid change. Working with CUP has been unlike my experiences with other publishers.&lt;br /&gt;&lt;br /&gt;For example, CUP was extremely diligent putting huge effort into tracking down permissions for every one of the images in our book. And they weren't satisfy with a statement on Wikipedia that &quot;this image is public domain&quot;, if the link didn't work. They tracked down alternatives for all images for which they could get permissions (or in some cases have us partly pay for them). This is in sharp contrast to my experience with Springer-Verlag, which spent about one second on images, just making sure I signed a statement that all possible copyright infringement was my fault (not their's).&lt;br /&gt;&lt;br /&gt;The CUP copyediting and typesetting appeared to all be outsourced to India, organized by people who seemed far more comfortable with Word than LaTeX. Communication with people that were being contracted out about our book's copyediting was surprisingly difficult, a problem that I haven't experienced before with Springer and AMS. That said, everything seems to have worked out fine so far.&lt;br /&gt;&lt;br /&gt;On the other hand, our marketing contact at CUP mysteriously vanished for a long time; evidently, they had left to another job, and CUP was recruiting somebody else to take over. However, now there are new people and they seem extremely passionate!&lt;br /&gt;&lt;h2 id=&quot;the-future&quot;&gt;The Future&lt;/h2&gt;I'm particularly excited to see if we can produce an electronic (Kindle) version of the book later in 2016, and eventually a fully interactive complete for-pay SageMathCloud version of the book, which could be a foundation for something much broader with publishers, which addresses the shortcoming of the Kindle format for interactive computational books. Things like electronic versions of books are the sort of things that AMS is frustratingly slow to get their heads around...&lt;br /&gt;&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;&lt;ol&gt;&lt;li&gt;Publishing a high quality book is a long and involved process.&lt;/li&gt;&lt;li&gt;Working with CUP has been frustrating at times; however, they have recruited a very strong team this year that addresses most issues.&lt;/li&gt;&lt;li&gt;I hope mathematicians will put more effort into making mathematics accessible to non-mathematicians.&lt;/li&gt;&lt;li&gt;Hopefully, this talk will give provide a more glimpse into the book writing process and encourage others (and also suggest things to think about when choosing a publisher and before signing a book contract!)&lt;/li&gt;&lt;/ol&gt;</content>
		<author>
			<name>William Stein</name>
			<email>noreply@blogger.com</email>
			<uri>http://sagemath.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Sage: Open Source Mathematics Software</title>
			<subtitle type="html">This is my blog about things related to Sage.</subtitle>
			<link rel="self" href="http://sagemath.blogspot.com/feeds/posts/default"/>
			<id>tag:blogger.com,1999:blog-6365588202025292315</id>
			<updated>2016-08-12T02:30:04+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Sage Days 70 - Berkeley - November 2015</title>
		<link href="http://blog.harald.schil.ly/2015/11/sage-days-70-berkeley-november-2015.html"/>
		<id>tag:blogger.com,1999:blog-3473399517246044360.post-4871259029930426944</id>
		<updated>2015-11-19T09:16:24+00:00</updated>
		<content type="html">&lt;div dir=&quot;ltr&quot;&gt;&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;&lt;a class=&quot;g-profile&quot; href=&quot;https://plus.google.com/108676679876909469255&quot; target=&quot;_blank&quot;&gt;+Dennis Stein&lt;/a&gt;&amp;nbsp;brought his cameras and tools to Sage Days 70:&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt; &lt;/div&gt;&lt;div&gt;&lt;a href=&quot;https://vimeo.com/146207495&quot;&gt;Sage Days 70 - Berkeley - November 2015&lt;/a&gt; from &lt;a href=&quot;https://vimeo.com/dstein&quot;&gt;Dennis Stein&lt;/a&gt; on &lt;a href=&quot;https://vimeo.com/&quot;&gt;Vimeo&lt;/a&gt;.&lt;/div&gt;&lt;/div&gt;</content>
		<author>
			<name>Harald Schilly</name>
			<email>noreply@blogger.com</email>
			<uri>http://blog.harald.schil.ly/search/label/sage</uri>
		</author>
		<source>
			<title type="html">Harald Schilly</title>
			<link rel="self" href="http://blog.harald.schil.ly/feeds/posts/default/-/sage"/>
			<id>tag:blogger.com,1999:blog-3473399517246044360</id>
			<updated>2016-07-26T13:30:06+00:00</updated>
		</source>
	</entry>

	<entry xml:lang="en-US">
		<title type="html">Google Summer of Code 2015: outcomes</title>
		<link href="http://matroidunion.org/?p=1550"/>
		<id>http://matroidunion.org/?p=1550</id>
		<updated>2015-10-21T15:55:57+00:00</updated>
		<content type="html">&lt;p&gt;&lt;em&gt;Guest post by &lt;a href=&quot;http://web.engr.illinois.edu/~chaoxu3/&quot;&gt;Chao Xu&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In the summer, I have extended the SAGE code base for matroids for Google Summer of Code. This post shows a few example of it&amp;#8217;s new capabilities.&lt;/p&gt;
&lt;h1&gt;Connectivity&lt;/h1&gt;
&lt;p&gt;Let $M$ be a matroid with groundset $E$ and rank function $r$. A partition of the groundset $\{E_1,E_2\}$ is a $m$-separation if $|E_1|,|E_2|\geq m$ and $r(E_1)+r(E_2)-r(E)\leq m-1$. $M$ is called $k$-connected if there is no $m$-separation for any $m  k$. 

The Fano matroid is an example of $3$-connected matroid.


&lt;div class=&quot;sage1&quot;&gt;&lt;/div&gt;
&lt;p&gt;The Fano matroid is not $4$-connected. Using the &lt;code&gt;certificate=True&lt;/code&gt; field, we can also output a certificate that verify its not-$4$-connectness. The certificate is a $m$-separation where $m  4$. Since we know Fano matroid is $3$-connected, we know the output should be a $3$-separation.


&lt;div class=&quot;sage1&quot;&gt;&lt;/div&gt;
&lt;p&gt;We also have a method for deciding $k$-connectivity, and returning a certificate. &lt;/p&gt;
&lt;div class=&quot;sage1&quot;&gt;&lt;/div&gt;
&lt;p&gt;There are 3 algorithms for $3$-connectivity. One can pass it as a string to the &lt;code&gt;algorithm&lt;/code&gt; field of &lt;code&gt;is_3connected&lt;/code&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;&quot;bridges&quot;&lt;/code&gt;: The $3$-connectivity algorithm Bixby and Cunningham. [BC79] &lt;/li&gt;
&lt;li&gt;&lt;code&gt;&quot;intersection&quot;&lt;/code&gt;: the matroid intersection based algorithm&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&quot;shifting&quot;&lt;/code&gt;: the shifting algorithm. [Raj87] &lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;The default algorithm is the bridges based algorithm.&lt;/p&gt;
&lt;p&gt;The following is an example to compare the running time of each approach. &lt;/p&gt;
&lt;div class=&quot;sage1&quot;&gt;&lt;/div&gt;
&lt;p&gt;The new bridges based algorithm is much faster than the previous algorithm in SAGE.&lt;/p&gt;
&lt;p&gt;For $4$-connectivity, we tried to use the shifting approach, which has an running time of $O(n^{4.5}\sqrt{\log n})$, where $n$ is the size of the groundset. The intuitive idea is fixing some elements and tries to grow a separator. In theory, the shifting algorithm should be fast if the graph is not $4$-connected, as we can be lucky and find a separator quickly. In practice, it is still slower than the optimized matroid intersection based algorithm, which have a worst case $O(n^5)$ running time. There might be two reasons: the matroid intersection actually avoids the worst case running time in practice, and the shifting algorithm is not well optimized.&lt;/p&gt;
&lt;div class=&quot;sage1&quot;&gt;&lt;/div&gt;
&lt;h1&gt;Matroid intersection and union&lt;/h1&gt;
&lt;p&gt;There is a new implementation of matroid intersection algorithm based on Cunningham&amp;#8217;s paper [Cun86].  For people who are familiar with blocking flow algorithms for maximum flows, this is the matroid version. The running time is $O(\sqrt{p}rn)$, where $p$ is the size of the maximum common independent set, $r$ is the rank, and $n$ is the size of the groundset. Here is an example of taking matroid intersection between two randomly generated linear matroids.&lt;/p&gt;
&lt;div class=&quot;sage1&quot;&gt;&lt;/div&gt;
&lt;p&gt;Using matroid intersection, we have preliminary support for matroid union and matroid sum. Both construction takes a list of matroids.&lt;/p&gt;
&lt;p&gt;The matroid sum operation takes disjoint union of the groundsets. Hence the new ground set will have the first coordinate indicating which matroid it comes from, and second coordinate indicate the element in the matroid. &lt;/p&gt;
&lt;div class=&quot;sage1&quot;&gt;&lt;/div&gt;
&lt;p&gt;Here is an example of matroid union of two copies of uniform matroid $U(1,5)$ and $U(2,5)$. The output is isomorphic to $U(4,5)$.&lt;/p&gt;
&lt;div class=&quot;sage1&quot;&gt;&lt;/div&gt;
&lt;p&gt;One of the application of matroid union is &lt;a href=&quot;https://en.wikipedia.org/wiki/Matroid_partitioning&quot;&gt;matroid partitioning&lt;/a&gt;, which partitions the groundset of the matroid to minimum number of independent sets. Here is an example that partitions the edges of a graph to minimum number of forests. &lt;/p&gt;
&lt;div class=&quot;sage1&quot;&gt;&lt;/div&gt;
&lt;h1&gt;Acknowledgements&lt;/h1&gt;
&lt;p&gt;I would like to thank my mentors Stefan van Zwam and Michael Welsh for helping me with the project. I also like to thank Rudi Pendavingh, who have made various valuable suggestions and implemented many optimizations himself. &lt;/p&gt;
&lt;h1&gt;References&lt;/h1&gt;
&lt;p&gt;[BC79] R.E Bixby, W.H Cunningham. &lt;em&gt;Matroids, graphs and 3-connectivity&lt;/em&gt;, J.A Bondy, U.S.R Murty (Eds.), Graph Theory and Related Topics, Academic Press, New York (1979), pp. 91-103.&lt;/p&gt;
&lt;p&gt;[Raj87] Rajan, A. (1987). &lt;em&gt;Algorithmic applications of connectivity and related topics in matroid theory&lt;/em&gt;. Northwestern university.&lt;/p&gt;
&lt;p&gt;[Cun86] William H Cunningham. 1986. &lt;em&gt;Improved bounds for matroid partition and intersection algorithms&lt;/em&gt;. SIAM J. Comput. 15, 4 (November 1986), 948-957.&lt;/p&gt;</content>
		<author>
			<name>The Matroid Union</name>
			<uri>http://matroidunion.org</uri>
		</author>
		<source>
			<title type="html">Sage – The Matroid Union</title>
			<subtitle type="html">A blog for and by the matroid community</subtitle>
			<link rel="self" href="http://matroidunion.org/?feed=rss2&amp;cat=7"/>
			<id>http://matroidunion.org/?feed=rss2&amp;cat=7</id>
			<updated>2016-08-12T02:30:08+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">What is SageMath's strategy?</title>
		<link href="http://sagemath.blogspot.com/2015/09/what-is-sagemaths-strategy.html"/>
		<id>tag:blogger.com,1999:blog-6365588202025292315.post-8163352558343336284</id>
		<updated>2015-09-30T21:56:21+00:00</updated>
		<content type="html">Here is &lt;a href=&quot;http://www.sagemath.org/&quot;&gt;SageMath&lt;/a&gt;'s strategy, or at least what my strategy toward SageMath has been for the last 5 years.&lt;br /&gt;&lt;h1 id=&quot;diagnose-the-problem&quot;&gt;Diagnose the problem&lt;/h1&gt;&lt;strong&gt;Statement of problem:&lt;/strong&gt; SageMath is not growing.&lt;br /&gt;&lt;h3 id=&quot;justification&quot;&gt;Justification&lt;/h3&gt;Facts: Growth in the number of active users [1] of SageMath has stalled since about 2011 (as defined by Google analytics on sagemath.org). From 2008 to 2011, year-on-year growth was about 50%, which isn't great. However, from 2011 to now, year-on-year growth is slightly less than 0%. It was maybe -10% from 2013 to 2014. Incidentally, number of monthly active users of sagemath.org is about 68,652 right now, but the raw number isn't as import as the year-to-year rate of change.&lt;br /&gt;&lt;br /&gt;I set an overall mission statement for the Sage project at the outset, which was is to be a viable alternative to Magma, Maple, Mathematica and Matlab. Being a &quot;viable alternative&quot; is something that holds or doesn't for specific people. A useful measure of this mission then is whether or not people use Sage. This is a different metric than trying to argue from &quot;first principles&quot; by making a list of features of each system, comparing benchmarks, etc.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-WXt0yL0eZn0/Vgy7ICAimcI/AAAAAAABWGs/MmOurNhORYg/s1600/Screen%2BShot%2B2015-09-30%2Bat%2B11.00.28%2BAM.png&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;241&quot; src=&quot;http://1.bp.blogspot.com/-WXt0yL0eZn0/Vgy7ICAimcI/AAAAAAABWGs/MmOurNhORYg/s400/Screen%2BShot%2B2015-09-30%2Bat%2B11.00.28%2BAM.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;a href=&quot;http://4.bp.blogspot.com/-shXxtJeO9fY/Vgy7IMVWIcI/AAAAAAABWGo/nLJu-40-9Ns/s1600/Screen%2BShot%2B2015-09-30%2Bat%2B10.59.32%2BAM.png&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;245&quot; src=&quot;http://4.bp.blogspot.com/-shXxtJeO9fY/Vgy7IMVWIcI/AAAAAAABWGo/nLJu-40-9Ns/s400/Screen%2BShot%2B2015-09-30%2Bat%2B10.59.32%2BAM.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-WXt0yL0eZn0/Vgy7ICAimcI/AAAAAAABWGs/MmOurNhORYg/s1600/Screen%2BShot%2B2015-09-30%2Bat%2B11.00.28%2BAM.png&quot;&gt;&lt;br /&gt;&lt;/a&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-WXt0yL0eZn0/Vgy7ICAimcI/AAAAAAABWGs/MmOurNhORYg/s1600/Screen%2BShot%2B2015-09-30%2Bat%2B11.00.28%2BAM.png&quot;&gt;&lt;br /&gt;&lt;/a&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-WXt0yL0eZn0/Vgy7ICAimcI/AAAAAAABWGs/MmOurNhORYg/s1600/Screen%2BShot%2B2015-09-30%2Bat%2B11.00.28%2BAM.png&quot;&gt;&lt;br /&gt;&lt;/a&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;h1 id=&quot;guiding-policies&quot;&gt;Guiding policies&lt;/h1&gt;&lt;strong&gt;Statement of policy:&lt;/strong&gt; focus on undergraduate students in STEM courses (science, tech, engineering, math)&lt;br /&gt;&lt;h3 id=&quot;justification-1&quot;&gt;Justification&lt;/h3&gt;In order for Sage to start growing again, identify groups of people that are not using Sage. Then decide, for each of these groups, who might find value in using Sage, especially if we are able to put work into making it easier for them to benefit from Sage. This is something to re-evaluate periodically. In itself, this is very generic -- it's what any software project that wishes to grow should do. The interesting part is the details.&lt;br /&gt;Some big groups of potential future users of Sage, who use Sage very little now, include&lt;br /&gt;&lt;ul&gt;&lt;li&gt;employees/engineers in various industries (from defense contractors, to finance, to health care to &quot;data science&quot;).&lt;/li&gt;&lt;li&gt;researchers in area of mathematics where Sage is currently not popular&lt;/li&gt;&lt;li&gt;undergraduate students in STEM courses (science, tech, engineering, math)&lt;/li&gt;&lt;/ul&gt;I think by far the most promising group is &quot;undergraduate students in STEM courses&quot;. In many cases they use no software at all or are unhappy with what they do use. They are extremely cost sensitive. Open source provides a unique advantage in education because it is less expensive than closed source software, and having access to source code is something that instructors consider valuable as part of the learning experience. Also, state of the art performance, which often requires enormous dedicated for-pay work, is frequently not a requirement.&lt;br /&gt;&lt;h1 id=&quot;actions&quot;&gt;Actions&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;(a) Make access to Sage as easy as possible.&lt;/li&gt;&lt;li&gt;(b) Encourage the creation of educational resources (books, tutorials, etc.) that make using Sage for particular courses as easy as possible.&lt;/li&gt;&lt;li&gt;(c) Implement missing functionality in Sage that is needed in support of undergraduate teaching.&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;h3 id=&quot;justification-2&quot;&gt;Justification&lt;/h3&gt;Why don't more undergraduates use Sage? For the most part, students use what they are told to use by their instructors. So why don't instructors chose to use Sage? (a) Sage is not trivial to install (in fact it is incredibly hard to install), (b) There are limited resources (books, tutorials, course materials, etc.) for making using Sage really easy, (c) Sage is missing key functionality needed in support undergraduate teaching.&lt;br /&gt;&lt;br /&gt;Regarding (c), in 2008 Sage was utterly useless for most STEM courses. However, over the years things changed for the better, due to the hard work of Rob Beezer, Karl Dieter, Burcin Erocal, and many others. Also, for quite a bit of STEM work, the numerical Python ecosystem (and/or R) provides much of what is needed, and both have evolved enormously in recent years. They are all usable from Sage, and making such use &lt;em&gt;easier&lt;/em&gt; should be an extremely high priority. Related -- Bill Hart wrote &quot;I recently sat down with some serious developers and we discussed symbolics in Sage (which I know nothing about). They argued that Sage is not a viable contender in that area, and we discussed some of the possible reasons for that. &quot; The reason is that the symbolic functionality in Sage is motivated by making Sage useful for undergraduate teaching; it has nothing to do with what serious developers in symbolics would care about.&lt;br /&gt;&lt;br /&gt;Regarding (b), an NSF (called &quot;&lt;a href=&quot;http://utmost.aimath.org/&quot;&gt;UTMOST&lt;/a&gt;&quot;) helped in this direction... Also, Gregory Bard wrote &lt;a href=&quot;http://www.gregorybard.com/SAGE.html&quot;&gt;&quot;Sage for undergraduates&quot;&lt;/a&gt;, which is &lt;em&gt;exactly&lt;/em&gt; the sort of thing we should be very strongly encouraging. This is a book that is published by the AMS and is also freely available. And it squarely addresses exactly this audience. Similarly, &lt;a href=&quot;http://sagebook.gforge.inria.fr/&quot;&gt;the French book that Paul Zimmerman edited&lt;/a&gt; is fantastic for France. Let's make an order of magnitude similar resources along these lines! Let's make vastly more tutorials and reference manuals that are &quot;for undergraduates&quot;.&lt;br /&gt;&lt;br /&gt;Regarding (a), in my opinion the most viable option that fits with current trends in software is a full web application that provides access to Sage. &lt;a href=&quot;https://cloud.sagemath.com/&quot;&gt;SageMathCloud &lt;/a&gt;is what I've been doing in this direction, and it's been growing since 2013 at over 100% year on year, and much is in place so that it could scale up to more users. It still has a huge way to go regarding user friendliness, and it is still &lt;em&gt;losing money every month&lt;/em&gt;. But it is a concrete action toward which nontrivial effort has been invested, and it has the potential to solve problem (a) for a large number of potential STEM users. College students very often have extremely good bandwidth coupled with cheap weak laptops, so a web application is the natural solution for them.&lt;br /&gt;&lt;br /&gt;Though much has been done to make Sage easier to install on individual computers, it's exactly the sort of problem that money could help solve, but for which we have little money. I'm optimistic that &lt;a href=&quot;http://opendreamkit.org/&quot;&gt;OpenDreamKit&lt;/a&gt; will do something in this direction.&lt;br /&gt;&lt;br /&gt;[I've made this post motivated by the&lt;a href=&quot;https://groups.google.com/forum/#!topic/sage-devel/enoyWPdYK_g&quot;&gt; discussion in this thread.&lt;/a&gt;&amp;nbsp; Also, I used the framework from &lt;a href=&quot;http://www.amazon.com/Good-Strategy-Bad-Difference-Matters/dp/0307886239&quot;&gt;this book&lt;/a&gt;.]</content>
		<author>
			<name>William Stein</name>
			<email>noreply@blogger.com</email>
			<uri>http://sagemath.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Sage: Open Source Mathematics Software</title>
			<subtitle type="html">This is my blog about things related to Sage.</subtitle>
			<link rel="self" href="http://sagemath.blogspot.com/feeds/posts/default"/>
			<id>tag:blogger.com,1999:blog-6365588202025292315</id>
			<updated>2016-08-12T02:30:04+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">SageMathCloud's poor user retention rate</title>
		<link href="http://sagemath.blogspot.com/2015/09/sagemathclouds-poor-user-retention-rate.html"/>
		<id>tag:blogger.com,1999:blog-6365588202025292315.post-8312554401315622132</id>
		<updated>2015-09-22T19:52:14+00:00</updated>
		<content type="html">&lt;h3&gt;Poor retention rate&lt;/h3&gt;&lt;span&gt;Many people try &lt;a href=&quot;https://cloud.sagemath.com/&quot; target=&quot;_blank&quot;&gt;SageMathCloud&lt;/a&gt;, but only a small percentage stick around. &amp;nbsp;&lt;b&gt;I definitely don't know why. &lt;/b&gt;Recent SageMathCloud rates are below 4%:&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;b&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;/b&gt;&lt;/span&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;http://2.bp.blogspot.com/-5B6ymNMEjAs/VgIFyIi9QXI/AAAAAAABWDE/iTj_M6ejo0A/s1600/Screen%2BShot%2B2015-09-22%2Bat%2B6.51.52%2BPM.png&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;186&quot; src=&quot;http://2.bp.blogspot.com/-5B6ymNMEjAs/VgIFyIi9QXI/AAAAAAABWDE/iTj_M6ejo0A/s400/Screen%2BShot%2B2015-09-22%2Bat%2B6.51.52%2BPM.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;http://3.bp.blogspot.com/-cTbDI1IZWUY/VgIIn3n9sTI/AAAAAAABWDY/XJ3ihbbh7sg/s1600/Screen%2BShot%2B2015-09-22%2Bat%2B7.03.57%2BPM.png&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;161&quot; src=&quot;http://3.bp.blogspot.com/-cTbDI1IZWUY/VgIIn3n9sTI/AAAAAAABWDY/XJ3ihbbh7sg/s400/Screen%2BShot%2B2015-09-22%2Bat%2B7.03.57%2BPM.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;span&gt;&lt;b&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;h2&gt;Is it performance?&lt;/h2&gt;&lt;span&gt;&lt;b&gt;Question:&amp;nbsp;&lt;/b&gt;Are the people who try SMC discouraged by&lt;/span&gt;&lt;span&gt;&amp;nbsp;performance issues?&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;I think it's unlikely many users are leaving due to hitting noticeable performance issues&lt;/span&gt;&lt;span&gt;.&amp;nbsp; I think I would know, since there's a huge bold messages all over&amp;nbsp;&lt;/span&gt;&lt;span&gt;the site that say &quot;Email&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;mailto:help@sagemath.com&quot;&gt;help@sagemath.com&lt;/a&gt;&lt;span&gt;: in case of problems, do&amp;nbsp;&lt;/span&gt;&lt;span&gt;not hesitate to immediately email us. We want to know if anything is&amp;nbsp;&lt;/span&gt;&lt;span&gt;broken!&quot;&lt;/span&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span&gt;In the past when there have been performance&amp;nbsp;&lt;/span&gt;&lt;span&gt;or availability issues -- which of course do happen sometimes due to&amp;nbsp;&lt;/span&gt;&lt;span&gt;bugs or whatever -- I quickly get a lot of emails.&amp;nbsp; I haven't got&amp;nbsp;&lt;/span&gt;&lt;span&gt;anything that mentioned performance recently.&amp;nbsp; And usage of SMC is at&amp;nbsp;&lt;/span&gt;&lt;span&gt;an all time high: in the last day there were &lt;a href=&quot;https://cloud.sagemath.com/7561f68d-3d97-4530-b97e-68af2fb4ed13/raw/stats.html&quot;&gt;676 projects created and&amp;nbsp;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://cloud.sagemath.com/7561f68d-3d97-4530-b97e-68af2fb4ed13/raw/stats.html&quot;&gt;3500 projects modified&lt;/a&gt; -- which is significantly higher than ever&amp;nbsp;&lt;/span&gt;&lt;span&gt;before since the site started.&amp;nbsp; It's also about 2.2x what we had&amp;nbsp;&lt;/span&gt;&lt;span&gt;exactly a year ago. &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;h2&gt;Is it the user interface?&lt;/h2&gt;&lt;span&gt;&lt;div&gt;&lt;span&gt;&lt;b&gt;Question: &lt;/b&gt;Is the SMC user interface highly discouraging and difficult to use?&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;My current best guess is that the main reason for attrition of our users is that&amp;nbsp;&lt;/span&gt;&lt;span&gt;they do not understand how to actually&amp;nbsp;&lt;i&gt;use&lt;/i&gt;&amp;nbsp;&lt;a href=&quot;https://cloud.sagemath.com/&quot; target=&quot;_blank&quot;&gt;SageMathCloud&lt;/a&gt;&amp;nbsp;(SMC), and the interface doesn't help at all. &amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;I think a large number of users get massively confused and lost when trying&amp;nbsp;&lt;/span&gt;&lt;span&gt;to use SMC. &amp;nbsp; &amp;nbsp;It's pretty obvious this happens if you just watch what they do... &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;In&amp;nbsp;&lt;/span&gt;&lt;span&gt;order to have a foundation on which to fix that, the plan I came up with in&amp;nbsp;&lt;/span&gt;&lt;span&gt;May was to at least fix&amp;nbsp;&lt;/span&gt;&lt;span&gt;the frontend implementation so that it would be &amp;nbsp;&lt;/span&gt;&lt;span&gt;much easier to do&amp;nbsp;&lt;/span&gt;&lt;span&gt;development with -- by switching from a confusing &amp;nbsp;&lt;/span&gt;&lt;span&gt;mess of jQuery soup,&amp;nbsp;&lt;/span&gt;&lt;span&gt;e.g., 2012-style single page app development --&amp;nbsp;&lt;/span&gt;&lt;span&gt;to Facebook's new&amp;nbsp;&lt;/span&gt;&lt;span&gt;React.js approach.&amp;nbsp; This is basically half done and &lt;/span&gt;&lt;span&gt;deployed, and I'm&amp;nbsp;&lt;/span&gt;&lt;span&gt;going to work very hard for a while to finish it. &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span&gt;Once it's done,&amp;nbsp;&lt;/span&gt;&lt;span&gt;it's going to be much easier to improve the UI to &amp;nbsp;&lt;/span&gt;&lt;span&gt;make it more user&amp;nbsp;&lt;/span&gt;&lt;span&gt;friendly.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;h2&gt;Is it the open source software?&lt;/h2&gt;&lt;span&gt;&lt;div&gt;&lt;span&gt;&lt;b&gt;Question: &lt;/b&gt;Is open source mathematical software not sufficiently user friendly?&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;Fixing the UI probably won't help so much with improving the underlying &lt;i&gt;&lt;b&gt;open&amp;nbsp;&lt;/b&gt;&lt;/i&gt;&lt;/span&gt;&lt;span&gt;&lt;i&gt;&lt;b&gt;source mathematical software &lt;/b&gt;&lt;/i&gt;to be friendly though.&amp;nbsp; &amp;nbsp; This is a massive, deep, and&amp;nbsp;&lt;/span&gt;&lt;span&gt;very difficult problem, and might be why growth of Sage stopped in 2011:&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;http://4.bp.blogspot.com/-JqBKt-wuS5g/VgIGxB0yKfI/AAAAAAABWDM/okpvMCbWJ-Q/s1600/Screen%2BShot%2B2015-09-22%2Bat%2B6.55.56%2BPM.png&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;161&quot; src=&quot;http://4.bp.blogspot.com/-JqBKt-wuS5g/VgIGxB0yKfI/AAAAAAABWDM/okpvMCbWJ-Q/s320/Screen%2BShot%2B2015-09-22%2Bat%2B6.55.56%2BPM.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;http://sagemath.org/&quot;&gt;SageMath&lt;/a&gt; (and maybe Numpy/Scipy/IPython/etc.) are not&amp;nbsp;&lt;/span&gt;&lt;span&gt;as user friendly as Mathematica/Matlab&lt;/span&gt;&lt;span&gt;. &amp;nbsp; I think they could be even more user friendly, but it's highly&amp;nbsp;&lt;/span&gt;&lt;span&gt;unlikely as long as the developers are mostly working on SageMath in their&amp;nbsp;&lt;/span&gt;&lt;span&gt;spare time as part of advanced research projects (which have little&amp;nbsp;&lt;/span&gt;&lt;span&gt;to do with user friendliness). &amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;Analyzing data about mistakes, frustation, and issues people&amp;nbsp;&lt;/span&gt;&lt;span&gt;actually have with &amp;nbsp;&lt;/span&gt;&lt;span&gt;real worksheets and notebooks could also help a lot&amp;nbsp;&lt;/span&gt;&lt;span&gt;with directing our &amp;nbsp;&lt;/span&gt;&lt;span&gt;effort in improving Sage/Python/Numpy/etc to be&amp;nbsp;&lt;/span&gt;&lt;span&gt;more user friendly.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;h2&gt;Is it support?&lt;/h2&gt;&lt;span&gt;&lt;div&gt;&lt;b&gt;Question: &lt;/b&gt;Are users frustrated by lack of interactive support?&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;Having integrated high-quality support for users inside SMC, in which we help&amp;nbsp;&lt;/span&gt;&lt;span&gt;them write code, answer questions, etc., could help with&amp;nbsp;&lt;/span&gt;&lt;span&gt;retention. &amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;h2&gt;Why don't you use SageMathCloud?&lt;/h2&gt;&lt;span&gt;I've been&amp;nbsp;&lt;/span&gt;&lt;span&gt;watching this &amp;nbsp;&lt;/span&gt;&lt;span&gt;stuff closely for over a decade most waking moments, and&amp;nbsp;&lt;/span&gt;&lt;span&gt;everybody&amp;nbsp;&lt;/span&gt;&lt;span&gt;likes to complain to me. &amp;nbsp; &amp;nbsp;Why don't &lt;b&gt;you&lt;/b&gt; use SageMathCloud? &amp;nbsp; Tell me: &amp;nbsp;&lt;a href=&quot;mailto:wstein@sagemath.com&quot;&gt;wstein@sagemath.com&lt;/a&gt;.&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;</content>
		<author>
			<name>William Stein</name>
			<email>noreply@blogger.com</email>
			<uri>http://sagemath.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Sage: Open Source Mathematics Software</title>
			<subtitle type="html">This is my blog about things related to Sage.</subtitle>
			<link rel="self" href="http://sagemath.blogspot.com/feeds/posts/default"/>
			<id>tag:blogger.com,1999:blog-6365588202025292315</id>
			<updated>2016-08-12T02:30:04+00:00</updated>
		</source>
	</entry>

	<entry xml:lang="en">
		<title type="html">There are 13.366.431.646 solutions to the Quantumino game</title>
		<link href="http://www.slabbe.org/blogue/2015/09/there-are-13.366.431.646-solutions-to-the-quantumino-game"/>
		<id>http://www.slabbe.org/blogue/2015/09/there-are-13.366.431.646-solutions-to-the-quantumino-game</id>
		<updated>2015-09-21T14:55:00+00:00</updated>
		<content type="html">&lt;div class=&quot;document&quot;&gt;
&lt;p&gt;Some years ago, I wrote &lt;a class=&quot;reference external&quot; href=&quot;http://doc.sagemath.org/html/en/reference/games/sage/games/quantumino.html&quot;&gt;code&lt;/a&gt; in Sage to solve the Quantumino puzzle. I also
used it to make a one-minute &lt;a class=&quot;reference external&quot; href=&quot;http://vimeo.com/35348052&quot;&gt;video&lt;/a&gt; illustrating the Dancing links algorithm
which I am proud to say it is now part of the &lt;a class=&quot;reference external&quot; href=&quot;http://en.wikipedia.org/wiki/Dancing_Links&quot;&gt;Dancing links&lt;/a&gt; wikipedia page.&lt;/p&gt;
&lt;a class=&quot;reference external image-reference&quot; href=&quot;http://www.familygamesamerica.com/mainsite/consumers/productview.php?pro_id=274&quot;&gt;&lt;img alt=&quot;/Files/2015/Quantumino.png&quot; src=&quot;http://www.slabbe.org/Files/2015/Quantumino.png&quot; /&gt;&lt;/a&gt;
&lt;p&gt;Let me recall that the goal of the Quantumino puzzle is to fill a \(2\times
5\times 8\) box with 16 out of 17 three-dimensional pentaminos. After writing
the sage code to solve the puzzle, one question was left: how many solutions
are there? Is the &lt;a class=&quot;reference external&quot; href=&quot;http://familygamesamerica.com/mainsite/consumers/productview.php?pro_id=274&quot;&gt;official website&lt;/a&gt; realist or very prudent when they say
that &lt;em&gt;there are over 10.000 potential solutions&lt;/em&gt;? Can it be computed in hours?
days? months? years? The only thing I knew was that the following computation
(letting the 0-th pentamino aside) never finished on my machine:&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sage.games.quantumino&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;QuantuminoSolver&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;QuantuminoSolver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number_of_solutions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# long time :)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;Since I spent already too much time on this side-project, I decided in 2012 to
stop investing any more time on it and to really focus on finishing writing my
thesis.&lt;/p&gt;
&lt;p&gt;So before I finish writing my thesis, I knew that the computation was not going
to take a light-year, since I was able to finish the computation of the number
of solutions when the 0-th pentamino is put aside and when one pentamino is
pre-positioned somewhere in the box. That computation completed in 4 hours on
my old laptop and gave about 5 millions solutions. There are 17 choices of
pentatminos to put aside, there are 360 distinct positions of that pentamino in
the box, so I estimated the number of solution to be something like
\(17\times 360\times 5000000 = 30 \times 10^9\). Most importantly, I
estimated the computation to take \(17\times 360\times 4= 24480\) hours or
1020 days. Therefore, I knew I could not do it on my laptop.&lt;/p&gt;
&lt;p&gt;But last year, I received an email from the designer of the Quantumino puzzle:&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;-------- Message transféré --------
Sujet : quantumino
Date : Tue, 09 Dec 2014 13:22:30 +0100
De : Nicolaas Neuwahl
Pour : Sebastien Labbe

hi sébastien labbé,

i'm the designer of the quantumino puzzle.
i'm not a mathematician, i'm an architect. i like mathematics.
i'm quite impressed to see the sage work on quantumino, also i have not the
knowledge for full understanding.

i have a question for you - can you tell me HOW MANY different quantumino-
solutions exist?

ty and bye

nicolaas neuwahl
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;This summer was a good timing to launch the computation on my beautiful Intel®
Core™ i5-4590 CPU &amp;#64; 3.30GHz × 4 at Université de Liège. First, I improved the
Sage code to allow a parallel computation of number of solutions in the dancing
links code (&lt;a class=&quot;reference external&quot; href=&quot;http://trac.sagemath.org/ticket/18987&quot;&gt;#18987&lt;/a&gt;, merged in a Sage 6.9.beta6). Secondly, we may remark
that each tiling of the \(2\times 5\times 8\) box can be rotated in order
to find 3 other solutions. It is possible to gain a factor 4 by avoiding to
count 4 times the same solution up to rotations (&lt;a class=&quot;reference external&quot; href=&quot;http://trac.sagemath.org/ticket/19107&quot;&gt;#19107&lt;/a&gt;, still needs work
from myself). Thanks to Vincent Delecroix for doing the review on both ticket.
Dividing the estimated 1024 days of computation needed by a factor \(4\times
4=16\) gives an approximation of 64 days to complete the computation. Two
months, just enough to be tractable!&lt;/p&gt;
&lt;p&gt;With those two tickets (some previous version to be honest) on top of sage-6.8,
I started the computation on August 4th and the computation finished last week
on September 18th for a total of 45 days. The computation was stopped only once
on September 8th (I forgot to close firefox and thunderbird that night...).&lt;/p&gt;
&lt;p&gt;The number of solutions and computation time for each pentamino put aside
together with the first solution found is shown in the table below.  We remark
that some values are equal when the aside pentaminoes are miror images
(why!?:).&lt;/p&gt;
&lt;table border=&quot;1&quot; class=&quot;docutils&quot;&gt;
&lt;colgroup&gt;
&lt;col width=&quot;50%&quot; /&gt;
&lt;col width=&quot;50%&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt=&quot;/Files/2015/b0.png&quot; class=&quot;first last&quot; src=&quot;http://www.slabbe.org/Files/2015/b0.png&quot; /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;img alt=&quot;/Files/2015/b1.png&quot; class=&quot;first last&quot; src=&quot;http://www.slabbe.org/Files/2015/b1.png&quot; /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;634 900 493  solutions&lt;/td&gt;
&lt;td&gt;634 900 493  solutions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;2 days, 6:22:44.883358&lt;/td&gt;
&lt;td&gt;2 days, 6:19:08.945691&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt=&quot;/Files/2015/b2.png&quot; class=&quot;first last&quot; src=&quot;http://www.slabbe.org/Files/2015/b2.png&quot; /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;img alt=&quot;/Files/2015/b3.png&quot; class=&quot;first last&quot; src=&quot;http://www.slabbe.org/Files/2015/b3.png&quot; /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;509 560 697  solutions&lt;/td&gt;
&lt;td&gt;509 560 697  solutions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;2 days, 0:01:36.844612&lt;/td&gt;
&lt;td&gt;2 days, 0:41:59.447773&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt=&quot;/Files/2015/b4.png&quot; class=&quot;first last&quot; src=&quot;http://www.slabbe.org/Files/2015/b4.png&quot; /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;img alt=&quot;/Files/2015/b5.png&quot; class=&quot;first last&quot; src=&quot;http://www.slabbe.org/Files/2015/b5.png&quot; /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;628 384 422  solutions&lt;/td&gt;
&lt;td&gt;628 384 422  solutions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;2 days, 7:52:31.459247&lt;/td&gt;
&lt;td&gt;2 days, 8:44:49.465672&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt=&quot;/Files/2015/b6.png&quot; class=&quot;first last&quot; src=&quot;http://www.slabbe.org/Files/2015/b6.png&quot; /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;img alt=&quot;/Files/2015/b7.png&quot; class=&quot;first last&quot; src=&quot;http://www.slabbe.org/Files/2015/b7.png&quot; /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;1 212 362 145  solutions&lt;/td&gt;
&lt;td&gt;1 212 362 145  solutions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;3 days, 17:25:00.346627&lt;/td&gt;
&lt;td&gt;3 days, 19:10:02.353063&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt=&quot;/Files/2015/b8.png&quot; class=&quot;first last&quot; src=&quot;http://www.slabbe.org/Files/2015/b8.png&quot; /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;img alt=&quot;/Files/2015/b9.png&quot; class=&quot;first last&quot; src=&quot;http://www.slabbe.org/Files/2015/b9.png&quot; /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;197 325 298  solutions&lt;/td&gt;
&lt;td&gt;556 534 800  solutions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;22:51:54.439932&lt;/td&gt;
&lt;td&gt;1 day, 19:05:23.908326&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt=&quot;/Files/2015/b10.png&quot; class=&quot;first last&quot; src=&quot;http://www.slabbe.org/Files/2015/b10.png&quot; /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;img alt=&quot;/Files/2015/b11.png&quot; class=&quot;first last&quot; src=&quot;http://www.slabbe.org/Files/2015/b11.png&quot; /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;664 820 756  solutions&lt;/td&gt;
&lt;td&gt;468 206 736  solutions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;2 days, 8:48:54.767662&lt;/td&gt;
&lt;td&gt;1 day, 20:14:56.014557&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt=&quot;/Files/2015/b12.png&quot; class=&quot;first last&quot; src=&quot;http://www.slabbe.org/Files/2015/b12.png&quot; /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;img alt=&quot;/Files/2015/b13.png&quot; class=&quot;first last&quot; src=&quot;http://www.slabbe.org/Files/2015/b13.png&quot; /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;1 385 955 043  solutions&lt;/td&gt;
&lt;td&gt;1 385 955 043  solutions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;4 days, 1:40:30.270929&lt;/td&gt;
&lt;td&gt;4 days, 4:44:05.399367&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt=&quot;/Files/2015/b14.png&quot; class=&quot;first last&quot; src=&quot;http://www.slabbe.org/Files/2015/b14.png&quot; /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;img alt=&quot;/Files/2015/b15.png&quot; class=&quot;first last&quot; src=&quot;http://www.slabbe.org/Files/2015/b15.png&quot; /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;694 998 374  solutions&lt;/td&gt;
&lt;td&gt;694 998 374  solutions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;2 days, 11:44:29.631&lt;/td&gt;
&lt;td&gt;2 days, 6:01:57.946708&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt=&quot;/Files/2015/b16.png&quot; class=&quot;first last&quot; src=&quot;http://www.slabbe.org/Files/2015/b16.png&quot; /&gt;
&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;1 347 221 708  solutions&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;3 days, 21:51:29.043459&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Therefore the total number of solutions up to rotations is 13 366 431 646 which
is indeed more than 10000:)&lt;/p&gt;


&lt;div class=&quot;pygments_manni&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;634900493&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;634900493&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;509560697&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;509560697&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;628384422&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;628384422&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1212362145&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1212362145&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;197325298&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;556534800&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;664820756&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;468206736&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1385955043&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1385955043&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;694998374&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;694998374&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1347221708&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;13366431646&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;271&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1072231&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;table border=&quot;1&quot; class=&quot;docutils&quot;&gt;
&lt;caption&gt;Summary&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width=&quot;50%&quot; /&gt;
&lt;col width=&quot;50%&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td&gt;The machine (4 cores)&lt;/td&gt;
&lt;td&gt;Intel® Core™ i5-4590 CPU &amp;#64; 3.30GHz × 4 (Université de Liège)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Computation Time&lt;/td&gt;
&lt;td&gt;45 days, (Aug 4th -- Sep 18th, 2015)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Number of solutions (up to rotations)&lt;/td&gt;
&lt;td&gt;13 366 431 646&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Number of solutions / cpu / second&lt;/td&gt;
&lt;td&gt;859&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;My code will be available on github.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;About the video on wikipedia.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I must say that the video is not perfect. On wikipedia, the &lt;a class=&quot;reference external&quot; href=&quot;http://en.wikipedia.org/wiki/File_talk:Dancing_links_Quantumino_puzzle.ogv&quot;&gt;file talk page&lt;/a&gt;
of the video says that the &lt;em&gt;Jerky camera movement is distracting&lt;/em&gt;. That is
because &lt;a class=&quot;reference external&quot; href=&quot;http://www.slabbe.org/blogue/2012/01/faire-une-animation-en-3d-avec-sage/&quot;&gt;I managed to make the video&lt;/a&gt; out of images created by
&lt;tt class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;.show(viewer='tachyon')&lt;/span&gt;&lt;/tt&gt; which changes the coordinate system, hardcodes a
lot of parameters, zoom properly, simplifies stuff to make sure the user don't
see just a blank image. But, for making a movie, we need access to more
parameters especially the placement of the camera (to avoid the jerky
movement). I know that Tachyon allows all of that. It is still a project that I
have to create a more versatile &lt;tt class=&quot;docutils literal&quot;&gt;Graphics3D &lt;span class=&quot;pre&quot;&gt;-&amp;gt;&lt;/span&gt; Tachyon&lt;/tt&gt; conversion allowing
to construct nice videos of evolving mathematical objects. That's another
story.&lt;/p&gt;
&lt;/div&gt;</content>
		<author>
			<name>Sébastien Labbé</name>
			<uri>http://www.slabbe.org/blogue/</uri>
		</author>
		<source>
			<title type="html">Sébastien Labbé</title>
			<subtitle type="html">Sébastien Labbé</subtitle>
			<link rel="self" href="http://www.slabbe.org/blogue/categorie/sage/feed/atom/index.xml"/>
			<id>http://www.slabbe.org/blogue/feed/atom/</id>
			<updated>2016-06-27T10:30:05+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html"></title>
		<link href="http://sagemath.blogspot.com/2015/09/funding-open-source-mathematical.html"/>
		<id>tag:blogger.com,1999:blog-6365588202025292315.post-7130292345452113753</id>
		<updated>2015-09-10T19:38:38+00:00</updated>
		<content type="html">&lt;h1 id=&quot;funding-open-source-mathematical-software-in-the-united-states&quot;&gt;Funding Open Source Mathematical Software in the United States&lt;/h1&gt;I do &lt;em&gt;&lt;strong&gt;not&lt;/strong&gt;&lt;/em&gt; know how to get funding for open source mathematical software in the United States. However, I'm trying.&lt;br /&gt;&lt;h2 id=&quot;why-because-sage-is-hobbling-along&quot;&gt;Why: Because Sage is Hobbling Along&lt;/h2&gt;Despite what we might think in our Sage-developer bubble, &lt;a href=&quot;http://sagemath.org/&quot;&gt;Sage&lt;/a&gt; is hobbling along, and without an infusion of financial support very soon, I think the project is going to fail in the next few years. I have access to Google analytics data for &lt;a href=&quot;http://sagemath.org/&quot;&gt;sagemath.org&lt;/a&gt; since 2007, and there has been no growth &amp;nbsp;in active users of the website since 2011:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-zaHSSBsEAfU/VfI-Q55ar6I/AAAAAAABV-k/STtsAScT1YM/s1600/Screen%2BShot%2B2015-09-10%2Bat%2B7.28.14%2BPM.png&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;187&quot; src=&quot;http://1.bp.blogspot.com/-zaHSSBsEAfU/VfI-Q55ar6I/AAAAAAABV-k/STtsAScT1YM/s400/Screen%2BShot%2B2015-09-10%2Bat%2B7.28.14%2BPM.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;h2 id=&quot;something-that-is-missing&quot;&gt;Something that is Missing&lt;/h2&gt;The worse part of all for me, after ten years, is seeing things like &lt;a href=&quot;https://groups.google.com/forum/#!topic/sage-devel/cAFdRb-WKqM&quot;&gt;this email&lt;/a&gt; today from John Palmieri, where he talks about writing &lt;em&gt;slow&lt;/em&gt; but interesting algebraic topology code, and needing help from somebody who knows Cython to actually make his code fast.&lt;br /&gt;&lt;br /&gt;I know from my three visits to the Magma group in Sydney that such assistance is &lt;em&gt;precisely&lt;/em&gt; what having real financial support can provide. Such money makes it possible to have fulltime people who know the tools and how to optimize them well, and they work on this sort of speedup and integration -- this &quot;devil is in the details&quot; work -- for each major contribution (they are sort of like a highly skilled version of a journal copy editor and referee all in one). Doing this makes a massive difference, but also costs on the order of $1 million / year to have any real impact. 1 million is probably the Magma budget to support around 10 people and periodic visitors, and of course like 1% of the budget of Matlab/Mathematica. Magma has this support partly because Magma is closed source, and maintains tight control on who may use it.&lt;br /&gt;&lt;h2 id=&quot;searching-for-a-funding-model&quot;&gt;Searching for a Funding Model&lt;/h2&gt;Sage is open source and freely available to all, so it is of potential huge value to the community by being owned by everybody and changeable. However, those who fund Magma (either directly or indirectly) haven't funded Sage at the same level for some reason. I can't make Sage closed source and copy that very successful funding model. I've tried everything I can think of given the time and resources I have, and the only model left that seems able to support open source is having a company that does &lt;strong&gt;something else&lt;/strong&gt; well and makes money, then using some of the profit to fund open source (&lt;a href=&quot;http://www.neowin.net/news/intel-overtakes-red-hat-to-become-top-linux-kernel-contributor&quot;&gt;Intel is the biggest contributor to Linux&lt;/a&gt;).&lt;br /&gt;&lt;h2 id=&quot;sagemathcloud&quot;&gt;SageMath, Inc.&lt;/h2&gt;Since I failed to find any companies that passionately care about Sage like Intel/Google/RedHat/etc. care about Linux, I started one. I've been working on &lt;a href=&quot;https://cloud.sagemath.com/&quot;&gt;SageMathCloud&lt;/a&gt; extremely hard for over 3 years now, with the hopes that at least it could be a way to fund Sage development.</content>
		<author>
			<name>William Stein</name>
			<email>noreply@blogger.com</email>
			<uri>http://sagemath.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Sage: Open Source Mathematics Software</title>
			<subtitle type="html">This is my blog about things related to Sage.</subtitle>
			<link rel="self" href="http://sagemath.blogspot.com/feeds/posts/default"/>
			<id>tag:blogger.com,1999:blog-6365588202025292315</id>
			<updated>2016-08-12T02:30:04+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">The Simons Foundation and Open Source Software</title>
		<link href="http://sagemath.blogspot.com/2015/09/the-simons-foundation-and-open-source.html"/>
		<id>tag:blogger.com,1999:blog-6365588202025292315.post-5753647510986290314</id>
		<updated>2015-09-05T16:47:59+00:00</updated>
		<content type="html">&lt;h2 id=&quot;jim-simons&quot;&gt;Jim Simons&lt;/h2&gt;Jim Simons is a mathematician who left academia to start a hedge fund that beat the stock market. He contributes back to the mathematical community through the &lt;a href=&quot;https://www.simonsfoundation.org/&quot;&gt;Simons Foundation&lt;/a&gt;, which provides an enormous amount of support to mathematicians and physicists, and has many outreach programs.&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://sagemath.org/&quot;&gt;SageMath&lt;/a&gt; is a large software package for mathematics that I started in 2005 with the goal of &lt;strong&gt;creating a free open source viable alternative to Magma, Mathematica, Maple, and Matlab&lt;/strong&gt;. People frequently tell me I should approach the Simons Foundation for funding to support Sage. &lt;a href=&quot;https://news.ycombinator.com/item?id=10036779&quot;&gt;For example&lt;/a&gt;:&lt;br /&gt;&lt;blockquote&gt;Jim Simons, after retiring from Renaissance Technologies with a cool 15 billion, has spent the last 10 years giving grants to people in the pure sciences. He's a true academic at heart [...] Anyways, he's very fond of academics and gives MacArthur-esque grants, especially to people who want to change the way mathematics is taught. Approach his fund. &lt;strong&gt;I'm 100% sure he'll give you a grant on the spot.&lt;/strong&gt;&lt;/blockquote&gt;&lt;h2 id=&quot;the-national-science-foundation&quot;&gt;The National Science Foundation&lt;/h2&gt;Last month the http://sagemath.org website had 45,114 monthly active users. However, as far as I know, there is no NSF funding for Sage in the United States right now, and development is mostly done on a shoestring in spare time. We have recently failed to get several NSF grants for Sage, despite there being Sage-related grants in the past from NSF. I know that funding is random, and I will keep trying. I have two proposals for Sage funding submitted to NSF right now.&lt;br /&gt;&lt;h2 id=&quot;several-million-dollars-per-year&quot;&gt;Several million dollars per year&lt;/h2&gt;I was incredibly excited in 2012 when David Eisenbud invited me to a meeting at the Simons Foundation headquarters in New York City with the following official description of their goals:&lt;br /&gt;&lt;blockquote&gt;The purpose of this round table is to investigate what sorts of support would facilitate the &lt;strong&gt;development, deployment and maintenance of open-source software used for fundamental research in mathematics&lt;/strong&gt;, statistics and theoretical physics. We hope that this group will consider what support is currently available, and whether there are projects that the Simons Foundation could undertake that would add significantly to the usefulness of computational tools for basic research.&amp;nbsp;Modes of support that duplicate or marginally improve on support that is already available through the universities or the federal government will not be of interest to the foundation. Questions of software that is primarily educational in nature may be useful as a comparison, but are not of primary interest. &amp;nbsp;The scale of foundation support will depend upon what is needed and on the potential scientific benefit, but could be substantial, perhaps up to &lt;strong&gt;several million dollars per year&lt;/strong&gt;.&lt;/blockquote&gt;&lt;blockquote&gt;Current modes of funding for research software in mathematics, statistics and physics differ very significantly. There may be correspondingly great differences in what the foundation might accomplish in these areas.&amp;nbsp;We hope that the round table members will be able to help the foundation understand the current landscape &amp;nbsp;(what are the needs, what is available, whether it is useful, how it is supported) both in general and across the different disciplines, and will help us think creatively about new possibilities.&lt;/blockquote&gt;I flew across country to this the meeting, where we spent the day discussing ways in which &quot;several million dollars per year&quot; could revolutionize &quot;the development, deployment and maintenance of open-source software used for fundamental research in mathematics...&quot;.&lt;br /&gt;&lt;br /&gt;In the afternoon Jim Simons arrived, and shook our hands. He then lectured us with some anecdotes, didn't listen to what we had to say, and didn't seem to understand open source software. I was frustrated watching how he treated the other participants, so I didn't say a word to him. I feel bad for failing to express myself.&lt;br /&gt;&lt;h2 id=&quot;the-decision&quot;&gt;The Decision&lt;/h2&gt;In the backroom during a coffee break, David Eisenbud told me that it had already been decided that they were going to just fund Magma by &lt;a href=&quot;https://news.ycombinator.com/item?id=10036779&quot;&gt;making it freely available to all academics in North America&lt;/a&gt;. WTF? I explained to David that Magma is closed source and that not only does funding Magma not help open source software like Sage, it actively hurts it. A huge motivation for people to contribute to Sage is that they do not have access to Magma (which was very expensive).&lt;br /&gt;&lt;br /&gt;I wandered out of that meeting in a daze; things had gone so differently than I had expected. How could a goal to &quot;facilitate the development, deployment and maintenance of open-source software... perhaps up to several million dollars per year&quot; result in a decision that would make things possibly much worse for open source software?&lt;br /&gt;&lt;br /&gt;That day I started thinking about creating what would become &lt;a href=&quot;https://cloud.sagemath.com/&quot;&gt;SageMathCloud&lt;/a&gt;. The engineering work needed to make Sage accessible to a wider audience wasn't going to happen without substantial funding (I had put years of my life into this problem but it's really hard, and I couldn't do it by myself). At least I could try to make it so people don't have to install Sage (which is very difficult). I also hoped a commercial entity could provide a more sustainable source of funding for open source mathematics software. Three years later, the net result of me starting SageMathCloud and spending almost every waking moment on it is that I've gone from having many grants to not, and SageMathCloud itself is losing money. But I remain cautiously optimistic and forge on...&lt;br /&gt;&lt;h2 id=&quot;we-will-not-fund-sage&quot;&gt;We will not fund Sage&lt;/h2&gt;Prompted by numerous messages recently from people, I wrote to David Eisenbud this week. He suggested I write to Yuri Schinkel, who is the current director of the Simons Foundation:&lt;br /&gt;&lt;blockquote&gt;Dear William,&lt;/blockquote&gt;&lt;blockquote&gt;Before I joined the foundation, there was a meeting conducted by David Eisenbud to discuss possible projects in this area, including Sage.&lt;/blockquote&gt;&lt;blockquote&gt;After that meeting it was decided that the foundation would support Magma.&lt;/blockquote&gt;&lt;blockquote&gt;Please keep me in the loop regarding developments at Sage, but &lt;strong&gt;I regret that we will not fund Sage&lt;/strong&gt; at this time.&lt;/blockquote&gt;&lt;blockquote&gt;Best regards, Yuri&lt;/blockquote&gt;The Simons Foundation, the NSF, or any other foundation does not owe the Sage project anything. Sage is used by a lot of people for free, who together have their research and teaching supported by hundreds of millions of dollars in NSF grants. Meanwhile the Sage project barely hobbles along. I meet people who have fantastic development or documentations projects for Sage that they can't do because they are far too busy with their fulltime teaching jobs. More funding would have a massive impact. It's only fair that the US mathematical community is at least aware of a missed opportunity.&lt;br /&gt;&lt;a href=&quot;http://opendreamkit.org/&quot; target=&quot;_blank&quot;&gt;Funding in Europe&lt;/a&gt; for open source math software is much better.&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=10175563&quot; target=&quot;_blank&quot;&gt;Hacker News discussion&lt;/a&gt;</content>
		<author>
			<name>William Stein</name>
			<email>noreply@blogger.com</email>
			<uri>http://sagemath.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Sage: Open Source Mathematics Software</title>
			<subtitle type="html">This is my blog about things related to Sage.</subtitle>
			<link rel="self" href="http://sagemath.blogspot.com/feeds/posts/default"/>
			<id>tag:blogger.com,1999:blog-6365588202025292315</id>
			<updated>2016-08-12T02:30:04+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">React, Flux, RethinkDB and SageMathCloud -- Summer 2015 update</title>
		<link href="http://sagemath.blogspot.com/2015/08/react-flux-rethinkdb-and-sagemathcloud.html"/>
		<id>tag:blogger.com,1999:blog-6365588202025292315.post-677612542326618554</id>
		<updated>2015-09-01T07:57:27+00:00</updated>
		<content type="html">I've been using databases and doing web development for over 20 years, and I've never really &lt;strong&gt;loved&lt;/strong&gt; any database before and definitely didn't love any web development frameworks either. That all changed for me this summer...&lt;br /&gt;&lt;h3 id=&quot;sagemathcloud&quot;&gt;SageMathCloud&lt;/h3&gt;&lt;a href=&quot;https://cloud.sagemath.com/&quot;&gt;SageMathCloud&lt;/a&gt; is a web application in which you collaboratively use Python, LaTeX, Markdown, Sage worksheets (sophisticated mathematics), task lists, R, Jupyter Notebooks, manage courses, write C programs, make chatrooms, and more. It is hosted on Google Compute Engine, but is also &lt;a href=&quot;https://github.com/sagemathinc/smc&quot;&gt;entirely open source&lt;/a&gt; and there is a pre-made Virtual Machine that you can download. A &lt;strong&gt;project&lt;/strong&gt; in SMC is a Linux account, with resources constrained using cgroups and quotas. Many SMC users can &lt;strong&gt;collaborate&lt;/strong&gt; on the same project, and have equal privileges in that project. Interaction with all file types (including Jupyter notebooks, task lists and course managements) is synchronized in realtime, like Google docs. There is also a &lt;strong&gt;global notifications feed&lt;/strong&gt; that shows all editing activity on all files in all projects on which the user collaborates, which is a sort of highly technical version of Facebook's feed.&lt;br /&gt;&lt;h3 id=&quot;rewrite-motivation&quot;&gt;Rewrite motivation&lt;/h3&gt;I originally wrote the &lt;a href=&quot;https://cloud.sagemath.com/&quot;&gt;SageMathCloud&lt;/a&gt; frontend using progressive-refinement jQuery (no third-party framework beyond that) and the Cassandra database. These were reasonable choices when I started. There are much better approaches now, which are critical to dramatically improving the user experience with SMC, and also growing the developer base. So far SMC has had no nontrivial outside contributions, probably due to the difficulty of understanding the code. In fact, I think nobody besides me has ever even &lt;strong&gt;installed&lt;/strong&gt; SMC, despite &lt;a href=&quot;https://github.com/sagemathinc/smc/blob/master/INSTALL.md&quot;&gt;these install notes&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;We (me, Jon Lee, Nicholas Ruhland) are currently completely rewriting the entire frontend of SMC using React.js, Flux, and RethinkDB. We started this rewrite in June 2015, with Jon being supported by Google Summer of Code (2015), Nich being supported some by NSF grants from Randy Leveque and Rekha Thomas, and with me being unemployed.&lt;br /&gt;&lt;h3 id=&quot;terrible-funding-situation&quot;&gt;Terrible funding situation&lt;/h3&gt;I'm living on credit cards -- I have no NSF grant support anymore, and SageMathCloud is still losing a lot of money every month, and I'm unhappy about this situation. It was either completely quit working on SMC and instead teach or consult a lot, or lose tens of thousands of dollars. I am doing the latter right now. I was very caught off guard, since this is my first summer ever to not have NSF support since I got my Ph.D. in 2000, and I didn't expect to have my grant proposals all denied (which happened in June). There is some modest Angel investment in SageMath, Inc., but I can't bring myself to burn through that money on salary, since it would run out quickly, and I don't want to have to shut down the site due to not being able to pay the hosting bill. I've failed to get any significant free hosting, due to already getting free hosting in the past, and SageMath, Inc. not being in any incubators. For example, we tried very hard to get hosting from Google, but they flatly refused for these two reasons (they gave $60K in hosting to UW/Sage project in 2012). I'm clearly having trouble transitioning from an academic to an industry funding model. But if there are enough paying customers by January 2016, things will turn around.&lt;br /&gt;&lt;br /&gt;Jon, Nich, and I have been working on this rewrite for three months, and hope to finish it by the end of September, when Jon and Nich will become busy with classes again. However, it seems unlikely we'll be able to finish at the current rate. Fortunately, I don't start teaching fulltime again until January, and we put a lot of work into doing a release in mid-August that fully uses RethinkDB and partly uses React.js, so that we can finish the second stage of the rewrite iteratively, without any major technical surprises.&lt;br /&gt;&lt;h3 id=&quot;rethinkdb&quot;&gt;RethinkDB&lt;/h3&gt;Cassandra is an excellent database for many applications, but it is not the right database for SMC and I'm making no further use of Cassandra. SMC is a realtime application that does a lot more reading than writing to the database, and SMC greatly benefits from realtime push updates from the database. I've tried quite hard in the past to build an appropriate architecture for SMC on top of Cassandra, but it is the wrong tool for the job. RethinkDB scales up linearly (with sharding and replication), and has high availability and automatic failover as of version 2.1.2. See &lt;a href=&quot;https://github.com/rethinkdb/rethinkdb/issues/4678&quot;&gt;https://github.com/rethinkdb/rethinkdb/issues/4678&lt;/a&gt; for my painful path to ensuring RethinkDB actually works for me (the RethinkDB developers are incredibly helpful!).&lt;br /&gt;&lt;h3 id=&quot;react.js&quot;&gt;React.js&lt;/h3&gt;I learned about React.js first from some &quot;random podcast&quot;, then got more interested in it when Chris Swenson gave a demo at a Sage Days workshop in San Diego in May 2015. React (+Flux) is a web development framework that actually has solid &lt;em&gt;ideas&lt;/em&gt; behind it, backed by an implementation that has been optimized and tested by a highly nontrivial real world application: namely the Facebook website. Even if I were to have the idea of React, implementing in a way that is actually usable would be difficult. The key idea of React.js is that -- surprisingly -- it is possible to write efficient &lt;em&gt;client-side&lt;/em&gt; code that describes how to render the application purely as a function of its state.&lt;br /&gt;&lt;br /&gt;React is &lt;strong&gt;different&lt;/strong&gt; than jQuery. With jQuery, you write lots of code explaining how to transform the user interface of your application from one complicated state (that you might never have anticipated happening) to another complicated state. When using React.js you don't write code about how your application's visible state changes -- instead you write code to answer the question: &quot;given this state, what should the application look like&quot;. For me, it's a game changer. This is like what one does when writing video games; the innovation is that some people at Facebook figured out how to practically program this way in a client side web browser application, then tuned their implementation based on huge amounts of real world data (Facebook has users). Oh, and they open sourced the result and ran several conferences explaining React.&lt;br /&gt;&lt;br /&gt;React.js reminds me of when Andrew Wiles proved Fermat's Last Theorem in the mid 1990s. Wiles (and Ken Ribet) had genuine new ideas, which dramatically reshaped the landscape of number theory. The best number theorists quickly realized this and adopted to the new world, pushing the envelope of Wiles work far beyond what I expected could happen. Other people pretended like Wiles didn't exist and continued studying Fibonnaci numbers. I browsed the web development section of Barnes and Noble last night and there were dozens of books on jQuery and &lt;em&gt;zero&lt;/em&gt; on React.js. I feel for anybody who tries to learn client-side web development by reading books at Barnes and Noble.&lt;br /&gt;&lt;h3 id=&quot;ipythonjupyter-and-phosphorjs&quot;&gt;IPython/Jupyter and PhosphorJS&lt;/h3&gt;I recently met with Fernando Perez, who founded IPython/Jupyter. He seemed to tell me that currently 9 people are working fulltime on rewriting the Jupyter web notebook using the &lt;a href=&quot;https://github.com/phosphorjs/phosphor&quot;&gt;PhosphorJS&lt;/a&gt; framework. I tried to understand PhosphorJS based on the github page, but couldn't, except to deduce that it is mostly the work of one person from Bloomberg/Continuum Analytics. Fernando told me that they chose PhosphorJS since it very fast, and that their main motivation is to (1) make Jupyter better use their huge high-resolution monitors on their new institute at Berkeley, and (2) make it easier for developers like me to integrate/extend Jupyter into their applications. I don't understand (2), because PhosphorJS is perhaps the least popular web framework I've ever heard of (is it a web framework -- I can't tell?). I pushed Fernando to explain why they made that design choice, but didn't really understand the answer, except that they had spent a lot of time investigating alternatives (like React first). I'm intimidated by their resources and concerned that I'm making the wrong choice; however, I just can't understand why they have made what seems to me to be the wrong choice. I hope to understand more at the joint &lt;a href=&quot;http://wiki.sagemath.org/days70&quot;&gt;Sage/Jupyter Days 70&lt;/a&gt; that we are organizing together in Berkeley, CA in November. (Edit: see &lt;a href=&quot;https://github.com/ipython/ipython/issues/8239&quot;&gt;https://github.com/ipython/ipython/issues/8239&lt;/a&gt; for a discussion of why IPython/Jupyter uses PhosphorJS.)  &lt;br /&gt;&lt;h3 id=&quot;tables-and-rethinkdb&quot;&gt;Tables and RethinkDB&lt;/h3&gt;Our rewrite of SMC is built on Tables, Flux and React. &lt;strong&gt;Tables&lt;/strong&gt; are client-side technology I wrote inspired by Facebook's GraphQL/Relay technology (and Meteor, Firebase, etc.); they synchronize data between clients and the backend database in realtime. Tables are defined by a &lt;a href=&quot;https://github.com/sagemathinc/smc/blob/master/salvus/schema.coffee&quot;&gt;JSON schema file&lt;/a&gt;, which specifies the fields in the table, and explains what get and set queries are allowed. A table is a subset of a much larger table in the database, with the subset defined by conditions that are relative to the user making the query. For example, the projects table has one entry for each project that the user is a collaborator on.&lt;br /&gt;&lt;br /&gt;Tables are automatically synchronized between the user and the database whenever the database changes, using &lt;a href=&quot;http://rethinkdb.com/docs/changefeeds/javascript/&quot;&gt;RethinkDB changefeeds&lt;/a&gt;. &lt;a href=&quot;http://rethinkdb.com/&quot;&gt;RethinkDB's&lt;/a&gt; innovation is to build realtime updates -- triggered when the result of a query to the database changes -- directly into the database at the lowest level. Of course it is possible to build something that looks the same from the outside using either a message queue (say using RabbitMQ or ZeroMQ), or by watching the replication stream from the database and triggering actions based on that (like Meteor does using MongoDB). RethinkDB's approach seems better to me, putting the abstraction at the right level. That said, based on mailing list traffic, searches, etc., it seems that very, very few people get RethinkDB yet. Also, despite years of development, RethinkDB only became &quot;production ready&quot; a few months ago, and only got automatic failover a few weeks ago. That said, after ironing out some kinks, I'm now using it with heavy traffic in production and it works very well.&lt;br /&gt;&lt;h2 id=&quot;flux&quot;&gt;Flux&lt;/h2&gt;Once data is automatically synchronized between the database and web browsers in realtime, we can build everything else on top of this. Facebook also introduced an architecture pattern that they call &lt;strong&gt;Flux&lt;/strong&gt;, which works well with React. It's very different than MVC-style two-way binding frameworks, where objects are directly linked to UI elements, with an object changing causing the UI element to change and vice versa. In SMC each major part of the system has two objects associated to it: Actions and Stores. We think of them in terms of the classical CQRS pattern -- &lt;strong&gt;c&lt;/strong&gt;ommand &lt;strong&gt;q&lt;/strong&gt;uery &lt;strong&gt;r&lt;/strong&gt;esponsibility &lt;strong&gt;s&lt;/strong&gt;egregation. Actions are commands -- they are Javascript &quot;functions&quot; that get stuff done, but they do not return values; instead, they impact the state of the store. The store has functions that allow one to query for the state of the store, but they do not change the state of the store. The store functions must only be functions of the internal state of the store and nothing else. They might cache their results and format their output to be very convenient for rendering. But that's it.&lt;br /&gt;&lt;br /&gt;Actions usually cause the corresponding store (or stores) to change. When a store changes, it emit a change event, which causes any React components that depend on the store to be updated, which in many cases means they are re-rendered. There are optimizations one can introduce to reduce the amount of re-rendering, which if one isn't careful leads to subtle bugs; pretty much the only subtle React UI bugs one hits are caused by such optimizations. When the UI re-renders, the user sees their view of the world change. The user then clicks buttons, types, etc., which triggers actions, which in turn update stores (and tables, hence propogating changes to the ultimate source of truth, which is the RethinkDB database). As stores update, the UI again updates, etc.&lt;br /&gt;&lt;h3 id=&quot;status&quot;&gt;Status&lt;/h3&gt;So far, we have completely (re-)written the project listing, file manager, help/status page, new file page, project log, file finder, project settings, course management system, account settings, billing, project upgrade system, and file use notifications using React, Flux, and Tables, and the result works well. Bugs are much easier to fix, and it is easy (possible?) to understand the state of the system, since it is defined by the state of the database and the corresponding client-side stores. We've completely rethought everything about the UI in doing the rewrite of the above components, and it has taken several months. Also, as mentioned above, I completely rewrote most of the backend to use RethinkDB instead of Cassandra. There were also the weeks of misery for me after we made the switch over. Even after weeks of thinking/testing/wondering &quot;what could go wrong?&quot;, we found out all kinds of surprising little things within hours of pushing everything into production, which took more than a week of sleep deprived days to sort out.&lt;br /&gt;&lt;br /&gt;What's left? We have to rewrite the file editor tabs system, the project tabs system, and all the applications (except course management): editing text files using Codemirror, task lists (which are suprisingly complicated!), color xterm terminals, Jupyter notebooks (which will still use an iframe for the notebook itself), Sage worksheets (with complicated html output embedded in codemirror), compressed file de-archiver, the LaTeX editor, the wiki and markdown editors, and file chat. We hope to find a clean way to abstract away the various SMC applications as plugins, so that other people can easily write their own applications/plugins that will run inside of SMC. There will be a rich collection of example plugins to build on, namely the ones listed above, which are all driven by critical-to-us real world applications.  &lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=10147401&quot;&gt;Discussion about this blog post on Hacker News.&lt;/a&gt;</content>
		<author>
			<name>William Stein</name>
			<email>noreply@blogger.com</email>
			<uri>http://sagemath.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Sage: Open Source Mathematics Software</title>
			<subtitle type="html">This is my blog about things related to Sage.</subtitle>
			<link rel="self" href="http://sagemath.blogspot.com/feeds/posts/default"/>
			<id>tag:blogger.com,1999:blog-6365588202025292315</id>
			<updated>2016-08-12T02:30:04+00:00</updated>
		</source>
	</entry>

	<entry xml:lang="en-US">
		<title type="html">Google Summer of Code 2015: Conclusion</title>
		<link href="http://benjamin-hackl.at/2015/08/22/google-summer-of-code-2015-conclusion/"/>
		<id>http://benjamin-hackl.at/?p=404</id>
		<updated>2015-08-22T11:34:56+00:00</updated>
		<content type="html">&lt;p&gt;The &lt;a href=&quot;https://developers.google.com/open-source/gsoc/&quot;&gt;&amp;#8220;Google Summer of Code 2015&amp;#8221;&lt;/a&gt; program has ended yesterday, on the 21. of August at 19.00 UTC. This blog entry shall provide a short wrap-up of &lt;a href=&quot;http://www.google-melange.com/gsoc/project/details/google/gsoc2015/behackl/5649050225344512&quot;&gt;our GSoC project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The aim of our project was to implement a &lt;em&gt;basic framework&lt;/em&gt; that enables us to do computations with asymptotic expressions in SageMath &amp;#8212; and I am very happy to say that we very much succeeded to do so. An overview of all our developments can be found at meta ticket &lt;a href=&quot;http://trac.sagemath.org/17601&quot;&gt;#17601&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Although we did not really follow the timeline suggested in my original proposal (mainly because the implementation of the &lt;a href=&quot;http://trac.sagemath.org/17716&quot;&gt;&lt;em&gt;Asymptotic Ring&lt;/em&gt;&lt;/a&gt; took way longer than originally anticipated) we managed to implement the majority of ideas from my proposal &amp;#8212; with the most important part being that our current prototype is &lt;strong&gt;stable&lt;/strong&gt;. In particular, this means that we do not expect to make major design changes at this point. Every detail of our design is well-discussed and can be explained.&lt;/p&gt;
&lt;p&gt;Of course, our &lt;a href=&quot;http://trac.sagemath.org/17601&quot;&gt;&lt;em&gt;&amp;#8220;Asymptotic Expressions&amp;#8221; &lt;/em&gt;project&lt;/a&gt; is far from finished, and we will continue to extend the functionality of our framework. For example, although working with exponential and logarithmic terms is currently possible, it is not very convenient because the $\log$, $\exp$, and power functions are not fully implemented. Furthermore, it would be interesting to investigate the performance-gain obtained by cythonizing the central parts of this framework (e.g. parts of the &lt;em&gt;&lt;a href=&quot;http://trac.sagemath.org/ticket/17693&quot;&gt;MutablePoset&lt;/a&gt;&lt;/em&gt;&amp;#8230;) &amp;#8212; and so on&amp;#8230;&lt;/p&gt;
&lt;p&gt;To conclude, I want to thank &lt;a href=&quot;http://danielkrenn.at&quot;&gt;Daniel Krenn&lt;/a&gt; for his hard work and helpful advice als my mentor, as well as the SageMath community for giving me the opportunity to work on this project within the Google Summer of Code program! &lt;img src=&quot;https://s.w.org/images/core/emoji/72x72/1f642.png&quot; alt=&quot;🙂&quot; class=&quot;wp-smiley&quot; /&gt;&lt;/p&gt;</content>
		<author>
			<name>Benjamin Hackl</name>
			<uri>http://benjamin-hackl.at/tag/gsoc15/</uri>
		</author>
		<source>
			<title type="html">GSoC15 – Benjamin Hackl</title>
			<link rel="self" href="http://benjamin-hackl.at/tag/gsoc15/feed/"/>
			<id>http://benjamin-hackl.at/tag/gsoc15/feed/</id>
			<updated>2016-08-01T15:30:12+00:00</updated>
		</source>
	</entry>

	<entry xml:lang="en-US">
		<title type="html">Asymptotic Expressions: Current Developments</title>
		<link href="http://benjamin-hackl.at/2015/08/17/asymptotic-expressions-current-developments/"/>
		<id>http://benjamin-hackl.at/?p=391</id>
		<updated>2015-08-17T07:15:20+00:00</updated>
		<content type="html">&lt;p&gt;Since my last blog entry on the status of our implementation of &lt;a href=&quot;http://trac.sagemath.org/17601&quot;&gt;Asymptotic Expressions in SageMath&lt;/a&gt; quite a lot of improvements have happened. Essentially, all the pieces required in order to have a basic working implementation of multivariate asymptotics are there. The remaining tasks within my Google Summer of Code project are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Polish the documentation of our &lt;em&gt;minimal prototype&lt;/em&gt;, which consists of &lt;a href=&quot;http://trac.sagemath.org/17716&quot;&gt;#17716&lt;/a&gt; and the respective dependencies. Afterwards, we will set this to &lt;em&gt;needs_review&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Open a ticket for the &lt;em&gt;multivariate asymptotic ring &lt;/em&gt;and put together everything that we have written so far there.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this blog post I want to give some more examples of what can be done with our implementation right now and what we would like to be able to handle in the future.&lt;/p&gt;
&lt;h3&gt;Status Quo&lt;/h3&gt;
&lt;p&gt;After I wrote my last blog entry, we introduced a central idea/interface to our project: &lt;em&gt;short notations&lt;/em&gt;. By using the &lt;em&gt;short notation factory&lt;/em&gt; for growth groups (introduced in &lt;a href=&quot;http://trac.sagemath.org/ticket/18930&quot;&gt;#18930&lt;/a&gt;) it becomes very simple to construct the desired growth group. Essentially, &lt;em&gt;monomial growth groups&lt;/em&gt; (cf. &lt;a href=&quot;http://trac.sagemath.org/17600&quot;&gt;#17600&lt;/a&gt;), i.e. groups that contain elements of the form &lt;pre class=&quot;crayon-plain-tag&quot;&gt;variable^power&lt;/pre&gt; (for a fixed variable and powers from some base ring, e.g. the Integer Ring or even the Rational Field) are represented by &lt;pre class=&quot;crayon-plain-tag&quot;&gt;variable^base&lt;/pre&gt; , where the base ring is also specified via its shortened name. The &lt;em&gt;short notation factory&lt;/em&gt; then enables us to do the following:&lt;/p&gt;&lt;pre class=&quot;crayon-plain-tag&quot;&gt;sage: from sage.groups.asymptotic_growth_group import GrowthGroup
sage: G = GrowthGroup('x^ZZ'); G
Growth Group x^ZZ
sage: G.an_element()
x
sage: G = GrowthGroup('x^QQ'); G
Growth Group x^QQ
sage: G.an_element()
x^(1/2)&lt;/pre&gt;&lt;p&gt;Naturally, this interface carries over to the generation of asymptotic rings: instead of the (slightly dubious) &lt;pre class=&quot;crayon-plain-tag&quot;&gt;&quot;monomial&quot;&lt;/pre&gt; keyword advertised in my last blog entry, we can now actually construct the growth group by specifying the respective growth group via its short representation:&lt;/p&gt;&lt;pre class=&quot;crayon-plain-tag&quot;&gt;sage: R.&amp;lt;x&amp;gt; = AsymptoticRing('x^ZZ', QQ); R
Asymptotic Ring &amp;lt;x^ZZ&amp;gt; over Rational Field
sage: (x^2 + O(x))^50
x^100 + O(x^99)&lt;/pre&gt;&lt;p&gt;Recently, we also implemented another type of growth group: &lt;em&gt;exponential growth groups&lt;/em&gt; (see &lt;a href=&quot;http://trac.sagemath.org/ticket/19028&quot;&gt;#19028&lt;/a&gt;). These groups represent elements of the form &lt;pre class=&quot;crayon-plain-tag&quot;&gt;base^variable&lt;/pre&gt; where the base is from some multiplicative group. For example, we could do the following:&lt;/p&gt;&lt;pre class=&quot;crayon-plain-tag&quot;&gt;sage: G = GrowthGroup('QQ^x'); G
Growth Group QQ^x
sage: G.an_element()
(1/2)^x
sage: G(2^x) * G(3^x)
6^x
sage: G(5^x) * G((1/7)^x)
(5/7)^x&lt;/pre&gt;&lt;p&gt;Note: unfortunately, we did not implement a function that allows taking some element from some growth group (e.g. &lt;pre class=&quot;crayon-plain-tag&quot;&gt;x&lt;/pre&gt; from a monomial growth group) as the variable in an exponential growth group &lt;strong&gt;yet&lt;/strong&gt;. Implementing some way to &amp;#8220;change&amp;#8221; between growth groups by taking the log or the exponential function is one of our next steps.&lt;/p&gt;
&lt;p&gt;We also made this &lt;em&gt;short notation&lt;/em&gt; a central interface for working with &lt;em&gt;cartesian products&lt;/em&gt;. This is implemented in &lt;a href=&quot;http://trac.sagemath.org/ticket/18587&quot;&gt;#18587&lt;/a&gt;. For example, this allows to construct growth groups containing elements like $2^x \sqrt[5]{x^2} \log(x)^2$:&lt;/p&gt;&lt;pre class=&quot;crayon-plain-tag&quot;&gt;sage: G = GrowthGroup('QQ^x * x^QQ * log(x)^ZZ'); G
Growth Group QQ^x * x^QQ * log(x)^ZZ
sage: G.an_element()
(1/2)^x * x^(1/2) * log(x)
sage: G(2^x * x^(2/5) * log(x)^2)
2^x * x^(2/5) * log(x)^2&lt;/pre&gt;&lt;p&gt;Simple parsing from the symbolic ring (and from strings) is implemented. Like I have written above, operations like &lt;pre class=&quot;crayon-plain-tag&quot;&gt;2^G(x)&lt;/pre&gt; or &lt;pre class=&quot;crayon-plain-tag&quot;&gt;log(G(x))&lt;/pre&gt; are one of the next steps on our roadmap.&lt;/p&gt;
&lt;h3&gt;Further Steps&lt;/h3&gt;
&lt;p&gt;Of course, having an easy way to generate growth groups (and thus also asymptotic rings) is nice &amp;#8212; however, it would be even better if the process of finding the correct parent would be even more automated. Unfortunately, this requires some non-trivial effort regarding the pushout construction &amp;#8212; which will certainly not happen within the GSoC project.&lt;/p&gt;
&lt;p&gt;As soon as we have an efficient way to &amp;#8220;switch&amp;#8221; between factors of a growth group (e.g. by taking the logarithm or the exponential function), this has to be carried over up to the asymptotic ring. Operations like&lt;/p&gt;&lt;pre class=&quot;crayon-plain-tag&quot;&gt;sage: 2^(x^2 + O(x))
2^(x^2) * 2^(O(x))&lt;/pre&gt;&lt;p&gt;where the output could also be &lt;pre class=&quot;crayon-plain-tag&quot;&gt;2^(x^2) * O(x^g)&lt;/pre&gt; , where $g$ is determined by &lt;pre class=&quot;crayon-plain-tag&quot;&gt;series_precision()&lt;/pre&gt; .&lt;/p&gt;
&lt;p&gt;Division of asymptotic expressions can be realized with just about the same idea, for example:&lt;/p&gt;
&lt;p&gt;\[ \frac{1}{x^2 + O(x)} = \frac{1}{x^2} \frac{1}{1 + O(1/x)} = x^{-2} + O(x^{-3}), \]&lt;/p&gt;
&lt;p&gt;and so on. If an infinite series occurs, it will have to be cut using an $O$-Term, most likely somehow depending on &lt;pre class=&quot;crayon-plain-tag&quot;&gt;series_precision()&lt;/pre&gt; as well.&lt;/p&gt;
&lt;p&gt;Ultimately, we would also like to incorporate, for example, Stirling&amp;#8217;s approximation of the factorial such that we could do something like&lt;/p&gt;&lt;pre class=&quot;crayon-plain-tag&quot;&gt;sage: n.factorial()
sqrt(2*pi) * e^(n*log(n)) * (1/e)^n * n^(1/2) + ...&lt;/pre&gt;&lt;p&gt;which then can be used to obtain asymptotic expansions of binomial coefficients like $\binom{2n}{n}$:&lt;/p&gt;&lt;pre class=&quot;crayon-plain-tag&quot;&gt;sage: (2*n).factorial() / (n.factorial()^2)
1/sqrt(pi) * 4^n * n^(-1/2) + ...&lt;/pre&gt;&lt;p&gt;As you can see, there is still a lot of work within our &amp;#8220;Asymptotic Expressions&amp;#8221; project &amp;#8212; nevertheless, with the minimal working prototype and the ability to create cartesian products of growth groups, the fundament for all of this is already implemented! &lt;img src=&quot;https://s.w.org/images/core/emoji/72x72/1f609.png&quot; alt=&quot;😉&quot; class=&quot;wp-smiley&quot; /&gt;&lt;/p&gt;</content>
		<author>
			<name>Benjamin Hackl</name>
			<uri>http://benjamin-hackl.at/tag/gsoc15/</uri>
		</author>
		<source>
			<title type="html">GSoC15 – Benjamin Hackl</title>
			<link rel="self" href="http://benjamin-hackl.at/tag/gsoc15/feed/"/>
			<id>http://benjamin-hackl.at/tag/gsoc15/feed/</id>
			<updated>2016-08-01T15:30:12+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Conclusion of the Main Part of the Project</title>
		<link href="http://borassisagemath.blogspot.com/2015/08/conclusion-of-main-part-of-project.html"/>
		<id>tag:blogger.com,1999:blog-8558001006126216932.post-3180150143433384427</id>
		<updated>2015-08-16T06:59:35+00:00</updated>
		<content type="html">&lt;span&gt;Hi!&lt;/span&gt;&lt;br /&gt;&lt;span&gt;In this post, I will summarize the results obtained with the inclusion in Sage of Boost and igraph libraries. This was the main part of my Google Summer of Code project, and it was completed yesterday, when ticket 19003 was closed.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;We have increased the number of graph algorithms available in Sage from 66 to 98 (according to the list used in the initial comparison of the graph libraries [1]). Furthermore, we decreased the running-time of several Sage algorithms: in some cases, we have been able to improve the asymptotic running-time, obtaining up to 10000x improvements in our tests. Finally, during the inclusion of external algorithms, we have refactored and cleaned some of Sage source code, like the shortest path routines: we have standardized the input and the output of 15 routines related to shortest paths, and we have removed duplicate code as much as possible.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;More specifically, the first part of the project was the inclusion of Boost graph library: since the library is only available in C++, we had to develop an interface. This interface lets us convert easily a Sage graph into a Boost graph, and run algorithms on the converted graph. Then, we have written routines to re-translate the output into a Sage-readable format: this way, the complicated Boost library is &quot;hidden&quot;, and users can interact with it as they do with Sage. In particular, we have interfaced the following algorithms:&lt;/span&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;Edge connectivity (trac.sagemath.org/ticket/18564);&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;Clustering coefficient &lt;/span&gt;&lt;span&gt;(trac.sagemath.org/ticket/18811);&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;Cuthill-McKee and King vertex orderings &lt;/span&gt;&lt;span&gt;(trac.sagemath.org/ticket/18876);&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;Minimum spanning tree&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;(trac.sagemath.org/ticket/18910);&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;Dijkstra, Bellman-Ford, Johnson shortest paths&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;(trac.sagemath.org/ticket/18931);&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;span&gt;All these algorithms were either not available in Sage, or quite slow, compared to the Boost routines. As far as we know, Boost does not offer other algorithms that improve Sage algorithms: however, if such algorithms are developed in the future, it will be very easy to include them, using the new interface.&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;In the second part of the project, we included igraph: since this library already offers a Python interface, we decided to include it as an optional package (before it becomes a standard package, at least an year should pass [2]). To install the package, it is enough to type the following instruction from the Sage root folder:&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;&lt;span&gt;sage -i igraph&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; # To install the igraph C core&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;span&gt;sage -i python_igraph # To install the Python interface&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Then, we can easily interact with igraph: for a list of available routines, it is enough to type &quot;&lt;span&gt;igraph.&lt;/span&gt;&quot; and click tab twice. To convert a Sage graph &lt;span&gt;g_sage&lt;/span&gt; into an igraph graph it is enough to type &lt;span&gt;g_igraph = g_sage.igraph_graph()&lt;/span&gt;, while a Sage graph can be instantiated from an igraph graph through &lt;span&gt;g_sage=Graph(g_igraph)&lt;/span&gt; or &lt;span&gt;g_sage=DiGraph(g_igraph)&lt;/span&gt;. This way, all igraph algorithms are now available in Sage.&lt;br /&gt;&lt;br /&gt;Furthermore, we have included the igraph maximum flow algoritm inside the Sage corresponding function, obtaining significant improvements (for more information and benchmarks, we refer to ticket 19003 [3]).&lt;br /&gt;&lt;br /&gt;In conclusion, I think the project reached its main goal, the original plan was followed very closely, and we have been able to overcome all problems.&lt;br /&gt;&lt;br /&gt;Before closing this post, I would like to thank many people that helped me with great advices, and who provided great solutions to all the problems I faced. First of all, my mentor David Coudert: he always answered very fast to all my queries, and he gave me great suggestions to improve the quality of the code I wrote. Then, a very big help came from Nathann Cohen, who often cooperated with David in reviewing my code and proposing new solutions. Moreover, I have to thank Martin Cross, who gave me good suggestions with Boost graph library, and Volker Braun, who closed all my ticket. Finally, I have to thank the whole Sage community for giving me this great opportunity!&lt;br /&gt;&lt;br /&gt;[1] https://docs.google.com/spreadsheets/d/1Iu1hkQtRn9J-sgfZbQTu2RoXzyjoMEWP5-cm3nAwnWE/edit?usp=sharing&lt;br /&gt;[2] http://doc.sagemath.org/html/en/developer/coding_in_other.html&lt;br /&gt;[3] http://trac.sagemath.org/ticket/19003</content>
		<author>
			<name>Michele Borassi</name>
			<email>noreply@blogger.com</email>
			<uri>http://borassisagemath.blogspot.com/</uri>
		</author>
		<source>
			<title type="html">Performance Improvements for the Graph Module of Sagemath</title>
			<link rel="self" href="http://borassisagemath.blogspot.com/feeds/posts/default"/>
			<id>tag:blogger.com,1999:blog-8558001006126216932</id>
			<updated>2016-08-12T02:30:10+00:00</updated>
		</source>
	</entry>

</feed>
